// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

import { Script } from "forge-std/Script.sol";
import { console } from "forge-std/console.sol";
import { StoreSwitch } from "@latticexyz/store/src/StoreSwitch.sol";

import { ChipMetadata, ChipMetadataData } from "../src/codegen/tables/ChipMetadata.sol";
import { IWorld } from "../src/codegen/world/IWorld.sol";
import { Tokens } from "../src/codegen/tables/Tokens.sol";
import { NFTs } from "../src/codegen/tables/NFTs.sol";
import { ERC20Metadata } from "../src/codegen/tables/ERC20Metadata.sol";
import { ERC721Metadata } from "../src/codegen/tables/ERC721Metadata.sol";
import { ItemShop } from "../src/codegen/tables/ItemShop.sol";
import { ChipAttachment } from "../src/codegen/tables/ChipAttachment.sol";

contract Upgrade is Script {
  function run(address worldAddress) external {
    // Specify a store so that you can use tables directly in PostDeploy
    StoreSwitch.setStoreAddress(worldAddress);

    // Load the private key from the `PRIVATE_KEY` environment variable (in .env)
    uint256 deployerPrivateKey = vm.envUint("PRIVATE_KEY");

    // Start broadcasting transactions from the deployer account
    vm.startBroadcast(deployerPrivateKey);

    // console.logUint(ItemShop.getBalance(0x000000000000000000000000000000000000000000000000000000000002ec2d));
    // console.log(ItemShop.getPaymentToken(0x000000000000000000000000000000000000000000000000000000000002ec2d));
    // ItemShop.setBalance(0x000000000000000000000000000000000000000000000000000000000002ec2d, type(uint256).max);
    bytes32[] memory entityIds = new bytes32[](66);
    entityIds[0] = 0x000000000000000000000000000000000000000000000000000000000004d5fd;
    entityIds[1] = 0x000000000000000000000000000000000000000000000000000000000004d5fe;
    entityIds[2] = 0x000000000000000000000000000000000000000000000000000000000004d5ff;
    entityIds[3] = 0x000000000000000000000000000000000000000000000000000000000004d600;
    entityIds[4] = 0x000000000000000000000000000000000000000000000000000000000004d605;
    entityIds[5] = 0x000000000000000000000000000000000000000000000000000000000004d60a;
    entityIds[6] = 0x000000000000000000000000000000000000000000000000000000000004d60b;
    entityIds[7] = 0x000000000000000000000000000000000000000000000000000000000004d60c;
    entityIds[8] = 0x000000000000000000000000000000000000000000000000000000000004d60d;
    entityIds[9] = 0x000000000000000000000000000000000000000000000000000000000004d613;
    entityIds[10] = 0x000000000000000000000000000000000000000000000000000000000004d614;
    entityIds[11] = 0x000000000000000000000000000000000000000000000000000000000004d615;
    entityIds[12] = 0x000000000000000000000000000000000000000000000000000000000004d616;
    entityIds[13] = 0x000000000000000000000000000000000000000000000000000000000004d61b;
    entityIds[14] = 0x000000000000000000000000000000000000000000000000000000000004d620;
    entityIds[15] = 0x000000000000000000000000000000000000000000000000000000000004d621;
    entityIds[16] = 0x000000000000000000000000000000000000000000000000000000000004d622;
    entityIds[17] = 0x000000000000000000000000000000000000000000000000000000000004d623;
    entityIds[18] = 0x000000000000000000000000000000000000000000000000000000000004ddab;
    entityIds[19] = 0x000000000000000000000000000000000000000000000000000000000004ddac;
    entityIds[20] = 0x000000000000000000000000000000000000000000000000000000000004ddad;
    entityIds[21] = 0x000000000000000000000000000000000000000000000000000000000004ddaf;
    entityIds[22] = 0x000000000000000000000000000000000000000000000000000000000004ddb0;
    entityIds[23] = 0x000000000000000000000000000000000000000000000000000000000004ddb1;
    entityIds[24] = 0x000000000000000000000000000000000000000000000000000000000004ddb6;
    entityIds[25] = 0x000000000000000000000000000000000000000000000000000000000004ddbb;
    entityIds[26] = 0x000000000000000000000000000000000000000000000000000000000004ddbc;
    entityIds[27] = 0x000000000000000000000000000000000000000000000000000000000004ddbe;
    entityIds[28] = 0x000000000000000000000000000000000000000000000000000000000004ddc0;
    entityIds[29] = 0x000000000000000000000000000000000000000000000000000000000004ddc5;
    entityIds[30] = 0x000000000000000000000000000000000000000000000000000000000004ddc6;
    entityIds[31] = 0x000000000000000000000000000000000000000000000000000000000004ddc7;
    entityIds[32] = 0x000000000000000000000000000000000000000000000000000000000004ddc8;
    entityIds[33] = 0x000000000000000000000000000000000000000000000000000000000004ddc9;
    entityIds[34] = 0x000000000000000000000000000000000000000000000000000000000004ddca;
    entityIds[35] = 0x000000000000000000000000000000000000000000000000000000000004ddcf;
    entityIds[36] = 0x000000000000000000000000000000000000000000000000000000000004ddd4;
    entityIds[37] = 0x000000000000000000000000000000000000000000000000000000000004ddd5;
    entityIds[38] = 0x000000000000000000000000000000000000000000000000000000000004ddd6;
    entityIds[39] = 0x000000000000000000000000000000000000000000000000000000000004ddd7;
    entityIds[40] = 0x000000000000000000000000000000000000000000000000000000000004ddd8;
    entityIds[41] = 0x000000000000000000000000000000000000000000000000000000000004ddd9;
    entityIds[42] = 0x0000000000000000000000000000000000000000000000000000000000051632;
    entityIds[43] = 0x0000000000000000000000000000000000000000000000000000000000051aac;
    entityIds[44] = 0x0000000000000000000000000000000000000000000000000000000000051ab5;
    entityIds[45] = 0x0000000000000000000000000000000000000000000000000000000000051abe;
    entityIds[46] = 0x0000000000000000000000000000000000000000000000000000000000057a8d;
    entityIds[47] = 0x0000000000000000000000000000000000000000000000000000000000057bf4;
    entityIds[48] = 0x0000000000000000000000000000000000000000000000000000000000058656;
    entityIds[49] = 0x0000000000000000000000000000000000000000000000000000000000059095;
    entityIds[50] = 0x000000000000000000000000000000000000000000000000000000000005d2fc;
    entityIds[51] = 0x000000000000000000000000000000000000000000000000000000000005d441;
    entityIds[52] = 0x0000000000000000000000000000000000000000000000000000000000064ed4;
    entityIds[53] = 0x000000000000000000000000000000000000000000000000000000000006c76e;
    entityIds[54] = 0x000000000000000000000000000000000000000000000000000000000008a395;
    entityIds[55] = 0x000000000000000000000000000000000000000000000000000000000008b5f4;
    entityIds[56] = 0x00000000000000000000000000000000000000000000000000000000000902be;
    entityIds[57] = 0x000000000000000000000000000000000000000000000000000000000009e6ab;
    entityIds[58] = 0x00000000000000000000000000000000000000000000000000000000000da819;
    entityIds[59] = 0x00000000000000000000000000000000000000000000000000000000000e4630;
    entityIds[60] = 0x00000000000000000000000000000000000000000000000000000000000e52bd;
    entityIds[61] = 0x00000000000000000000000000000000000000000000000000000000000e5ca2;
    entityIds[62] = 0x00000000000000000000000000000000000000000000000000000000000e8ecd;
    entityIds[63] = 0x00000000000000000000000000000000000000000000000000000000000e9052;
    entityIds[64] = 0x000000000000000000000000000000000000000000000000000000000011fa2c;
    entityIds[65] = 0x0000000000000000000000000000000000000000000000000000000000141e10;

    for (uint i = 0; i < entityIds.length; i++) {
      if (ItemShop.getPaymentToken(entityIds[i]) == address(0)) {
        console.logBytes32(entityIds[i]);
        console.logAddress(ChipAttachment.get(entityIds[i]));
      }
    }

    // console.logUint(NFTs.lengthNfts(0x3A971f521dde3434B6a3409ABCb77066Dd5123C3));
    // NFTs.deleteRecord(0x3A971f521dde3434B6a3409ABCb77066Dd5123C3);
    // console.log(ERC721Metadata.getName(0x45fCbe727564835ACfe428e41997e1c29697bB2B));
    // ERC721Metadata.deleteRecord(0x45fCbe727564835ACfe428e41997e1c29697bB2B);
    // console.log(ERC20Metadata.getIcon(0x2FF827f8750dbe1A7dbAD0f7354d0D0395551d2F));
    // ERC20Metadata.setName(0x2FF827f8750dbe1A7dbAD0f7354d0D0395551d2F, "Settlers Union Bank Coin");

    // address chipAddress = 0x7E979136dF1D741991D4e1769B576Ab2D65aC5F3;
    // console.log(ChipMetadata.getName(chipAddress));
    // ChipMetadata.deleteRecord(chipAddress);

    vm.stopBroadcast();
  }
}
