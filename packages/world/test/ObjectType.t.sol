// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

import { DustTest, console } from "./DustTest.sol";

import { ObjectType, ObjectTypeLib, ObjectTypes } from "../src/types/ObjectType.sol";

contract ObjectTypeTest is DustTest {
  function testCategories() public pure {
    {
      assertTrue(ObjectTypes.Air.isNonSolid(), "isNonSolid");
      assertTrue(ObjectTypes.Water.isNonSolid(), "isNonSolid");
      assertFalse(ObjectTypes.Null.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Lava.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Stone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Bedrock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Deepslate.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Granite.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Tuff.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Calcite.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Basalt.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SmoothBasalt.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Andesite.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Diorite.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Cobblestone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MossyCobblestone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Obsidian.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Dripstone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Blackstone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CobbledDeepslate.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Amethyst.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Glowstone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Grass.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Dirt.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Moss.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Podzol.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DirtPath.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Mud.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PackedMud.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Farmland.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.WetFarmland.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Snow.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Ice.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.UnrevealedOre.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CoalOre.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CopperOre.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.IronOre.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GoldOre.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DiamondOre.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.NeptuniumOre.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Gravel.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Sand.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.RedSand.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Sandstone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.RedSandstone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Clay.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AnyTerracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Terracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BrownTerracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OrangeTerracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.WhiteTerracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.LightGrayTerracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.YellowTerracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.RedTerracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.LightBlueTerracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CyanTerracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BlackTerracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PurpleTerracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BlueTerracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MagentaTerracotta.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AnyLog.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OakLog.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BirchLog.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.JungleLog.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SakuraLog.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AcaciaLog.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SpruceLog.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DarkOakLog.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MangroveLog.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AnyLeaf.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OakLeaf.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BirchLeaf.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.JungleLeaf.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SakuraLeaf.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SpruceLeaf.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AcaciaLeaf.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DarkOakLeaf.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AzaleaLeaf.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MangroveLeaf.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MangroveRoots.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AzaleaFlower.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BellFlower.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DandelionFlower.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DaylilyFlower.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.LilacFlower.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.RoseFlower.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.FireFlower.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MorninggloryFlower.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PeonyFlower.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Ultraviolet.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SunFlower.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.FlyTrap.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.FescueGrass.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SwitchGrass.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.VinesBush.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.IvyVine.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.HempBush.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Coral.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SeaAnemone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Algae.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.HornCoralBlock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.FireCoralBlock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.TubeCoralBlock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BubbleCoralBlock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BrainCoralBlock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SpiderWeb.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Bone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GoldenMushroom.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.RedMushroom.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CoffeeBush.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.StrawberryBush.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.RaspberryBush.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Wheat.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CottonBush.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Pumpkin.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Melon.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.RedMushroomBlock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BrownMushroomBlock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MushroomStem.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BambooBush.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Cactus.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AnyPlank.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OakPlanks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BirchPlanks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.JunglePlanks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SakuraPlanks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SprucePlanks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AcaciaPlanks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DarkOakPlanks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MangrovePlanks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CopperBlock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.IronBlock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GoldBlock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DiamondBlock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.NeptuniumBlock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.WheatSeed.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PumpkinSeed.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MelonSeed.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OakSapling.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BirchSapling.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.JungleSapling.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SakuraSapling.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AcaciaSapling.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SpruceSapling.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DarkOakSapling.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MangroveSapling.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Furnace.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Workbench.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Powerstone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.ForceField.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Chest.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SpawnTile.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Bed.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.TextSign.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Torch.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Stonecutter.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.StoneBricks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.TuffBricks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DeepslateBricks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedAndesite.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedGranite.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedDiorite.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedTuff.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedBasalt.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedBlackstone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.ChiseledDeepslate.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.ChiseledSandstone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CrackedStoneBricks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CrackedTuffBricks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SmoothSandstone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SmoothRedSandstone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SmoothStone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Cotton.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CottonSeed.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Glass.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Brick.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BrickBlock.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MudBricks.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Paper.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Book.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Stick.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.RedDye.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.YellowDye.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BlueDye.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GreenDye.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.WhiteDye.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BlackDye.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BrownDye.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OrangeDye.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PinkDye.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.LimeDye.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CyanDye.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GrayDye.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PurpleDye.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.WhiteConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OrangeConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MagentaConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.YellowConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.LimeConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PinkConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GrayConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CyanConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PurpleConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BlueConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BrownConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GreenConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.RedConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BlackConcretePowder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.WhiteConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OrangeConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MagentaConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.LightBlueConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.YellowConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.LimeConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PinkConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GrayConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.LightGrayConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CyanConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PurpleConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BlueConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BrownConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GreenConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.RedConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BlackConcrete.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GlassPane.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OakDoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BirchDoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.JungleDoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SakuraDoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AcaciaDoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SpruceDoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DarkOakDoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MangroveDoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.IronDoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OakTrapdoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BirchTrapdoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.JungleTrapdoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SakuraTrapdoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SpruceTrapdoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MangroveTrapdoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.IronTrapdoor.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OakFence.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BirchFence.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.JungleFence.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SakuraFence.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AcaciaFence.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SpruceFence.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DarkOakFence.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MangroveFence.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OakFenceGate.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BirchFenceGate.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.JungleFenceGate.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SakuraFenceGate.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AcaciaFenceGate.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SpruceFenceGate.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DarkOakFenceGate.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MangroveFenceGate.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.IronBars.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Lantern.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Ladder.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Barrel.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Bookshelf.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Carpet.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.FlowerPot.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Lodestone.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.StoneStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CobblestoneStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.StoneBricksStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SmoothStoneStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AndesiteStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GraniteStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DioriteStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.TuffStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BasaltStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BlackstoneStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedTuffStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DeepslateStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SandstoneStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.RedSandstoneStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BrickBlockStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MudBricksStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.TuffBricksStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OakPlanksStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BirchPlanksStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.JunglePlanksStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SprucePlanksStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.StoneSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CobblestoneSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.StoneBricksSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SmoothStoneSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AndesiteSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GraniteSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DioriteSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.TuffSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BasaltSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BlackstoneSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedTuffSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DeepslateSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SandstoneSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.RedSandstoneSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BrickBlockSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MudBricksSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.TuffBricksSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.OakPlanksSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BirchPlanksSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.JunglePlanksSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SprucePlanksSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.StoneWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CobblestoneWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.StoneBricksWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.AndesiteWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GraniteWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DioriteWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.TuffWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BasaltWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BlackstoneWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedGraniteWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedDioriteWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedTuffWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedBasaltWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DeepslateWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DeepslateBricksWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.SandstoneWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.RedSandstoneWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.BrickBlockWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MudBricksWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.TuffBricksWall.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.WoodenPick.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CopperPick.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.IronPick.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GoldPick.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DiamondPick.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.NeptuniumPick.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.WoodenAxe.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CopperAxe.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.IronAxe.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GoldAxe.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.DiamondAxe.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.NeptuniumAxe.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.WoodenWhacker.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.CopperWhacker.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.IronWhacker.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.WoodenHoe.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.GoldBar.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.IronBar.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Diamond.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.NeptuniumBar.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Bucket.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.WaterBucket.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.WheatSlop.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.PumpkinSoup.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.MelonSmoothie.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Battery.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Player.isNonSolid(), "!isNonSolid");
      assertFalse(ObjectTypes.Fragment.isNonSolid(), "!isNonSolid");
    }

    {
      assertTrue(ObjectTypes.AnyPlank.isAny(), "isAny");
      assertTrue(ObjectTypes.AnyLog.isAny(), "isAny");
      assertTrue(ObjectTypes.AnyLeaf.isAny(), "isAny");
      assertTrue(ObjectTypes.AnyTerracotta.isAny(), "isAny");
      assertFalse(ObjectTypes.Null.isAny(), "!isAny");
      assertFalse(ObjectTypes.Air.isAny(), "!isAny");
      assertFalse(ObjectTypes.Water.isAny(), "!isAny");
      assertFalse(ObjectTypes.Lava.isAny(), "!isAny");
      assertFalse(ObjectTypes.Stone.isAny(), "!isAny");
      assertFalse(ObjectTypes.Bedrock.isAny(), "!isAny");
      assertFalse(ObjectTypes.Deepslate.isAny(), "!isAny");
      assertFalse(ObjectTypes.Granite.isAny(), "!isAny");
      assertFalse(ObjectTypes.Tuff.isAny(), "!isAny");
      assertFalse(ObjectTypes.Calcite.isAny(), "!isAny");
      assertFalse(ObjectTypes.Basalt.isAny(), "!isAny");
      assertFalse(ObjectTypes.SmoothBasalt.isAny(), "!isAny");
      assertFalse(ObjectTypes.Andesite.isAny(), "!isAny");
      assertFalse(ObjectTypes.Diorite.isAny(), "!isAny");
      assertFalse(ObjectTypes.Cobblestone.isAny(), "!isAny");
      assertFalse(ObjectTypes.MossyCobblestone.isAny(), "!isAny");
      assertFalse(ObjectTypes.Obsidian.isAny(), "!isAny");
      assertFalse(ObjectTypes.Dripstone.isAny(), "!isAny");
      assertFalse(ObjectTypes.Blackstone.isAny(), "!isAny");
      assertFalse(ObjectTypes.CobbledDeepslate.isAny(), "!isAny");
      assertFalse(ObjectTypes.Amethyst.isAny(), "!isAny");
      assertFalse(ObjectTypes.Glowstone.isAny(), "!isAny");
      assertFalse(ObjectTypes.Grass.isAny(), "!isAny");
      assertFalse(ObjectTypes.Dirt.isAny(), "!isAny");
      assertFalse(ObjectTypes.Moss.isAny(), "!isAny");
      assertFalse(ObjectTypes.Podzol.isAny(), "!isAny");
      assertFalse(ObjectTypes.DirtPath.isAny(), "!isAny");
      assertFalse(ObjectTypes.Mud.isAny(), "!isAny");
      assertFalse(ObjectTypes.PackedMud.isAny(), "!isAny");
      assertFalse(ObjectTypes.Farmland.isAny(), "!isAny");
      assertFalse(ObjectTypes.WetFarmland.isAny(), "!isAny");
      assertFalse(ObjectTypes.Snow.isAny(), "!isAny");
      assertFalse(ObjectTypes.Ice.isAny(), "!isAny");
      assertFalse(ObjectTypes.UnrevealedOre.isAny(), "!isAny");
      assertFalse(ObjectTypes.CoalOre.isAny(), "!isAny");
      assertFalse(ObjectTypes.CopperOre.isAny(), "!isAny");
      assertFalse(ObjectTypes.IronOre.isAny(), "!isAny");
      assertFalse(ObjectTypes.GoldOre.isAny(), "!isAny");
      assertFalse(ObjectTypes.DiamondOre.isAny(), "!isAny");
      assertFalse(ObjectTypes.NeptuniumOre.isAny(), "!isAny");
      assertFalse(ObjectTypes.Gravel.isAny(), "!isAny");
      assertFalse(ObjectTypes.Sand.isAny(), "!isAny");
      assertFalse(ObjectTypes.RedSand.isAny(), "!isAny");
      assertFalse(ObjectTypes.Sandstone.isAny(), "!isAny");
      assertFalse(ObjectTypes.RedSandstone.isAny(), "!isAny");
      assertFalse(ObjectTypes.Clay.isAny(), "!isAny");
      assertFalse(ObjectTypes.Terracotta.isAny(), "!isAny");
      assertFalse(ObjectTypes.BrownTerracotta.isAny(), "!isAny");
      assertFalse(ObjectTypes.OrangeTerracotta.isAny(), "!isAny");
      assertFalse(ObjectTypes.WhiteTerracotta.isAny(), "!isAny");
      assertFalse(ObjectTypes.LightGrayTerracotta.isAny(), "!isAny");
      assertFalse(ObjectTypes.YellowTerracotta.isAny(), "!isAny");
      assertFalse(ObjectTypes.RedTerracotta.isAny(), "!isAny");
      assertFalse(ObjectTypes.LightBlueTerracotta.isAny(), "!isAny");
      assertFalse(ObjectTypes.CyanTerracotta.isAny(), "!isAny");
      assertFalse(ObjectTypes.BlackTerracotta.isAny(), "!isAny");
      assertFalse(ObjectTypes.PurpleTerracotta.isAny(), "!isAny");
      assertFalse(ObjectTypes.BlueTerracotta.isAny(), "!isAny");
      assertFalse(ObjectTypes.MagentaTerracotta.isAny(), "!isAny");
      assertFalse(ObjectTypes.OakLog.isAny(), "!isAny");
      assertFalse(ObjectTypes.BirchLog.isAny(), "!isAny");
      assertFalse(ObjectTypes.JungleLog.isAny(), "!isAny");
      assertFalse(ObjectTypes.SakuraLog.isAny(), "!isAny");
      assertFalse(ObjectTypes.AcaciaLog.isAny(), "!isAny");
      assertFalse(ObjectTypes.SpruceLog.isAny(), "!isAny");
      assertFalse(ObjectTypes.DarkOakLog.isAny(), "!isAny");
      assertFalse(ObjectTypes.MangroveLog.isAny(), "!isAny");
      assertFalse(ObjectTypes.OakLeaf.isAny(), "!isAny");
      assertFalse(ObjectTypes.BirchLeaf.isAny(), "!isAny");
      assertFalse(ObjectTypes.JungleLeaf.isAny(), "!isAny");
      assertFalse(ObjectTypes.SakuraLeaf.isAny(), "!isAny");
      assertFalse(ObjectTypes.SpruceLeaf.isAny(), "!isAny");
      assertFalse(ObjectTypes.AcaciaLeaf.isAny(), "!isAny");
      assertFalse(ObjectTypes.DarkOakLeaf.isAny(), "!isAny");
      assertFalse(ObjectTypes.AzaleaLeaf.isAny(), "!isAny");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isAny(), "!isAny");
      assertFalse(ObjectTypes.MangroveLeaf.isAny(), "!isAny");
      assertFalse(ObjectTypes.MangroveRoots.isAny(), "!isAny");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isAny(), "!isAny");
      assertFalse(ObjectTypes.AzaleaFlower.isAny(), "!isAny");
      assertFalse(ObjectTypes.BellFlower.isAny(), "!isAny");
      assertFalse(ObjectTypes.DandelionFlower.isAny(), "!isAny");
      assertFalse(ObjectTypes.DaylilyFlower.isAny(), "!isAny");
      assertFalse(ObjectTypes.LilacFlower.isAny(), "!isAny");
      assertFalse(ObjectTypes.RoseFlower.isAny(), "!isAny");
      assertFalse(ObjectTypes.FireFlower.isAny(), "!isAny");
      assertFalse(ObjectTypes.MorninggloryFlower.isAny(), "!isAny");
      assertFalse(ObjectTypes.PeonyFlower.isAny(), "!isAny");
      assertFalse(ObjectTypes.Ultraviolet.isAny(), "!isAny");
      assertFalse(ObjectTypes.SunFlower.isAny(), "!isAny");
      assertFalse(ObjectTypes.FlyTrap.isAny(), "!isAny");
      assertFalse(ObjectTypes.FescueGrass.isAny(), "!isAny");
      assertFalse(ObjectTypes.SwitchGrass.isAny(), "!isAny");
      assertFalse(ObjectTypes.VinesBush.isAny(), "!isAny");
      assertFalse(ObjectTypes.IvyVine.isAny(), "!isAny");
      assertFalse(ObjectTypes.HempBush.isAny(), "!isAny");
      assertFalse(ObjectTypes.Coral.isAny(), "!isAny");
      assertFalse(ObjectTypes.SeaAnemone.isAny(), "!isAny");
      assertFalse(ObjectTypes.Algae.isAny(), "!isAny");
      assertFalse(ObjectTypes.HornCoralBlock.isAny(), "!isAny");
      assertFalse(ObjectTypes.FireCoralBlock.isAny(), "!isAny");
      assertFalse(ObjectTypes.TubeCoralBlock.isAny(), "!isAny");
      assertFalse(ObjectTypes.BubbleCoralBlock.isAny(), "!isAny");
      assertFalse(ObjectTypes.BrainCoralBlock.isAny(), "!isAny");
      assertFalse(ObjectTypes.SpiderWeb.isAny(), "!isAny");
      assertFalse(ObjectTypes.Bone.isAny(), "!isAny");
      assertFalse(ObjectTypes.GoldenMushroom.isAny(), "!isAny");
      assertFalse(ObjectTypes.RedMushroom.isAny(), "!isAny");
      assertFalse(ObjectTypes.CoffeeBush.isAny(), "!isAny");
      assertFalse(ObjectTypes.StrawberryBush.isAny(), "!isAny");
      assertFalse(ObjectTypes.RaspberryBush.isAny(), "!isAny");
      assertFalse(ObjectTypes.Wheat.isAny(), "!isAny");
      assertFalse(ObjectTypes.CottonBush.isAny(), "!isAny");
      assertFalse(ObjectTypes.Pumpkin.isAny(), "!isAny");
      assertFalse(ObjectTypes.Melon.isAny(), "!isAny");
      assertFalse(ObjectTypes.RedMushroomBlock.isAny(), "!isAny");
      assertFalse(ObjectTypes.BrownMushroomBlock.isAny(), "!isAny");
      assertFalse(ObjectTypes.MushroomStem.isAny(), "!isAny");
      assertFalse(ObjectTypes.BambooBush.isAny(), "!isAny");
      assertFalse(ObjectTypes.Cactus.isAny(), "!isAny");
      assertFalse(ObjectTypes.OakPlanks.isAny(), "!isAny");
      assertFalse(ObjectTypes.BirchPlanks.isAny(), "!isAny");
      assertFalse(ObjectTypes.JunglePlanks.isAny(), "!isAny");
      assertFalse(ObjectTypes.SakuraPlanks.isAny(), "!isAny");
      assertFalse(ObjectTypes.SprucePlanks.isAny(), "!isAny");
      assertFalse(ObjectTypes.AcaciaPlanks.isAny(), "!isAny");
      assertFalse(ObjectTypes.DarkOakPlanks.isAny(), "!isAny");
      assertFalse(ObjectTypes.MangrovePlanks.isAny(), "!isAny");
      assertFalse(ObjectTypes.CopperBlock.isAny(), "!isAny");
      assertFalse(ObjectTypes.IronBlock.isAny(), "!isAny");
      assertFalse(ObjectTypes.GoldBlock.isAny(), "!isAny");
      assertFalse(ObjectTypes.DiamondBlock.isAny(), "!isAny");
      assertFalse(ObjectTypes.NeptuniumBlock.isAny(), "!isAny");
      assertFalse(ObjectTypes.WheatSeed.isAny(), "!isAny");
      assertFalse(ObjectTypes.PumpkinSeed.isAny(), "!isAny");
      assertFalse(ObjectTypes.MelonSeed.isAny(), "!isAny");
      assertFalse(ObjectTypes.OakSapling.isAny(), "!isAny");
      assertFalse(ObjectTypes.BirchSapling.isAny(), "!isAny");
      assertFalse(ObjectTypes.JungleSapling.isAny(), "!isAny");
      assertFalse(ObjectTypes.SakuraSapling.isAny(), "!isAny");
      assertFalse(ObjectTypes.AcaciaSapling.isAny(), "!isAny");
      assertFalse(ObjectTypes.SpruceSapling.isAny(), "!isAny");
      assertFalse(ObjectTypes.DarkOakSapling.isAny(), "!isAny");
      assertFalse(ObjectTypes.MangroveSapling.isAny(), "!isAny");
      assertFalse(ObjectTypes.Furnace.isAny(), "!isAny");
      assertFalse(ObjectTypes.Workbench.isAny(), "!isAny");
      assertFalse(ObjectTypes.Powerstone.isAny(), "!isAny");
      assertFalse(ObjectTypes.ForceField.isAny(), "!isAny");
      assertFalse(ObjectTypes.Chest.isAny(), "!isAny");
      assertFalse(ObjectTypes.SpawnTile.isAny(), "!isAny");
      assertFalse(ObjectTypes.Bed.isAny(), "!isAny");
      assertFalse(ObjectTypes.TextSign.isAny(), "!isAny");
      assertFalse(ObjectTypes.Torch.isAny(), "!isAny");
      assertFalse(ObjectTypes.Stonecutter.isAny(), "!isAny");
      assertFalse(ObjectTypes.StoneBricks.isAny(), "!isAny");
      assertFalse(ObjectTypes.TuffBricks.isAny(), "!isAny");
      assertFalse(ObjectTypes.DeepslateBricks.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedAndesite.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedGranite.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedDiorite.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedTuff.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedBasalt.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedBlackstone.isAny(), "!isAny");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isAny(), "!isAny");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isAny(), "!isAny");
      assertFalse(ObjectTypes.ChiseledDeepslate.isAny(), "!isAny");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isAny(), "!isAny");
      assertFalse(ObjectTypes.ChiseledSandstone.isAny(), "!isAny");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isAny(), "!isAny");
      assertFalse(ObjectTypes.CrackedStoneBricks.isAny(), "!isAny");
      assertFalse(ObjectTypes.CrackedTuffBricks.isAny(), "!isAny");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isAny(), "!isAny");
      assertFalse(ObjectTypes.SmoothSandstone.isAny(), "!isAny");
      assertFalse(ObjectTypes.SmoothRedSandstone.isAny(), "!isAny");
      assertFalse(ObjectTypes.SmoothStone.isAny(), "!isAny");
      assertFalse(ObjectTypes.Cotton.isAny(), "!isAny");
      assertFalse(ObjectTypes.CottonSeed.isAny(), "!isAny");
      assertFalse(ObjectTypes.Glass.isAny(), "!isAny");
      assertFalse(ObjectTypes.Brick.isAny(), "!isAny");
      assertFalse(ObjectTypes.BrickBlock.isAny(), "!isAny");
      assertFalse(ObjectTypes.MudBricks.isAny(), "!isAny");
      assertFalse(ObjectTypes.Paper.isAny(), "!isAny");
      assertFalse(ObjectTypes.Book.isAny(), "!isAny");
      assertFalse(ObjectTypes.Stick.isAny(), "!isAny");
      assertFalse(ObjectTypes.RedDye.isAny(), "!isAny");
      assertFalse(ObjectTypes.YellowDye.isAny(), "!isAny");
      assertFalse(ObjectTypes.BlueDye.isAny(), "!isAny");
      assertFalse(ObjectTypes.GreenDye.isAny(), "!isAny");
      assertFalse(ObjectTypes.WhiteDye.isAny(), "!isAny");
      assertFalse(ObjectTypes.BlackDye.isAny(), "!isAny");
      assertFalse(ObjectTypes.BrownDye.isAny(), "!isAny");
      assertFalse(ObjectTypes.OrangeDye.isAny(), "!isAny");
      assertFalse(ObjectTypes.PinkDye.isAny(), "!isAny");
      assertFalse(ObjectTypes.LimeDye.isAny(), "!isAny");
      assertFalse(ObjectTypes.CyanDye.isAny(), "!isAny");
      assertFalse(ObjectTypes.GrayDye.isAny(), "!isAny");
      assertFalse(ObjectTypes.PurpleDye.isAny(), "!isAny");
      assertFalse(ObjectTypes.WhiteConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.OrangeConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.MagentaConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.YellowConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.LimeConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.PinkConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.GrayConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.CyanConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.PurpleConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.BlueConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.BrownConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.GreenConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.RedConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.BlackConcretePowder.isAny(), "!isAny");
      assertFalse(ObjectTypes.WhiteConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.OrangeConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.MagentaConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.LightBlueConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.YellowConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.LimeConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.PinkConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.GrayConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.LightGrayConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.CyanConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.PurpleConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.BlueConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.BrownConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.GreenConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.RedConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.BlackConcrete.isAny(), "!isAny");
      assertFalse(ObjectTypes.GlassPane.isAny(), "!isAny");
      assertFalse(ObjectTypes.OakDoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.BirchDoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.JungleDoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.SakuraDoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.AcaciaDoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.SpruceDoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.DarkOakDoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.MangroveDoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.IronDoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.OakTrapdoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.BirchTrapdoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.JungleTrapdoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.SakuraTrapdoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.SpruceTrapdoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.MangroveTrapdoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.IronTrapdoor.isAny(), "!isAny");
      assertFalse(ObjectTypes.OakFence.isAny(), "!isAny");
      assertFalse(ObjectTypes.BirchFence.isAny(), "!isAny");
      assertFalse(ObjectTypes.JungleFence.isAny(), "!isAny");
      assertFalse(ObjectTypes.SakuraFence.isAny(), "!isAny");
      assertFalse(ObjectTypes.AcaciaFence.isAny(), "!isAny");
      assertFalse(ObjectTypes.SpruceFence.isAny(), "!isAny");
      assertFalse(ObjectTypes.DarkOakFence.isAny(), "!isAny");
      assertFalse(ObjectTypes.MangroveFence.isAny(), "!isAny");
      assertFalse(ObjectTypes.OakFenceGate.isAny(), "!isAny");
      assertFalse(ObjectTypes.BirchFenceGate.isAny(), "!isAny");
      assertFalse(ObjectTypes.JungleFenceGate.isAny(), "!isAny");
      assertFalse(ObjectTypes.SakuraFenceGate.isAny(), "!isAny");
      assertFalse(ObjectTypes.AcaciaFenceGate.isAny(), "!isAny");
      assertFalse(ObjectTypes.SpruceFenceGate.isAny(), "!isAny");
      assertFalse(ObjectTypes.DarkOakFenceGate.isAny(), "!isAny");
      assertFalse(ObjectTypes.MangroveFenceGate.isAny(), "!isAny");
      assertFalse(ObjectTypes.IronBars.isAny(), "!isAny");
      assertFalse(ObjectTypes.Lantern.isAny(), "!isAny");
      assertFalse(ObjectTypes.Ladder.isAny(), "!isAny");
      assertFalse(ObjectTypes.Barrel.isAny(), "!isAny");
      assertFalse(ObjectTypes.Bookshelf.isAny(), "!isAny");
      assertFalse(ObjectTypes.Carpet.isAny(), "!isAny");
      assertFalse(ObjectTypes.FlowerPot.isAny(), "!isAny");
      assertFalse(ObjectTypes.Lodestone.isAny(), "!isAny");
      assertFalse(ObjectTypes.StoneStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.CobblestoneStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.StoneBricksStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.SmoothStoneStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.AndesiteStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.GraniteStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.DioriteStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.TuffStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.BasaltStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.BlackstoneStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedTuffStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.DeepslateStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.SandstoneStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.RedSandstoneStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.BrickBlockStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.MudBricksStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.TuffBricksStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.OakPlanksStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.BirchPlanksStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.JunglePlanksStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.SprucePlanksStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isAny(), "!isAny");
      assertFalse(ObjectTypes.StoneSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.CobblestoneSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.StoneBricksSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.SmoothStoneSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.AndesiteSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.GraniteSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.DioriteSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.TuffSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.BasaltSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.BlackstoneSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedTuffSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.DeepslateSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.SandstoneSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.RedSandstoneSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.BrickBlockSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.MudBricksSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.TuffBricksSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.OakPlanksSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.BirchPlanksSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.JunglePlanksSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.SprucePlanksSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isAny(), "!isAny");
      assertFalse(ObjectTypes.StoneWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.CobblestoneWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.StoneBricksWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.AndesiteWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.GraniteWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.DioriteWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.TuffWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.BasaltWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.BlackstoneWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedGraniteWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedDioriteWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedTuffWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedBasaltWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.DeepslateWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.DeepslateBricksWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.SandstoneWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.RedSandstoneWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.BrickBlockWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.MudBricksWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.TuffBricksWall.isAny(), "!isAny");
      assertFalse(ObjectTypes.WoodenPick.isAny(), "!isAny");
      assertFalse(ObjectTypes.CopperPick.isAny(), "!isAny");
      assertFalse(ObjectTypes.IronPick.isAny(), "!isAny");
      assertFalse(ObjectTypes.GoldPick.isAny(), "!isAny");
      assertFalse(ObjectTypes.DiamondPick.isAny(), "!isAny");
      assertFalse(ObjectTypes.NeptuniumPick.isAny(), "!isAny");
      assertFalse(ObjectTypes.WoodenAxe.isAny(), "!isAny");
      assertFalse(ObjectTypes.CopperAxe.isAny(), "!isAny");
      assertFalse(ObjectTypes.IronAxe.isAny(), "!isAny");
      assertFalse(ObjectTypes.GoldAxe.isAny(), "!isAny");
      assertFalse(ObjectTypes.DiamondAxe.isAny(), "!isAny");
      assertFalse(ObjectTypes.NeptuniumAxe.isAny(), "!isAny");
      assertFalse(ObjectTypes.WoodenWhacker.isAny(), "!isAny");
      assertFalse(ObjectTypes.CopperWhacker.isAny(), "!isAny");
      assertFalse(ObjectTypes.IronWhacker.isAny(), "!isAny");
      assertFalse(ObjectTypes.WoodenHoe.isAny(), "!isAny");
      assertFalse(ObjectTypes.GoldBar.isAny(), "!isAny");
      assertFalse(ObjectTypes.IronBar.isAny(), "!isAny");
      assertFalse(ObjectTypes.Diamond.isAny(), "!isAny");
      assertFalse(ObjectTypes.NeptuniumBar.isAny(), "!isAny");
      assertFalse(ObjectTypes.Bucket.isAny(), "!isAny");
      assertFalse(ObjectTypes.WaterBucket.isAny(), "!isAny");
      assertFalse(ObjectTypes.WheatSlop.isAny(), "!isAny");
      assertFalse(ObjectTypes.PumpkinSoup.isAny(), "!isAny");
      assertFalse(ObjectTypes.MelonSmoothie.isAny(), "!isAny");
      assertFalse(ObjectTypes.Battery.isAny(), "!isAny");
      assertFalse(ObjectTypes.Player.isAny(), "!isAny");
      assertFalse(ObjectTypes.Fragment.isAny(), "!isAny");
    }

    {
      assertTrue(ObjectTypes.Stone.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Deepslate.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Granite.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Tuff.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Calcite.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Basalt.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SmoothBasalt.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Andesite.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Diorite.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Cobblestone.isBlock(), "isBlock");
      assertTrue(ObjectTypes.MossyCobblestone.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Obsidian.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Dripstone.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Blackstone.isBlock(), "isBlock");
      assertTrue(ObjectTypes.CobbledDeepslate.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Amethyst.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Glowstone.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Grass.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Dirt.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Moss.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Podzol.isBlock(), "isBlock");
      assertTrue(ObjectTypes.DirtPath.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Mud.isBlock(), "isBlock");
      assertTrue(ObjectTypes.PackedMud.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Farmland.isBlock(), "isBlock");
      assertTrue(ObjectTypes.WetFarmland.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Snow.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Ice.isBlock(), "isBlock");
      assertTrue(ObjectTypes.UnrevealedOre.isBlock(), "isBlock");
      assertTrue(ObjectTypes.CoalOre.isBlock(), "isBlock");
      assertTrue(ObjectTypes.CopperOre.isBlock(), "isBlock");
      assertTrue(ObjectTypes.IronOre.isBlock(), "isBlock");
      assertTrue(ObjectTypes.GoldOre.isBlock(), "isBlock");
      assertTrue(ObjectTypes.DiamondOre.isBlock(), "isBlock");
      assertTrue(ObjectTypes.NeptuniumOre.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Gravel.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Sand.isBlock(), "isBlock");
      assertTrue(ObjectTypes.RedSand.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Sandstone.isBlock(), "isBlock");
      assertTrue(ObjectTypes.RedSandstone.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Clay.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Terracotta.isBlock(), "isBlock");
      assertTrue(ObjectTypes.BrownTerracotta.isBlock(), "isBlock");
      assertTrue(ObjectTypes.OrangeTerracotta.isBlock(), "isBlock");
      assertTrue(ObjectTypes.WhiteTerracotta.isBlock(), "isBlock");
      assertTrue(ObjectTypes.LightGrayTerracotta.isBlock(), "isBlock");
      assertTrue(ObjectTypes.YellowTerracotta.isBlock(), "isBlock");
      assertTrue(ObjectTypes.RedTerracotta.isBlock(), "isBlock");
      assertTrue(ObjectTypes.LightBlueTerracotta.isBlock(), "isBlock");
      assertTrue(ObjectTypes.CyanTerracotta.isBlock(), "isBlock");
      assertTrue(ObjectTypes.BlackTerracotta.isBlock(), "isBlock");
      assertTrue(ObjectTypes.PurpleTerracotta.isBlock(), "isBlock");
      assertTrue(ObjectTypes.BlueTerracotta.isBlock(), "isBlock");
      assertTrue(ObjectTypes.MagentaTerracotta.isBlock(), "isBlock");
      assertTrue(ObjectTypes.OakLog.isBlock(), "isBlock");
      assertTrue(ObjectTypes.BirchLog.isBlock(), "isBlock");
      assertTrue(ObjectTypes.JungleLog.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SakuraLog.isBlock(), "isBlock");
      assertTrue(ObjectTypes.AcaciaLog.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SpruceLog.isBlock(), "isBlock");
      assertTrue(ObjectTypes.DarkOakLog.isBlock(), "isBlock");
      assertTrue(ObjectTypes.MangroveLog.isBlock(), "isBlock");
      assertTrue(ObjectTypes.OakLeaf.isBlock(), "isBlock");
      assertTrue(ObjectTypes.BirchLeaf.isBlock(), "isBlock");
      assertTrue(ObjectTypes.JungleLeaf.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SakuraLeaf.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SpruceLeaf.isBlock(), "isBlock");
      assertTrue(ObjectTypes.AcaciaLeaf.isBlock(), "isBlock");
      assertTrue(ObjectTypes.DarkOakLeaf.isBlock(), "isBlock");
      assertTrue(ObjectTypes.AzaleaLeaf.isBlock(), "isBlock");
      assertTrue(ObjectTypes.FloweringAzaleaLeaf.isBlock(), "isBlock");
      assertTrue(ObjectTypes.MangroveLeaf.isBlock(), "isBlock");
      assertTrue(ObjectTypes.MangroveRoots.isBlock(), "isBlock");
      assertTrue(ObjectTypes.MuddyMangroveRoots.isBlock(), "isBlock");
      assertTrue(ObjectTypes.AzaleaFlower.isBlock(), "isBlock");
      assertTrue(ObjectTypes.BellFlower.isBlock(), "isBlock");
      assertTrue(ObjectTypes.DandelionFlower.isBlock(), "isBlock");
      assertTrue(ObjectTypes.DaylilyFlower.isBlock(), "isBlock");
      assertTrue(ObjectTypes.LilacFlower.isBlock(), "isBlock");
      assertTrue(ObjectTypes.RoseFlower.isBlock(), "isBlock");
      assertTrue(ObjectTypes.FireFlower.isBlock(), "isBlock");
      assertTrue(ObjectTypes.MorninggloryFlower.isBlock(), "isBlock");
      assertTrue(ObjectTypes.PeonyFlower.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Ultraviolet.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SunFlower.isBlock(), "isBlock");
      assertTrue(ObjectTypes.FlyTrap.isBlock(), "isBlock");
      assertTrue(ObjectTypes.FescueGrass.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SwitchGrass.isBlock(), "isBlock");
      assertTrue(ObjectTypes.VinesBush.isBlock(), "isBlock");
      assertTrue(ObjectTypes.IvyVine.isBlock(), "isBlock");
      assertTrue(ObjectTypes.HempBush.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Coral.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SeaAnemone.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Algae.isBlock(), "isBlock");
      assertTrue(ObjectTypes.HornCoralBlock.isBlock(), "isBlock");
      assertTrue(ObjectTypes.FireCoralBlock.isBlock(), "isBlock");
      assertTrue(ObjectTypes.TubeCoralBlock.isBlock(), "isBlock");
      assertTrue(ObjectTypes.BubbleCoralBlock.isBlock(), "isBlock");
      assertTrue(ObjectTypes.BrainCoralBlock.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SpiderWeb.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Bone.isBlock(), "isBlock");
      assertTrue(ObjectTypes.GoldenMushroom.isBlock(), "isBlock");
      assertTrue(ObjectTypes.RedMushroom.isBlock(), "isBlock");
      assertTrue(ObjectTypes.CoffeeBush.isBlock(), "isBlock");
      assertTrue(ObjectTypes.StrawberryBush.isBlock(), "isBlock");
      assertTrue(ObjectTypes.RaspberryBush.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Wheat.isBlock(), "isBlock");
      assertTrue(ObjectTypes.CottonBush.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Pumpkin.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Melon.isBlock(), "isBlock");
      assertTrue(ObjectTypes.RedMushroomBlock.isBlock(), "isBlock");
      assertTrue(ObjectTypes.BrownMushroomBlock.isBlock(), "isBlock");
      assertTrue(ObjectTypes.MushroomStem.isBlock(), "isBlock");
      assertTrue(ObjectTypes.BambooBush.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Cactus.isBlock(), "isBlock");
      assertTrue(ObjectTypes.OakPlanks.isBlock(), "isBlock");
      assertTrue(ObjectTypes.BirchPlanks.isBlock(), "isBlock");
      assertTrue(ObjectTypes.JunglePlanks.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SakuraPlanks.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SprucePlanks.isBlock(), "isBlock");
      assertTrue(ObjectTypes.AcaciaPlanks.isBlock(), "isBlock");
      assertTrue(ObjectTypes.DarkOakPlanks.isBlock(), "isBlock");
      assertTrue(ObjectTypes.MangrovePlanks.isBlock(), "isBlock");
      assertTrue(ObjectTypes.CopperBlock.isBlock(), "isBlock");
      assertTrue(ObjectTypes.IronBlock.isBlock(), "isBlock");
      assertTrue(ObjectTypes.GoldBlock.isBlock(), "isBlock");
      assertTrue(ObjectTypes.DiamondBlock.isBlock(), "isBlock");
      assertTrue(ObjectTypes.NeptuniumBlock.isBlock(), "isBlock");
      assertTrue(ObjectTypes.WheatSeed.isBlock(), "isBlock");
      assertTrue(ObjectTypes.PumpkinSeed.isBlock(), "isBlock");
      assertTrue(ObjectTypes.MelonSeed.isBlock(), "isBlock");
      assertTrue(ObjectTypes.OakSapling.isBlock(), "isBlock");
      assertTrue(ObjectTypes.BirchSapling.isBlock(), "isBlock");
      assertTrue(ObjectTypes.JungleSapling.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SakuraSapling.isBlock(), "isBlock");
      assertTrue(ObjectTypes.AcaciaSapling.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SpruceSapling.isBlock(), "isBlock");
      assertTrue(ObjectTypes.DarkOakSapling.isBlock(), "isBlock");
      assertTrue(ObjectTypes.MangroveSapling.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Furnace.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Workbench.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Powerstone.isBlock(), "isBlock");
      assertTrue(ObjectTypes.ForceField.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Chest.isBlock(), "isBlock");
      assertTrue(ObjectTypes.SpawnTile.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Bed.isBlock(), "isBlock");
      assertTrue(ObjectTypes.TextSign.isBlock(), "isBlock");
      assertTrue(ObjectTypes.Torch.isBlock(), "isBlock");
      assertFalse(ObjectTypes.Null.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Air.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Water.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Lava.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Bedrock.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.AnyTerracotta.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.AnyLog.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.AnyLeaf.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.AnyPlank.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Stonecutter.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.StoneBricks.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.TuffBricks.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DeepslateBricks.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedAndesite.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedGranite.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedDiorite.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedTuff.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedBasalt.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedBlackstone.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.ChiseledDeepslate.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.ChiseledSandstone.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CrackedStoneBricks.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CrackedTuffBricks.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SmoothSandstone.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SmoothRedSandstone.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SmoothStone.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Cotton.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CottonSeed.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Glass.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Brick.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BrickBlock.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MudBricks.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Paper.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Book.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Stick.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.RedDye.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.YellowDye.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BlueDye.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.GreenDye.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.WhiteDye.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BlackDye.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BrownDye.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.OrangeDye.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PinkDye.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.LimeDye.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CyanDye.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.GrayDye.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PurpleDye.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.WhiteConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.OrangeConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MagentaConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.YellowConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.LimeConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PinkConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.GrayConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CyanConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PurpleConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BlueConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BrownConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.GreenConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.RedConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BlackConcretePowder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.WhiteConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.OrangeConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MagentaConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.LightBlueConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.YellowConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.LimeConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PinkConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.GrayConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.LightGrayConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CyanConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PurpleConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BlueConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BrownConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.GreenConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.RedConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BlackConcrete.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.GlassPane.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.OakDoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BirchDoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.JungleDoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SakuraDoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.AcaciaDoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SpruceDoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DarkOakDoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MangroveDoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.IronDoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.OakTrapdoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BirchTrapdoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.JungleTrapdoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SakuraTrapdoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SpruceTrapdoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MangroveTrapdoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.IronTrapdoor.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.OakFence.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BirchFence.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.JungleFence.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SakuraFence.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.AcaciaFence.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SpruceFence.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DarkOakFence.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MangroveFence.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.OakFenceGate.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BirchFenceGate.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.JungleFenceGate.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SakuraFenceGate.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.AcaciaFenceGate.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SpruceFenceGate.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DarkOakFenceGate.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MangroveFenceGate.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.IronBars.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Lantern.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Ladder.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Barrel.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Bookshelf.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Carpet.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.FlowerPot.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Lodestone.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.StoneStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CobblestoneStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.StoneBricksStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SmoothStoneStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.AndesiteStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.GraniteStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DioriteStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.TuffStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BasaltStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BlackstoneStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedTuffStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DeepslateStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SandstoneStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.RedSandstoneStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BrickBlockStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MudBricksStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.TuffBricksStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.OakPlanksStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BirchPlanksStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.JunglePlanksStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SprucePlanksStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.StoneSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CobblestoneSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.StoneBricksSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SmoothStoneSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.AndesiteSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.GraniteSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DioriteSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.TuffSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BasaltSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BlackstoneSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedTuffSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DeepslateSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SandstoneSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.RedSandstoneSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BrickBlockSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MudBricksSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.TuffBricksSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.OakPlanksSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BirchPlanksSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.JunglePlanksSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SprucePlanksSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.StoneWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CobblestoneWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.StoneBricksWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.AndesiteWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.GraniteWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DioriteWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.TuffWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BasaltWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BlackstoneWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedGraniteWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedDioriteWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedTuffWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedBasaltWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DeepslateWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DeepslateBricksWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.SandstoneWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.RedSandstoneWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.BrickBlockWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MudBricksWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.TuffBricksWall.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.WoodenPick.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CopperPick.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.IronPick.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.GoldPick.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DiamondPick.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.NeptuniumPick.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.WoodenAxe.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CopperAxe.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.IronAxe.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.GoldAxe.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.DiamondAxe.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.NeptuniumAxe.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.WoodenWhacker.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.CopperWhacker.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.IronWhacker.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.WoodenHoe.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.GoldBar.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.IronBar.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Diamond.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.NeptuniumBar.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Bucket.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.WaterBucket.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.WheatSlop.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.PumpkinSoup.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.MelonSmoothie.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Battery.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Player.isBlock(), "!isBlock");
      assertFalse(ObjectTypes.Fragment.isBlock(), "!isBlock");
    }

    {
      assertTrue(ObjectTypes.Terracotta.isTerracotta(), "isTerracotta");
      assertTrue(ObjectTypes.BrownTerracotta.isTerracotta(), "isTerracotta");
      assertTrue(ObjectTypes.OrangeTerracotta.isTerracotta(), "isTerracotta");
      assertTrue(ObjectTypes.WhiteTerracotta.isTerracotta(), "isTerracotta");
      assertTrue(ObjectTypes.LightGrayTerracotta.isTerracotta(), "isTerracotta");
      assertTrue(ObjectTypes.YellowTerracotta.isTerracotta(), "isTerracotta");
      assertTrue(ObjectTypes.RedTerracotta.isTerracotta(), "isTerracotta");
      assertTrue(ObjectTypes.LightBlueTerracotta.isTerracotta(), "isTerracotta");
      assertTrue(ObjectTypes.CyanTerracotta.isTerracotta(), "isTerracotta");
      assertTrue(ObjectTypes.BlackTerracotta.isTerracotta(), "isTerracotta");
      assertTrue(ObjectTypes.PurpleTerracotta.isTerracotta(), "isTerracotta");
      assertTrue(ObjectTypes.BlueTerracotta.isTerracotta(), "isTerracotta");
      assertTrue(ObjectTypes.MagentaTerracotta.isTerracotta(), "isTerracotta");
      assertFalse(ObjectTypes.Null.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Air.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Water.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Lava.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Stone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Bedrock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Deepslate.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Granite.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Tuff.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Calcite.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Basalt.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SmoothBasalt.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Andesite.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Diorite.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Cobblestone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MossyCobblestone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Obsidian.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Dripstone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Blackstone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CobbledDeepslate.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Amethyst.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Glowstone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Grass.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Dirt.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Moss.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Podzol.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DirtPath.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Mud.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PackedMud.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Farmland.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.WetFarmland.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Snow.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Ice.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.UnrevealedOre.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CoalOre.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CopperOre.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.IronOre.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GoldOre.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DiamondOre.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.NeptuniumOre.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Gravel.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Sand.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.RedSand.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Sandstone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.RedSandstone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Clay.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AnyTerracotta.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AnyLog.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.OakLog.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BirchLog.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.JungleLog.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SakuraLog.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AcaciaLog.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SpruceLog.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DarkOakLog.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MangroveLog.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AnyLeaf.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.OakLeaf.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BirchLeaf.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.JungleLeaf.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SakuraLeaf.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SpruceLeaf.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AcaciaLeaf.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DarkOakLeaf.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AzaleaLeaf.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MangroveLeaf.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MangroveRoots.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AzaleaFlower.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BellFlower.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DandelionFlower.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DaylilyFlower.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.LilacFlower.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.RoseFlower.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.FireFlower.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MorninggloryFlower.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PeonyFlower.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Ultraviolet.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SunFlower.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.FlyTrap.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.FescueGrass.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SwitchGrass.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.VinesBush.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.IvyVine.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.HempBush.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Coral.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SeaAnemone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Algae.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.HornCoralBlock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.FireCoralBlock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.TubeCoralBlock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BubbleCoralBlock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BrainCoralBlock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SpiderWeb.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Bone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GoldenMushroom.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.RedMushroom.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CoffeeBush.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.StrawberryBush.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.RaspberryBush.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Wheat.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CottonBush.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Pumpkin.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Melon.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.RedMushroomBlock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BrownMushroomBlock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MushroomStem.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BambooBush.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Cactus.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AnyPlank.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.OakPlanks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BirchPlanks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.JunglePlanks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SakuraPlanks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SprucePlanks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AcaciaPlanks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DarkOakPlanks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MangrovePlanks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CopperBlock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.IronBlock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GoldBlock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DiamondBlock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.NeptuniumBlock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.WheatSeed.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PumpkinSeed.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MelonSeed.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.OakSapling.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BirchSapling.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.JungleSapling.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SakuraSapling.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AcaciaSapling.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SpruceSapling.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DarkOakSapling.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MangroveSapling.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Furnace.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Workbench.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Powerstone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.ForceField.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Chest.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SpawnTile.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Bed.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.TextSign.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Torch.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Stonecutter.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.StoneBricks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.TuffBricks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DeepslateBricks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedAndesite.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedGranite.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedDiorite.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedTuff.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedBasalt.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedBlackstone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.ChiseledDeepslate.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.ChiseledSandstone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CrackedStoneBricks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CrackedTuffBricks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SmoothSandstone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SmoothRedSandstone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SmoothStone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Cotton.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CottonSeed.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Glass.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Brick.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BrickBlock.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MudBricks.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Paper.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Book.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Stick.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.RedDye.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.YellowDye.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BlueDye.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GreenDye.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.WhiteDye.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BlackDye.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BrownDye.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.OrangeDye.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PinkDye.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.LimeDye.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CyanDye.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GrayDye.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PurpleDye.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.WhiteConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.OrangeConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MagentaConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.YellowConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.LimeConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PinkConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GrayConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CyanConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PurpleConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BlueConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BrownConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GreenConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.RedConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BlackConcretePowder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.WhiteConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.OrangeConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MagentaConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.LightBlueConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.YellowConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.LimeConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PinkConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GrayConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.LightGrayConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CyanConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PurpleConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BlueConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BrownConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GreenConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.RedConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BlackConcrete.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GlassPane.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.OakDoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BirchDoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.JungleDoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SakuraDoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AcaciaDoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SpruceDoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DarkOakDoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MangroveDoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.IronDoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.OakTrapdoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BirchTrapdoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.JungleTrapdoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SakuraTrapdoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SpruceTrapdoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MangroveTrapdoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.IronTrapdoor.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.OakFence.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BirchFence.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.JungleFence.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SakuraFence.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AcaciaFence.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SpruceFence.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DarkOakFence.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MangroveFence.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.OakFenceGate.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BirchFenceGate.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.JungleFenceGate.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SakuraFenceGate.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AcaciaFenceGate.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SpruceFenceGate.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DarkOakFenceGate.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MangroveFenceGate.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.IronBars.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Lantern.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Ladder.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Barrel.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Bookshelf.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Carpet.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.FlowerPot.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Lodestone.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.StoneStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CobblestoneStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.StoneBricksStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SmoothStoneStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AndesiteStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GraniteStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DioriteStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.TuffStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BasaltStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BlackstoneStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedTuffStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DeepslateStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SandstoneStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.RedSandstoneStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BrickBlockStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MudBricksStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.TuffBricksStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.OakPlanksStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BirchPlanksStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.JunglePlanksStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SprucePlanksStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.StoneSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CobblestoneSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.StoneBricksSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SmoothStoneSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AndesiteSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GraniteSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DioriteSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.TuffSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BasaltSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BlackstoneSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedTuffSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DeepslateSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SandstoneSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.RedSandstoneSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BrickBlockSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MudBricksSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.TuffBricksSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.OakPlanksSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BirchPlanksSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.JunglePlanksSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SprucePlanksSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.StoneWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CobblestoneWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.StoneBricksWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.AndesiteWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GraniteWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DioriteWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.TuffWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BasaltWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BlackstoneWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedGraniteWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedDioriteWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedTuffWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedBasaltWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DeepslateWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DeepslateBricksWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.SandstoneWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.RedSandstoneWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.BrickBlockWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MudBricksWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.TuffBricksWall.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.WoodenPick.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CopperPick.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.IronPick.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GoldPick.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DiamondPick.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.NeptuniumPick.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.WoodenAxe.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CopperAxe.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.IronAxe.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GoldAxe.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.DiamondAxe.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.NeptuniumAxe.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.WoodenWhacker.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.CopperWhacker.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.IronWhacker.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.WoodenHoe.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.GoldBar.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.IronBar.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Diamond.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.NeptuniumBar.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Bucket.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.WaterBucket.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.WheatSlop.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.PumpkinSoup.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.MelonSmoothie.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Battery.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Player.isTerracotta(), "!isTerracotta");
      assertFalse(ObjectTypes.Fragment.isTerracotta(), "!isTerracotta");
    }

    {
      assertTrue(ObjectTypes.CoalOre.isOre(), "isOre");
      assertTrue(ObjectTypes.CopperOre.isOre(), "isOre");
      assertTrue(ObjectTypes.IronOre.isOre(), "isOre");
      assertTrue(ObjectTypes.GoldOre.isOre(), "isOre");
      assertTrue(ObjectTypes.DiamondOre.isOre(), "isOre");
      assertTrue(ObjectTypes.NeptuniumOre.isOre(), "isOre");
      assertFalse(ObjectTypes.Null.isOre(), "!isOre");
      assertFalse(ObjectTypes.Air.isOre(), "!isOre");
      assertFalse(ObjectTypes.Water.isOre(), "!isOre");
      assertFalse(ObjectTypes.Lava.isOre(), "!isOre");
      assertFalse(ObjectTypes.Stone.isOre(), "!isOre");
      assertFalse(ObjectTypes.Bedrock.isOre(), "!isOre");
      assertFalse(ObjectTypes.Deepslate.isOre(), "!isOre");
      assertFalse(ObjectTypes.Granite.isOre(), "!isOre");
      assertFalse(ObjectTypes.Tuff.isOre(), "!isOre");
      assertFalse(ObjectTypes.Calcite.isOre(), "!isOre");
      assertFalse(ObjectTypes.Basalt.isOre(), "!isOre");
      assertFalse(ObjectTypes.SmoothBasalt.isOre(), "!isOre");
      assertFalse(ObjectTypes.Andesite.isOre(), "!isOre");
      assertFalse(ObjectTypes.Diorite.isOre(), "!isOre");
      assertFalse(ObjectTypes.Cobblestone.isOre(), "!isOre");
      assertFalse(ObjectTypes.MossyCobblestone.isOre(), "!isOre");
      assertFalse(ObjectTypes.Obsidian.isOre(), "!isOre");
      assertFalse(ObjectTypes.Dripstone.isOre(), "!isOre");
      assertFalse(ObjectTypes.Blackstone.isOre(), "!isOre");
      assertFalse(ObjectTypes.CobbledDeepslate.isOre(), "!isOre");
      assertFalse(ObjectTypes.Amethyst.isOre(), "!isOre");
      assertFalse(ObjectTypes.Glowstone.isOre(), "!isOre");
      assertFalse(ObjectTypes.Grass.isOre(), "!isOre");
      assertFalse(ObjectTypes.Dirt.isOre(), "!isOre");
      assertFalse(ObjectTypes.Moss.isOre(), "!isOre");
      assertFalse(ObjectTypes.Podzol.isOre(), "!isOre");
      assertFalse(ObjectTypes.DirtPath.isOre(), "!isOre");
      assertFalse(ObjectTypes.Mud.isOre(), "!isOre");
      assertFalse(ObjectTypes.PackedMud.isOre(), "!isOre");
      assertFalse(ObjectTypes.Farmland.isOre(), "!isOre");
      assertFalse(ObjectTypes.WetFarmland.isOre(), "!isOre");
      assertFalse(ObjectTypes.Snow.isOre(), "!isOre");
      assertFalse(ObjectTypes.Ice.isOre(), "!isOre");
      assertFalse(ObjectTypes.UnrevealedOre.isOre(), "!isOre");
      assertFalse(ObjectTypes.Gravel.isOre(), "!isOre");
      assertFalse(ObjectTypes.Sand.isOre(), "!isOre");
      assertFalse(ObjectTypes.RedSand.isOre(), "!isOre");
      assertFalse(ObjectTypes.Sandstone.isOre(), "!isOre");
      assertFalse(ObjectTypes.RedSandstone.isOre(), "!isOre");
      assertFalse(ObjectTypes.Clay.isOre(), "!isOre");
      assertFalse(ObjectTypes.AnyTerracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.Terracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.BrownTerracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.OrangeTerracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.WhiteTerracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.LightGrayTerracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.YellowTerracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.RedTerracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.LightBlueTerracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.CyanTerracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.BlackTerracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.PurpleTerracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.BlueTerracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.MagentaTerracotta.isOre(), "!isOre");
      assertFalse(ObjectTypes.AnyLog.isOre(), "!isOre");
      assertFalse(ObjectTypes.OakLog.isOre(), "!isOre");
      assertFalse(ObjectTypes.BirchLog.isOre(), "!isOre");
      assertFalse(ObjectTypes.JungleLog.isOre(), "!isOre");
      assertFalse(ObjectTypes.SakuraLog.isOre(), "!isOre");
      assertFalse(ObjectTypes.AcaciaLog.isOre(), "!isOre");
      assertFalse(ObjectTypes.SpruceLog.isOre(), "!isOre");
      assertFalse(ObjectTypes.DarkOakLog.isOre(), "!isOre");
      assertFalse(ObjectTypes.MangroveLog.isOre(), "!isOre");
      assertFalse(ObjectTypes.AnyLeaf.isOre(), "!isOre");
      assertFalse(ObjectTypes.OakLeaf.isOre(), "!isOre");
      assertFalse(ObjectTypes.BirchLeaf.isOre(), "!isOre");
      assertFalse(ObjectTypes.JungleLeaf.isOre(), "!isOre");
      assertFalse(ObjectTypes.SakuraLeaf.isOre(), "!isOre");
      assertFalse(ObjectTypes.SpruceLeaf.isOre(), "!isOre");
      assertFalse(ObjectTypes.AcaciaLeaf.isOre(), "!isOre");
      assertFalse(ObjectTypes.DarkOakLeaf.isOre(), "!isOre");
      assertFalse(ObjectTypes.AzaleaLeaf.isOre(), "!isOre");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isOre(), "!isOre");
      assertFalse(ObjectTypes.MangroveLeaf.isOre(), "!isOre");
      assertFalse(ObjectTypes.MangroveRoots.isOre(), "!isOre");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isOre(), "!isOre");
      assertFalse(ObjectTypes.AzaleaFlower.isOre(), "!isOre");
      assertFalse(ObjectTypes.BellFlower.isOre(), "!isOre");
      assertFalse(ObjectTypes.DandelionFlower.isOre(), "!isOre");
      assertFalse(ObjectTypes.DaylilyFlower.isOre(), "!isOre");
      assertFalse(ObjectTypes.LilacFlower.isOre(), "!isOre");
      assertFalse(ObjectTypes.RoseFlower.isOre(), "!isOre");
      assertFalse(ObjectTypes.FireFlower.isOre(), "!isOre");
      assertFalse(ObjectTypes.MorninggloryFlower.isOre(), "!isOre");
      assertFalse(ObjectTypes.PeonyFlower.isOre(), "!isOre");
      assertFalse(ObjectTypes.Ultraviolet.isOre(), "!isOre");
      assertFalse(ObjectTypes.SunFlower.isOre(), "!isOre");
      assertFalse(ObjectTypes.FlyTrap.isOre(), "!isOre");
      assertFalse(ObjectTypes.FescueGrass.isOre(), "!isOre");
      assertFalse(ObjectTypes.SwitchGrass.isOre(), "!isOre");
      assertFalse(ObjectTypes.VinesBush.isOre(), "!isOre");
      assertFalse(ObjectTypes.IvyVine.isOre(), "!isOre");
      assertFalse(ObjectTypes.HempBush.isOre(), "!isOre");
      assertFalse(ObjectTypes.Coral.isOre(), "!isOre");
      assertFalse(ObjectTypes.SeaAnemone.isOre(), "!isOre");
      assertFalse(ObjectTypes.Algae.isOre(), "!isOre");
      assertFalse(ObjectTypes.HornCoralBlock.isOre(), "!isOre");
      assertFalse(ObjectTypes.FireCoralBlock.isOre(), "!isOre");
      assertFalse(ObjectTypes.TubeCoralBlock.isOre(), "!isOre");
      assertFalse(ObjectTypes.BubbleCoralBlock.isOre(), "!isOre");
      assertFalse(ObjectTypes.BrainCoralBlock.isOre(), "!isOre");
      assertFalse(ObjectTypes.SpiderWeb.isOre(), "!isOre");
      assertFalse(ObjectTypes.Bone.isOre(), "!isOre");
      assertFalse(ObjectTypes.GoldenMushroom.isOre(), "!isOre");
      assertFalse(ObjectTypes.RedMushroom.isOre(), "!isOre");
      assertFalse(ObjectTypes.CoffeeBush.isOre(), "!isOre");
      assertFalse(ObjectTypes.StrawberryBush.isOre(), "!isOre");
      assertFalse(ObjectTypes.RaspberryBush.isOre(), "!isOre");
      assertFalse(ObjectTypes.Wheat.isOre(), "!isOre");
      assertFalse(ObjectTypes.CottonBush.isOre(), "!isOre");
      assertFalse(ObjectTypes.Pumpkin.isOre(), "!isOre");
      assertFalse(ObjectTypes.Melon.isOre(), "!isOre");
      assertFalse(ObjectTypes.RedMushroomBlock.isOre(), "!isOre");
      assertFalse(ObjectTypes.BrownMushroomBlock.isOre(), "!isOre");
      assertFalse(ObjectTypes.MushroomStem.isOre(), "!isOre");
      assertFalse(ObjectTypes.BambooBush.isOre(), "!isOre");
      assertFalse(ObjectTypes.Cactus.isOre(), "!isOre");
      assertFalse(ObjectTypes.AnyPlank.isOre(), "!isOre");
      assertFalse(ObjectTypes.OakPlanks.isOre(), "!isOre");
      assertFalse(ObjectTypes.BirchPlanks.isOre(), "!isOre");
      assertFalse(ObjectTypes.JunglePlanks.isOre(), "!isOre");
      assertFalse(ObjectTypes.SakuraPlanks.isOre(), "!isOre");
      assertFalse(ObjectTypes.SprucePlanks.isOre(), "!isOre");
      assertFalse(ObjectTypes.AcaciaPlanks.isOre(), "!isOre");
      assertFalse(ObjectTypes.DarkOakPlanks.isOre(), "!isOre");
      assertFalse(ObjectTypes.MangrovePlanks.isOre(), "!isOre");
      assertFalse(ObjectTypes.CopperBlock.isOre(), "!isOre");
      assertFalse(ObjectTypes.IronBlock.isOre(), "!isOre");
      assertFalse(ObjectTypes.GoldBlock.isOre(), "!isOre");
      assertFalse(ObjectTypes.DiamondBlock.isOre(), "!isOre");
      assertFalse(ObjectTypes.NeptuniumBlock.isOre(), "!isOre");
      assertFalse(ObjectTypes.WheatSeed.isOre(), "!isOre");
      assertFalse(ObjectTypes.PumpkinSeed.isOre(), "!isOre");
      assertFalse(ObjectTypes.MelonSeed.isOre(), "!isOre");
      assertFalse(ObjectTypes.OakSapling.isOre(), "!isOre");
      assertFalse(ObjectTypes.BirchSapling.isOre(), "!isOre");
      assertFalse(ObjectTypes.JungleSapling.isOre(), "!isOre");
      assertFalse(ObjectTypes.SakuraSapling.isOre(), "!isOre");
      assertFalse(ObjectTypes.AcaciaSapling.isOre(), "!isOre");
      assertFalse(ObjectTypes.SpruceSapling.isOre(), "!isOre");
      assertFalse(ObjectTypes.DarkOakSapling.isOre(), "!isOre");
      assertFalse(ObjectTypes.MangroveSapling.isOre(), "!isOre");
      assertFalse(ObjectTypes.Furnace.isOre(), "!isOre");
      assertFalse(ObjectTypes.Workbench.isOre(), "!isOre");
      assertFalse(ObjectTypes.Powerstone.isOre(), "!isOre");
      assertFalse(ObjectTypes.ForceField.isOre(), "!isOre");
      assertFalse(ObjectTypes.Chest.isOre(), "!isOre");
      assertFalse(ObjectTypes.SpawnTile.isOre(), "!isOre");
      assertFalse(ObjectTypes.Bed.isOre(), "!isOre");
      assertFalse(ObjectTypes.TextSign.isOre(), "!isOre");
      assertFalse(ObjectTypes.Torch.isOre(), "!isOre");
      assertFalse(ObjectTypes.Stonecutter.isOre(), "!isOre");
      assertFalse(ObjectTypes.StoneBricks.isOre(), "!isOre");
      assertFalse(ObjectTypes.TuffBricks.isOre(), "!isOre");
      assertFalse(ObjectTypes.DeepslateBricks.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedAndesite.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedGranite.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedDiorite.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedTuff.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedBasalt.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedBlackstone.isOre(), "!isOre");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isOre(), "!isOre");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isOre(), "!isOre");
      assertFalse(ObjectTypes.ChiseledDeepslate.isOre(), "!isOre");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isOre(), "!isOre");
      assertFalse(ObjectTypes.ChiseledSandstone.isOre(), "!isOre");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isOre(), "!isOre");
      assertFalse(ObjectTypes.CrackedStoneBricks.isOre(), "!isOre");
      assertFalse(ObjectTypes.CrackedTuffBricks.isOre(), "!isOre");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isOre(), "!isOre");
      assertFalse(ObjectTypes.SmoothSandstone.isOre(), "!isOre");
      assertFalse(ObjectTypes.SmoothRedSandstone.isOre(), "!isOre");
      assertFalse(ObjectTypes.SmoothStone.isOre(), "!isOre");
      assertFalse(ObjectTypes.Cotton.isOre(), "!isOre");
      assertFalse(ObjectTypes.CottonSeed.isOre(), "!isOre");
      assertFalse(ObjectTypes.Glass.isOre(), "!isOre");
      assertFalse(ObjectTypes.Brick.isOre(), "!isOre");
      assertFalse(ObjectTypes.BrickBlock.isOre(), "!isOre");
      assertFalse(ObjectTypes.MudBricks.isOre(), "!isOre");
      assertFalse(ObjectTypes.Paper.isOre(), "!isOre");
      assertFalse(ObjectTypes.Book.isOre(), "!isOre");
      assertFalse(ObjectTypes.Stick.isOre(), "!isOre");
      assertFalse(ObjectTypes.RedDye.isOre(), "!isOre");
      assertFalse(ObjectTypes.YellowDye.isOre(), "!isOre");
      assertFalse(ObjectTypes.BlueDye.isOre(), "!isOre");
      assertFalse(ObjectTypes.GreenDye.isOre(), "!isOre");
      assertFalse(ObjectTypes.WhiteDye.isOre(), "!isOre");
      assertFalse(ObjectTypes.BlackDye.isOre(), "!isOre");
      assertFalse(ObjectTypes.BrownDye.isOre(), "!isOre");
      assertFalse(ObjectTypes.OrangeDye.isOre(), "!isOre");
      assertFalse(ObjectTypes.PinkDye.isOre(), "!isOre");
      assertFalse(ObjectTypes.LimeDye.isOre(), "!isOre");
      assertFalse(ObjectTypes.CyanDye.isOre(), "!isOre");
      assertFalse(ObjectTypes.GrayDye.isOre(), "!isOre");
      assertFalse(ObjectTypes.PurpleDye.isOre(), "!isOre");
      assertFalse(ObjectTypes.WhiteConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.OrangeConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.MagentaConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.YellowConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.LimeConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.PinkConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.GrayConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.CyanConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.PurpleConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.BlueConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.BrownConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.GreenConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.RedConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.BlackConcretePowder.isOre(), "!isOre");
      assertFalse(ObjectTypes.WhiteConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.OrangeConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.MagentaConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.LightBlueConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.YellowConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.LimeConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.PinkConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.GrayConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.LightGrayConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.CyanConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.PurpleConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.BlueConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.BrownConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.GreenConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.RedConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.BlackConcrete.isOre(), "!isOre");
      assertFalse(ObjectTypes.GlassPane.isOre(), "!isOre");
      assertFalse(ObjectTypes.OakDoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.BirchDoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.JungleDoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.SakuraDoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.AcaciaDoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.SpruceDoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.DarkOakDoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.MangroveDoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.IronDoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.OakTrapdoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.BirchTrapdoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.JungleTrapdoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.SakuraTrapdoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.SpruceTrapdoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.MangroveTrapdoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.IronTrapdoor.isOre(), "!isOre");
      assertFalse(ObjectTypes.OakFence.isOre(), "!isOre");
      assertFalse(ObjectTypes.BirchFence.isOre(), "!isOre");
      assertFalse(ObjectTypes.JungleFence.isOre(), "!isOre");
      assertFalse(ObjectTypes.SakuraFence.isOre(), "!isOre");
      assertFalse(ObjectTypes.AcaciaFence.isOre(), "!isOre");
      assertFalse(ObjectTypes.SpruceFence.isOre(), "!isOre");
      assertFalse(ObjectTypes.DarkOakFence.isOre(), "!isOre");
      assertFalse(ObjectTypes.MangroveFence.isOre(), "!isOre");
      assertFalse(ObjectTypes.OakFenceGate.isOre(), "!isOre");
      assertFalse(ObjectTypes.BirchFenceGate.isOre(), "!isOre");
      assertFalse(ObjectTypes.JungleFenceGate.isOre(), "!isOre");
      assertFalse(ObjectTypes.SakuraFenceGate.isOre(), "!isOre");
      assertFalse(ObjectTypes.AcaciaFenceGate.isOre(), "!isOre");
      assertFalse(ObjectTypes.SpruceFenceGate.isOre(), "!isOre");
      assertFalse(ObjectTypes.DarkOakFenceGate.isOre(), "!isOre");
      assertFalse(ObjectTypes.MangroveFenceGate.isOre(), "!isOre");
      assertFalse(ObjectTypes.IronBars.isOre(), "!isOre");
      assertFalse(ObjectTypes.Lantern.isOre(), "!isOre");
      assertFalse(ObjectTypes.Ladder.isOre(), "!isOre");
      assertFalse(ObjectTypes.Barrel.isOre(), "!isOre");
      assertFalse(ObjectTypes.Bookshelf.isOre(), "!isOre");
      assertFalse(ObjectTypes.Carpet.isOre(), "!isOre");
      assertFalse(ObjectTypes.FlowerPot.isOre(), "!isOre");
      assertFalse(ObjectTypes.Lodestone.isOre(), "!isOre");
      assertFalse(ObjectTypes.StoneStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.CobblestoneStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.StoneBricksStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.SmoothStoneStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.AndesiteStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.GraniteStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.DioriteStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.TuffStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.BasaltStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.BlackstoneStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedTuffStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.DeepslateStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.SandstoneStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.RedSandstoneStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.BrickBlockStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.MudBricksStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.TuffBricksStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.OakPlanksStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.BirchPlanksStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.JunglePlanksStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.SprucePlanksStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isOre(), "!isOre");
      assertFalse(ObjectTypes.StoneSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.CobblestoneSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.StoneBricksSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.SmoothStoneSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.AndesiteSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.GraniteSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.DioriteSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.TuffSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.BasaltSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.BlackstoneSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedTuffSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.DeepslateSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.SandstoneSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.RedSandstoneSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.BrickBlockSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.MudBricksSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.TuffBricksSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.OakPlanksSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.BirchPlanksSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.JunglePlanksSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.SprucePlanksSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isOre(), "!isOre");
      assertFalse(ObjectTypes.StoneWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.CobblestoneWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.StoneBricksWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.AndesiteWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.GraniteWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.DioriteWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.TuffWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.BasaltWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.BlackstoneWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedGraniteWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedDioriteWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedTuffWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedBasaltWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.DeepslateWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.DeepslateBricksWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.SandstoneWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.RedSandstoneWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.BrickBlockWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.MudBricksWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.TuffBricksWall.isOre(), "!isOre");
      assertFalse(ObjectTypes.WoodenPick.isOre(), "!isOre");
      assertFalse(ObjectTypes.CopperPick.isOre(), "!isOre");
      assertFalse(ObjectTypes.IronPick.isOre(), "!isOre");
      assertFalse(ObjectTypes.GoldPick.isOre(), "!isOre");
      assertFalse(ObjectTypes.DiamondPick.isOre(), "!isOre");
      assertFalse(ObjectTypes.NeptuniumPick.isOre(), "!isOre");
      assertFalse(ObjectTypes.WoodenAxe.isOre(), "!isOre");
      assertFalse(ObjectTypes.CopperAxe.isOre(), "!isOre");
      assertFalse(ObjectTypes.IronAxe.isOre(), "!isOre");
      assertFalse(ObjectTypes.GoldAxe.isOre(), "!isOre");
      assertFalse(ObjectTypes.DiamondAxe.isOre(), "!isOre");
      assertFalse(ObjectTypes.NeptuniumAxe.isOre(), "!isOre");
      assertFalse(ObjectTypes.WoodenWhacker.isOre(), "!isOre");
      assertFalse(ObjectTypes.CopperWhacker.isOre(), "!isOre");
      assertFalse(ObjectTypes.IronWhacker.isOre(), "!isOre");
      assertFalse(ObjectTypes.WoodenHoe.isOre(), "!isOre");
      assertFalse(ObjectTypes.GoldBar.isOre(), "!isOre");
      assertFalse(ObjectTypes.IronBar.isOre(), "!isOre");
      assertFalse(ObjectTypes.Diamond.isOre(), "!isOre");
      assertFalse(ObjectTypes.NeptuniumBar.isOre(), "!isOre");
      assertFalse(ObjectTypes.Bucket.isOre(), "!isOre");
      assertFalse(ObjectTypes.WaterBucket.isOre(), "!isOre");
      assertFalse(ObjectTypes.WheatSlop.isOre(), "!isOre");
      assertFalse(ObjectTypes.PumpkinSoup.isOre(), "!isOre");
      assertFalse(ObjectTypes.MelonSmoothie.isOre(), "!isOre");
      assertFalse(ObjectTypes.Battery.isOre(), "!isOre");
      assertFalse(ObjectTypes.Player.isOre(), "!isOre");
      assertFalse(ObjectTypes.Fragment.isOre(), "!isOre");
    }

    {
      assertTrue(ObjectTypes.OakLog.isLog(), "isLog");
      assertTrue(ObjectTypes.BirchLog.isLog(), "isLog");
      assertTrue(ObjectTypes.JungleLog.isLog(), "isLog");
      assertTrue(ObjectTypes.SakuraLog.isLog(), "isLog");
      assertTrue(ObjectTypes.AcaciaLog.isLog(), "isLog");
      assertTrue(ObjectTypes.SpruceLog.isLog(), "isLog");
      assertTrue(ObjectTypes.DarkOakLog.isLog(), "isLog");
      assertTrue(ObjectTypes.MangroveLog.isLog(), "isLog");
      assertFalse(ObjectTypes.Null.isLog(), "!isLog");
      assertFalse(ObjectTypes.Air.isLog(), "!isLog");
      assertFalse(ObjectTypes.Water.isLog(), "!isLog");
      assertFalse(ObjectTypes.Lava.isLog(), "!isLog");
      assertFalse(ObjectTypes.Stone.isLog(), "!isLog");
      assertFalse(ObjectTypes.Bedrock.isLog(), "!isLog");
      assertFalse(ObjectTypes.Deepslate.isLog(), "!isLog");
      assertFalse(ObjectTypes.Granite.isLog(), "!isLog");
      assertFalse(ObjectTypes.Tuff.isLog(), "!isLog");
      assertFalse(ObjectTypes.Calcite.isLog(), "!isLog");
      assertFalse(ObjectTypes.Basalt.isLog(), "!isLog");
      assertFalse(ObjectTypes.SmoothBasalt.isLog(), "!isLog");
      assertFalse(ObjectTypes.Andesite.isLog(), "!isLog");
      assertFalse(ObjectTypes.Diorite.isLog(), "!isLog");
      assertFalse(ObjectTypes.Cobblestone.isLog(), "!isLog");
      assertFalse(ObjectTypes.MossyCobblestone.isLog(), "!isLog");
      assertFalse(ObjectTypes.Obsidian.isLog(), "!isLog");
      assertFalse(ObjectTypes.Dripstone.isLog(), "!isLog");
      assertFalse(ObjectTypes.Blackstone.isLog(), "!isLog");
      assertFalse(ObjectTypes.CobbledDeepslate.isLog(), "!isLog");
      assertFalse(ObjectTypes.Amethyst.isLog(), "!isLog");
      assertFalse(ObjectTypes.Glowstone.isLog(), "!isLog");
      assertFalse(ObjectTypes.Grass.isLog(), "!isLog");
      assertFalse(ObjectTypes.Dirt.isLog(), "!isLog");
      assertFalse(ObjectTypes.Moss.isLog(), "!isLog");
      assertFalse(ObjectTypes.Podzol.isLog(), "!isLog");
      assertFalse(ObjectTypes.DirtPath.isLog(), "!isLog");
      assertFalse(ObjectTypes.Mud.isLog(), "!isLog");
      assertFalse(ObjectTypes.PackedMud.isLog(), "!isLog");
      assertFalse(ObjectTypes.Farmland.isLog(), "!isLog");
      assertFalse(ObjectTypes.WetFarmland.isLog(), "!isLog");
      assertFalse(ObjectTypes.Snow.isLog(), "!isLog");
      assertFalse(ObjectTypes.Ice.isLog(), "!isLog");
      assertFalse(ObjectTypes.UnrevealedOre.isLog(), "!isLog");
      assertFalse(ObjectTypes.CoalOre.isLog(), "!isLog");
      assertFalse(ObjectTypes.CopperOre.isLog(), "!isLog");
      assertFalse(ObjectTypes.IronOre.isLog(), "!isLog");
      assertFalse(ObjectTypes.GoldOre.isLog(), "!isLog");
      assertFalse(ObjectTypes.DiamondOre.isLog(), "!isLog");
      assertFalse(ObjectTypes.NeptuniumOre.isLog(), "!isLog");
      assertFalse(ObjectTypes.Gravel.isLog(), "!isLog");
      assertFalse(ObjectTypes.Sand.isLog(), "!isLog");
      assertFalse(ObjectTypes.RedSand.isLog(), "!isLog");
      assertFalse(ObjectTypes.Sandstone.isLog(), "!isLog");
      assertFalse(ObjectTypes.RedSandstone.isLog(), "!isLog");
      assertFalse(ObjectTypes.Clay.isLog(), "!isLog");
      assertFalse(ObjectTypes.AnyTerracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.Terracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.BrownTerracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.OrangeTerracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.WhiteTerracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.LightGrayTerracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.YellowTerracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.RedTerracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.LightBlueTerracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.CyanTerracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.BlackTerracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.PurpleTerracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.BlueTerracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.MagentaTerracotta.isLog(), "!isLog");
      assertFalse(ObjectTypes.AnyLog.isLog(), "!isLog");
      assertFalse(ObjectTypes.AnyLeaf.isLog(), "!isLog");
      assertFalse(ObjectTypes.OakLeaf.isLog(), "!isLog");
      assertFalse(ObjectTypes.BirchLeaf.isLog(), "!isLog");
      assertFalse(ObjectTypes.JungleLeaf.isLog(), "!isLog");
      assertFalse(ObjectTypes.SakuraLeaf.isLog(), "!isLog");
      assertFalse(ObjectTypes.SpruceLeaf.isLog(), "!isLog");
      assertFalse(ObjectTypes.AcaciaLeaf.isLog(), "!isLog");
      assertFalse(ObjectTypes.DarkOakLeaf.isLog(), "!isLog");
      assertFalse(ObjectTypes.AzaleaLeaf.isLog(), "!isLog");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isLog(), "!isLog");
      assertFalse(ObjectTypes.MangroveLeaf.isLog(), "!isLog");
      assertFalse(ObjectTypes.MangroveRoots.isLog(), "!isLog");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isLog(), "!isLog");
      assertFalse(ObjectTypes.AzaleaFlower.isLog(), "!isLog");
      assertFalse(ObjectTypes.BellFlower.isLog(), "!isLog");
      assertFalse(ObjectTypes.DandelionFlower.isLog(), "!isLog");
      assertFalse(ObjectTypes.DaylilyFlower.isLog(), "!isLog");
      assertFalse(ObjectTypes.LilacFlower.isLog(), "!isLog");
      assertFalse(ObjectTypes.RoseFlower.isLog(), "!isLog");
      assertFalse(ObjectTypes.FireFlower.isLog(), "!isLog");
      assertFalse(ObjectTypes.MorninggloryFlower.isLog(), "!isLog");
      assertFalse(ObjectTypes.PeonyFlower.isLog(), "!isLog");
      assertFalse(ObjectTypes.Ultraviolet.isLog(), "!isLog");
      assertFalse(ObjectTypes.SunFlower.isLog(), "!isLog");
      assertFalse(ObjectTypes.FlyTrap.isLog(), "!isLog");
      assertFalse(ObjectTypes.FescueGrass.isLog(), "!isLog");
      assertFalse(ObjectTypes.SwitchGrass.isLog(), "!isLog");
      assertFalse(ObjectTypes.VinesBush.isLog(), "!isLog");
      assertFalse(ObjectTypes.IvyVine.isLog(), "!isLog");
      assertFalse(ObjectTypes.HempBush.isLog(), "!isLog");
      assertFalse(ObjectTypes.Coral.isLog(), "!isLog");
      assertFalse(ObjectTypes.SeaAnemone.isLog(), "!isLog");
      assertFalse(ObjectTypes.Algae.isLog(), "!isLog");
      assertFalse(ObjectTypes.HornCoralBlock.isLog(), "!isLog");
      assertFalse(ObjectTypes.FireCoralBlock.isLog(), "!isLog");
      assertFalse(ObjectTypes.TubeCoralBlock.isLog(), "!isLog");
      assertFalse(ObjectTypes.BubbleCoralBlock.isLog(), "!isLog");
      assertFalse(ObjectTypes.BrainCoralBlock.isLog(), "!isLog");
      assertFalse(ObjectTypes.SpiderWeb.isLog(), "!isLog");
      assertFalse(ObjectTypes.Bone.isLog(), "!isLog");
      assertFalse(ObjectTypes.GoldenMushroom.isLog(), "!isLog");
      assertFalse(ObjectTypes.RedMushroom.isLog(), "!isLog");
      assertFalse(ObjectTypes.CoffeeBush.isLog(), "!isLog");
      assertFalse(ObjectTypes.StrawberryBush.isLog(), "!isLog");
      assertFalse(ObjectTypes.RaspberryBush.isLog(), "!isLog");
      assertFalse(ObjectTypes.Wheat.isLog(), "!isLog");
      assertFalse(ObjectTypes.CottonBush.isLog(), "!isLog");
      assertFalse(ObjectTypes.Pumpkin.isLog(), "!isLog");
      assertFalse(ObjectTypes.Melon.isLog(), "!isLog");
      assertFalse(ObjectTypes.RedMushroomBlock.isLog(), "!isLog");
      assertFalse(ObjectTypes.BrownMushroomBlock.isLog(), "!isLog");
      assertFalse(ObjectTypes.MushroomStem.isLog(), "!isLog");
      assertFalse(ObjectTypes.BambooBush.isLog(), "!isLog");
      assertFalse(ObjectTypes.Cactus.isLog(), "!isLog");
      assertFalse(ObjectTypes.AnyPlank.isLog(), "!isLog");
      assertFalse(ObjectTypes.OakPlanks.isLog(), "!isLog");
      assertFalse(ObjectTypes.BirchPlanks.isLog(), "!isLog");
      assertFalse(ObjectTypes.JunglePlanks.isLog(), "!isLog");
      assertFalse(ObjectTypes.SakuraPlanks.isLog(), "!isLog");
      assertFalse(ObjectTypes.SprucePlanks.isLog(), "!isLog");
      assertFalse(ObjectTypes.AcaciaPlanks.isLog(), "!isLog");
      assertFalse(ObjectTypes.DarkOakPlanks.isLog(), "!isLog");
      assertFalse(ObjectTypes.MangrovePlanks.isLog(), "!isLog");
      assertFalse(ObjectTypes.CopperBlock.isLog(), "!isLog");
      assertFalse(ObjectTypes.IronBlock.isLog(), "!isLog");
      assertFalse(ObjectTypes.GoldBlock.isLog(), "!isLog");
      assertFalse(ObjectTypes.DiamondBlock.isLog(), "!isLog");
      assertFalse(ObjectTypes.NeptuniumBlock.isLog(), "!isLog");
      assertFalse(ObjectTypes.WheatSeed.isLog(), "!isLog");
      assertFalse(ObjectTypes.PumpkinSeed.isLog(), "!isLog");
      assertFalse(ObjectTypes.MelonSeed.isLog(), "!isLog");
      assertFalse(ObjectTypes.OakSapling.isLog(), "!isLog");
      assertFalse(ObjectTypes.BirchSapling.isLog(), "!isLog");
      assertFalse(ObjectTypes.JungleSapling.isLog(), "!isLog");
      assertFalse(ObjectTypes.SakuraSapling.isLog(), "!isLog");
      assertFalse(ObjectTypes.AcaciaSapling.isLog(), "!isLog");
      assertFalse(ObjectTypes.SpruceSapling.isLog(), "!isLog");
      assertFalse(ObjectTypes.DarkOakSapling.isLog(), "!isLog");
      assertFalse(ObjectTypes.MangroveSapling.isLog(), "!isLog");
      assertFalse(ObjectTypes.Furnace.isLog(), "!isLog");
      assertFalse(ObjectTypes.Workbench.isLog(), "!isLog");
      assertFalse(ObjectTypes.Powerstone.isLog(), "!isLog");
      assertFalse(ObjectTypes.ForceField.isLog(), "!isLog");
      assertFalse(ObjectTypes.Chest.isLog(), "!isLog");
      assertFalse(ObjectTypes.SpawnTile.isLog(), "!isLog");
      assertFalse(ObjectTypes.Bed.isLog(), "!isLog");
      assertFalse(ObjectTypes.TextSign.isLog(), "!isLog");
      assertFalse(ObjectTypes.Torch.isLog(), "!isLog");
      assertFalse(ObjectTypes.Stonecutter.isLog(), "!isLog");
      assertFalse(ObjectTypes.StoneBricks.isLog(), "!isLog");
      assertFalse(ObjectTypes.TuffBricks.isLog(), "!isLog");
      assertFalse(ObjectTypes.DeepslateBricks.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedAndesite.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedGranite.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedDiorite.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedTuff.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedBasalt.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedBlackstone.isLog(), "!isLog");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isLog(), "!isLog");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isLog(), "!isLog");
      assertFalse(ObjectTypes.ChiseledDeepslate.isLog(), "!isLog");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isLog(), "!isLog");
      assertFalse(ObjectTypes.ChiseledSandstone.isLog(), "!isLog");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isLog(), "!isLog");
      assertFalse(ObjectTypes.CrackedStoneBricks.isLog(), "!isLog");
      assertFalse(ObjectTypes.CrackedTuffBricks.isLog(), "!isLog");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isLog(), "!isLog");
      assertFalse(ObjectTypes.SmoothSandstone.isLog(), "!isLog");
      assertFalse(ObjectTypes.SmoothRedSandstone.isLog(), "!isLog");
      assertFalse(ObjectTypes.SmoothStone.isLog(), "!isLog");
      assertFalse(ObjectTypes.Cotton.isLog(), "!isLog");
      assertFalse(ObjectTypes.CottonSeed.isLog(), "!isLog");
      assertFalse(ObjectTypes.Glass.isLog(), "!isLog");
      assertFalse(ObjectTypes.Brick.isLog(), "!isLog");
      assertFalse(ObjectTypes.BrickBlock.isLog(), "!isLog");
      assertFalse(ObjectTypes.MudBricks.isLog(), "!isLog");
      assertFalse(ObjectTypes.Paper.isLog(), "!isLog");
      assertFalse(ObjectTypes.Book.isLog(), "!isLog");
      assertFalse(ObjectTypes.Stick.isLog(), "!isLog");
      assertFalse(ObjectTypes.RedDye.isLog(), "!isLog");
      assertFalse(ObjectTypes.YellowDye.isLog(), "!isLog");
      assertFalse(ObjectTypes.BlueDye.isLog(), "!isLog");
      assertFalse(ObjectTypes.GreenDye.isLog(), "!isLog");
      assertFalse(ObjectTypes.WhiteDye.isLog(), "!isLog");
      assertFalse(ObjectTypes.BlackDye.isLog(), "!isLog");
      assertFalse(ObjectTypes.BrownDye.isLog(), "!isLog");
      assertFalse(ObjectTypes.OrangeDye.isLog(), "!isLog");
      assertFalse(ObjectTypes.PinkDye.isLog(), "!isLog");
      assertFalse(ObjectTypes.LimeDye.isLog(), "!isLog");
      assertFalse(ObjectTypes.CyanDye.isLog(), "!isLog");
      assertFalse(ObjectTypes.GrayDye.isLog(), "!isLog");
      assertFalse(ObjectTypes.PurpleDye.isLog(), "!isLog");
      assertFalse(ObjectTypes.WhiteConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.OrangeConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.MagentaConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.YellowConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.LimeConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.PinkConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.GrayConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.CyanConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.PurpleConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.BlueConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.BrownConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.GreenConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.RedConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.BlackConcretePowder.isLog(), "!isLog");
      assertFalse(ObjectTypes.WhiteConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.OrangeConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.MagentaConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.LightBlueConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.YellowConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.LimeConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.PinkConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.GrayConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.LightGrayConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.CyanConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.PurpleConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.BlueConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.BrownConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.GreenConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.RedConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.BlackConcrete.isLog(), "!isLog");
      assertFalse(ObjectTypes.GlassPane.isLog(), "!isLog");
      assertFalse(ObjectTypes.OakDoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.BirchDoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.JungleDoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.SakuraDoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.AcaciaDoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.SpruceDoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.DarkOakDoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.MangroveDoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.IronDoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.OakTrapdoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.BirchTrapdoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.JungleTrapdoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.SakuraTrapdoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.SpruceTrapdoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.MangroveTrapdoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.IronTrapdoor.isLog(), "!isLog");
      assertFalse(ObjectTypes.OakFence.isLog(), "!isLog");
      assertFalse(ObjectTypes.BirchFence.isLog(), "!isLog");
      assertFalse(ObjectTypes.JungleFence.isLog(), "!isLog");
      assertFalse(ObjectTypes.SakuraFence.isLog(), "!isLog");
      assertFalse(ObjectTypes.AcaciaFence.isLog(), "!isLog");
      assertFalse(ObjectTypes.SpruceFence.isLog(), "!isLog");
      assertFalse(ObjectTypes.DarkOakFence.isLog(), "!isLog");
      assertFalse(ObjectTypes.MangroveFence.isLog(), "!isLog");
      assertFalse(ObjectTypes.OakFenceGate.isLog(), "!isLog");
      assertFalse(ObjectTypes.BirchFenceGate.isLog(), "!isLog");
      assertFalse(ObjectTypes.JungleFenceGate.isLog(), "!isLog");
      assertFalse(ObjectTypes.SakuraFenceGate.isLog(), "!isLog");
      assertFalse(ObjectTypes.AcaciaFenceGate.isLog(), "!isLog");
      assertFalse(ObjectTypes.SpruceFenceGate.isLog(), "!isLog");
      assertFalse(ObjectTypes.DarkOakFenceGate.isLog(), "!isLog");
      assertFalse(ObjectTypes.MangroveFenceGate.isLog(), "!isLog");
      assertFalse(ObjectTypes.IronBars.isLog(), "!isLog");
      assertFalse(ObjectTypes.Lantern.isLog(), "!isLog");
      assertFalse(ObjectTypes.Ladder.isLog(), "!isLog");
      assertFalse(ObjectTypes.Barrel.isLog(), "!isLog");
      assertFalse(ObjectTypes.Bookshelf.isLog(), "!isLog");
      assertFalse(ObjectTypes.Carpet.isLog(), "!isLog");
      assertFalse(ObjectTypes.FlowerPot.isLog(), "!isLog");
      assertFalse(ObjectTypes.Lodestone.isLog(), "!isLog");
      assertFalse(ObjectTypes.StoneStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.CobblestoneStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.StoneBricksStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.SmoothStoneStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.AndesiteStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.GraniteStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.DioriteStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.TuffStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.BasaltStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.BlackstoneStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedTuffStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.DeepslateStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.SandstoneStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.RedSandstoneStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.BrickBlockStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.MudBricksStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.TuffBricksStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.OakPlanksStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.BirchPlanksStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.JunglePlanksStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.SprucePlanksStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isLog(), "!isLog");
      assertFalse(ObjectTypes.StoneSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.CobblestoneSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.StoneBricksSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.SmoothStoneSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.AndesiteSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.GraniteSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.DioriteSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.TuffSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.BasaltSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.BlackstoneSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedTuffSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.DeepslateSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.SandstoneSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.RedSandstoneSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.BrickBlockSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.MudBricksSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.TuffBricksSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.OakPlanksSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.BirchPlanksSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.JunglePlanksSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.SprucePlanksSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isLog(), "!isLog");
      assertFalse(ObjectTypes.StoneWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.CobblestoneWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.StoneBricksWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.AndesiteWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.GraniteWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.DioriteWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.TuffWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.BasaltWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.BlackstoneWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedGraniteWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedDioriteWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedTuffWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedBasaltWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.DeepslateWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.DeepslateBricksWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.SandstoneWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.RedSandstoneWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.BrickBlockWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.MudBricksWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.TuffBricksWall.isLog(), "!isLog");
      assertFalse(ObjectTypes.WoodenPick.isLog(), "!isLog");
      assertFalse(ObjectTypes.CopperPick.isLog(), "!isLog");
      assertFalse(ObjectTypes.IronPick.isLog(), "!isLog");
      assertFalse(ObjectTypes.GoldPick.isLog(), "!isLog");
      assertFalse(ObjectTypes.DiamondPick.isLog(), "!isLog");
      assertFalse(ObjectTypes.NeptuniumPick.isLog(), "!isLog");
      assertFalse(ObjectTypes.WoodenAxe.isLog(), "!isLog");
      assertFalse(ObjectTypes.CopperAxe.isLog(), "!isLog");
      assertFalse(ObjectTypes.IronAxe.isLog(), "!isLog");
      assertFalse(ObjectTypes.GoldAxe.isLog(), "!isLog");
      assertFalse(ObjectTypes.DiamondAxe.isLog(), "!isLog");
      assertFalse(ObjectTypes.NeptuniumAxe.isLog(), "!isLog");
      assertFalse(ObjectTypes.WoodenWhacker.isLog(), "!isLog");
      assertFalse(ObjectTypes.CopperWhacker.isLog(), "!isLog");
      assertFalse(ObjectTypes.IronWhacker.isLog(), "!isLog");
      assertFalse(ObjectTypes.WoodenHoe.isLog(), "!isLog");
      assertFalse(ObjectTypes.GoldBar.isLog(), "!isLog");
      assertFalse(ObjectTypes.IronBar.isLog(), "!isLog");
      assertFalse(ObjectTypes.Diamond.isLog(), "!isLog");
      assertFalse(ObjectTypes.NeptuniumBar.isLog(), "!isLog");
      assertFalse(ObjectTypes.Bucket.isLog(), "!isLog");
      assertFalse(ObjectTypes.WaterBucket.isLog(), "!isLog");
      assertFalse(ObjectTypes.WheatSlop.isLog(), "!isLog");
      assertFalse(ObjectTypes.PumpkinSoup.isLog(), "!isLog");
      assertFalse(ObjectTypes.MelonSmoothie.isLog(), "!isLog");
      assertFalse(ObjectTypes.Battery.isLog(), "!isLog");
      assertFalse(ObjectTypes.Player.isLog(), "!isLog");
      assertFalse(ObjectTypes.Fragment.isLog(), "!isLog");
    }

    {
      assertTrue(ObjectTypes.OakLeaf.isLeaf(), "isLeaf");
      assertTrue(ObjectTypes.BirchLeaf.isLeaf(), "isLeaf");
      assertTrue(ObjectTypes.JungleLeaf.isLeaf(), "isLeaf");
      assertTrue(ObjectTypes.SakuraLeaf.isLeaf(), "isLeaf");
      assertTrue(ObjectTypes.SpruceLeaf.isLeaf(), "isLeaf");
      assertTrue(ObjectTypes.AcaciaLeaf.isLeaf(), "isLeaf");
      assertTrue(ObjectTypes.DarkOakLeaf.isLeaf(), "isLeaf");
      assertTrue(ObjectTypes.MangroveLeaf.isLeaf(), "isLeaf");
      assertTrue(ObjectTypes.AzaleaLeaf.isLeaf(), "isLeaf");
      assertTrue(ObjectTypes.FloweringAzaleaLeaf.isLeaf(), "isLeaf");
      assertFalse(ObjectTypes.Null.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Air.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Water.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Lava.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Stone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Bedrock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Deepslate.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Granite.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Tuff.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Calcite.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Basalt.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SmoothBasalt.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Andesite.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Diorite.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Cobblestone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MossyCobblestone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Obsidian.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Dripstone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Blackstone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CobbledDeepslate.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Amethyst.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Glowstone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Grass.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Dirt.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Moss.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Podzol.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DirtPath.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Mud.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PackedMud.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Farmland.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.WetFarmland.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Snow.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Ice.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.UnrevealedOre.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CoalOre.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CopperOre.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.IronOre.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GoldOre.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DiamondOre.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.NeptuniumOre.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Gravel.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Sand.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.RedSand.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Sandstone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.RedSandstone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Clay.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AnyTerracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Terracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BrownTerracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.OrangeTerracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.WhiteTerracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.LightGrayTerracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.YellowTerracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.RedTerracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.LightBlueTerracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CyanTerracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BlackTerracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PurpleTerracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BlueTerracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MagentaTerracotta.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AnyLog.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.OakLog.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BirchLog.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.JungleLog.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SakuraLog.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AcaciaLog.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SpruceLog.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DarkOakLog.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MangroveLog.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AnyLeaf.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MangroveRoots.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AzaleaFlower.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BellFlower.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DandelionFlower.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DaylilyFlower.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.LilacFlower.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.RoseFlower.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.FireFlower.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MorninggloryFlower.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PeonyFlower.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Ultraviolet.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SunFlower.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.FlyTrap.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.FescueGrass.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SwitchGrass.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.VinesBush.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.IvyVine.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.HempBush.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Coral.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SeaAnemone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Algae.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.HornCoralBlock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.FireCoralBlock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.TubeCoralBlock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BubbleCoralBlock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BrainCoralBlock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SpiderWeb.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Bone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GoldenMushroom.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.RedMushroom.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CoffeeBush.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.StrawberryBush.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.RaspberryBush.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Wheat.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CottonBush.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Pumpkin.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Melon.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.RedMushroomBlock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BrownMushroomBlock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MushroomStem.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BambooBush.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Cactus.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AnyPlank.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.OakPlanks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BirchPlanks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.JunglePlanks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SakuraPlanks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SprucePlanks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AcaciaPlanks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DarkOakPlanks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MangrovePlanks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CopperBlock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.IronBlock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GoldBlock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DiamondBlock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.NeptuniumBlock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.WheatSeed.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PumpkinSeed.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MelonSeed.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.OakSapling.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BirchSapling.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.JungleSapling.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SakuraSapling.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AcaciaSapling.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SpruceSapling.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DarkOakSapling.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MangroveSapling.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Furnace.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Workbench.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Powerstone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.ForceField.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Chest.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SpawnTile.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Bed.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.TextSign.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Torch.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Stonecutter.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.StoneBricks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.TuffBricks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DeepslateBricks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedAndesite.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedGranite.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedDiorite.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedTuff.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedBasalt.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedBlackstone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.ChiseledDeepslate.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.ChiseledSandstone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CrackedStoneBricks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CrackedTuffBricks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SmoothSandstone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SmoothRedSandstone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SmoothStone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Cotton.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CottonSeed.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Glass.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Brick.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BrickBlock.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MudBricks.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Paper.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Book.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Stick.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.RedDye.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.YellowDye.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BlueDye.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GreenDye.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.WhiteDye.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BlackDye.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BrownDye.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.OrangeDye.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PinkDye.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.LimeDye.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CyanDye.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GrayDye.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PurpleDye.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.WhiteConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.OrangeConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MagentaConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.YellowConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.LimeConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PinkConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GrayConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CyanConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PurpleConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BlueConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BrownConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GreenConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.RedConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BlackConcretePowder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.WhiteConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.OrangeConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MagentaConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.LightBlueConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.YellowConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.LimeConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PinkConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GrayConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.LightGrayConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CyanConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PurpleConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BlueConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BrownConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GreenConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.RedConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BlackConcrete.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GlassPane.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.OakDoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BirchDoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.JungleDoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SakuraDoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AcaciaDoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SpruceDoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DarkOakDoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MangroveDoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.IronDoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.OakTrapdoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BirchTrapdoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.JungleTrapdoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SakuraTrapdoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SpruceTrapdoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MangroveTrapdoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.IronTrapdoor.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.OakFence.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BirchFence.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.JungleFence.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SakuraFence.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AcaciaFence.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SpruceFence.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DarkOakFence.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MangroveFence.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.OakFenceGate.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BirchFenceGate.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.JungleFenceGate.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SakuraFenceGate.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AcaciaFenceGate.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SpruceFenceGate.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DarkOakFenceGate.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MangroveFenceGate.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.IronBars.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Lantern.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Ladder.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Barrel.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Bookshelf.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Carpet.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.FlowerPot.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Lodestone.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.StoneStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CobblestoneStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.StoneBricksStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SmoothStoneStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AndesiteStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GraniteStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DioriteStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.TuffStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BasaltStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BlackstoneStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedTuffStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DeepslateStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SandstoneStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.RedSandstoneStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BrickBlockStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MudBricksStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.TuffBricksStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.OakPlanksStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BirchPlanksStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.JunglePlanksStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SprucePlanksStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.StoneSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CobblestoneSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.StoneBricksSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SmoothStoneSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AndesiteSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GraniteSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DioriteSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.TuffSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BasaltSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BlackstoneSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedTuffSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DeepslateSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SandstoneSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.RedSandstoneSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BrickBlockSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MudBricksSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.TuffBricksSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.OakPlanksSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BirchPlanksSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.JunglePlanksSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SprucePlanksSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.StoneWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CobblestoneWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.StoneBricksWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.AndesiteWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GraniteWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DioriteWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.TuffWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BasaltWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BlackstoneWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedGraniteWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedDioriteWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedTuffWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedBasaltWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DeepslateWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DeepslateBricksWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.SandstoneWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.RedSandstoneWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.BrickBlockWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MudBricksWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.TuffBricksWall.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.WoodenPick.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CopperPick.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.IronPick.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GoldPick.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DiamondPick.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.NeptuniumPick.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.WoodenAxe.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CopperAxe.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.IronAxe.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GoldAxe.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.DiamondAxe.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.NeptuniumAxe.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.WoodenWhacker.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.CopperWhacker.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.IronWhacker.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.WoodenHoe.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.GoldBar.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.IronBar.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Diamond.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.NeptuniumBar.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Bucket.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.WaterBucket.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.WheatSlop.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.PumpkinSoup.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.MelonSmoothie.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Battery.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Player.isLeaf(), "!isLeaf");
      assertFalse(ObjectTypes.Fragment.isLeaf(), "!isLeaf");
    }

    {
      assertTrue(ObjectTypes.OakPlanks.isPlank(), "isPlank");
      assertTrue(ObjectTypes.BirchPlanks.isPlank(), "isPlank");
      assertTrue(ObjectTypes.JunglePlanks.isPlank(), "isPlank");
      assertTrue(ObjectTypes.SakuraPlanks.isPlank(), "isPlank");
      assertTrue(ObjectTypes.SprucePlanks.isPlank(), "isPlank");
      assertTrue(ObjectTypes.AcaciaPlanks.isPlank(), "isPlank");
      assertTrue(ObjectTypes.DarkOakPlanks.isPlank(), "isPlank");
      assertTrue(ObjectTypes.MangrovePlanks.isPlank(), "isPlank");
      assertFalse(ObjectTypes.Null.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Air.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Water.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Lava.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Stone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Bedrock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Deepslate.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Granite.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Tuff.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Calcite.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Basalt.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SmoothBasalt.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Andesite.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Diorite.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Cobblestone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MossyCobblestone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Obsidian.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Dripstone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Blackstone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CobbledDeepslate.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Amethyst.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Glowstone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Grass.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Dirt.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Moss.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Podzol.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DirtPath.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Mud.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PackedMud.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Farmland.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.WetFarmland.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Snow.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Ice.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.UnrevealedOre.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CoalOre.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CopperOre.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.IronOre.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GoldOre.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DiamondOre.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.NeptuniumOre.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Gravel.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Sand.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.RedSand.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Sandstone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.RedSandstone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Clay.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AnyTerracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Terracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BrownTerracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.OrangeTerracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.WhiteTerracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.LightGrayTerracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.YellowTerracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.RedTerracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.LightBlueTerracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CyanTerracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BlackTerracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PurpleTerracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BlueTerracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MagentaTerracotta.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AnyLog.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.OakLog.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BirchLog.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.JungleLog.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SakuraLog.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AcaciaLog.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SpruceLog.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DarkOakLog.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MangroveLog.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AnyLeaf.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.OakLeaf.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BirchLeaf.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.JungleLeaf.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SakuraLeaf.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SpruceLeaf.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AcaciaLeaf.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DarkOakLeaf.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AzaleaLeaf.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MangroveLeaf.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MangroveRoots.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AzaleaFlower.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BellFlower.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DandelionFlower.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DaylilyFlower.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.LilacFlower.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.RoseFlower.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.FireFlower.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MorninggloryFlower.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PeonyFlower.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Ultraviolet.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SunFlower.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.FlyTrap.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.FescueGrass.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SwitchGrass.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.VinesBush.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.IvyVine.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.HempBush.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Coral.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SeaAnemone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Algae.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.HornCoralBlock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.FireCoralBlock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.TubeCoralBlock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BubbleCoralBlock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BrainCoralBlock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SpiderWeb.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Bone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GoldenMushroom.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.RedMushroom.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CoffeeBush.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.StrawberryBush.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.RaspberryBush.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Wheat.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CottonBush.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Pumpkin.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Melon.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.RedMushroomBlock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BrownMushroomBlock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MushroomStem.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BambooBush.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Cactus.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AnyPlank.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CopperBlock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.IronBlock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GoldBlock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DiamondBlock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.NeptuniumBlock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.WheatSeed.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PumpkinSeed.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MelonSeed.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.OakSapling.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BirchSapling.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.JungleSapling.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SakuraSapling.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AcaciaSapling.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SpruceSapling.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DarkOakSapling.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MangroveSapling.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Furnace.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Workbench.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Powerstone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.ForceField.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Chest.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SpawnTile.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Bed.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.TextSign.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Torch.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Stonecutter.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.StoneBricks.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.TuffBricks.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DeepslateBricks.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedAndesite.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedGranite.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedDiorite.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedTuff.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedBasalt.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedBlackstone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.ChiseledDeepslate.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.ChiseledSandstone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CrackedStoneBricks.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CrackedTuffBricks.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SmoothSandstone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SmoothRedSandstone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SmoothStone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Cotton.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CottonSeed.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Glass.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Brick.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BrickBlock.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MudBricks.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Paper.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Book.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Stick.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.RedDye.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.YellowDye.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BlueDye.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GreenDye.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.WhiteDye.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BlackDye.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BrownDye.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.OrangeDye.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PinkDye.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.LimeDye.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CyanDye.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GrayDye.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PurpleDye.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.WhiteConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.OrangeConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MagentaConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.YellowConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.LimeConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PinkConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GrayConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CyanConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PurpleConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BlueConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BrownConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GreenConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.RedConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BlackConcretePowder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.WhiteConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.OrangeConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MagentaConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.LightBlueConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.YellowConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.LimeConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PinkConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GrayConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.LightGrayConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CyanConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PurpleConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BlueConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BrownConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GreenConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.RedConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BlackConcrete.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GlassPane.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.OakDoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BirchDoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.JungleDoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SakuraDoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AcaciaDoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SpruceDoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DarkOakDoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MangroveDoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.IronDoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.OakTrapdoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BirchTrapdoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.JungleTrapdoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SakuraTrapdoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SpruceTrapdoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MangroveTrapdoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.IronTrapdoor.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.OakFence.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BirchFence.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.JungleFence.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SakuraFence.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AcaciaFence.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SpruceFence.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DarkOakFence.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MangroveFence.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.OakFenceGate.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BirchFenceGate.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.JungleFenceGate.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SakuraFenceGate.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AcaciaFenceGate.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SpruceFenceGate.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DarkOakFenceGate.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MangroveFenceGate.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.IronBars.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Lantern.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Ladder.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Barrel.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Bookshelf.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Carpet.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.FlowerPot.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Lodestone.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.StoneStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CobblestoneStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.StoneBricksStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SmoothStoneStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AndesiteStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GraniteStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DioriteStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.TuffStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BasaltStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BlackstoneStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedTuffStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DeepslateStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SandstoneStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.RedSandstoneStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BrickBlockStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MudBricksStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.TuffBricksStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.OakPlanksStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BirchPlanksStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.JunglePlanksStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SprucePlanksStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.StoneSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CobblestoneSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.StoneBricksSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SmoothStoneSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AndesiteSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GraniteSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DioriteSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.TuffSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BasaltSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BlackstoneSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedTuffSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DeepslateSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SandstoneSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.RedSandstoneSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BrickBlockSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MudBricksSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.TuffBricksSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.OakPlanksSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BirchPlanksSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.JunglePlanksSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SprucePlanksSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.StoneWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CobblestoneWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.StoneBricksWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.AndesiteWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GraniteWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DioriteWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.TuffWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BasaltWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BlackstoneWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedGraniteWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedDioriteWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedTuffWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedBasaltWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DeepslateWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DeepslateBricksWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.SandstoneWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.RedSandstoneWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.BrickBlockWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MudBricksWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.TuffBricksWall.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.WoodenPick.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CopperPick.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.IronPick.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GoldPick.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DiamondPick.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.NeptuniumPick.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.WoodenAxe.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CopperAxe.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.IronAxe.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GoldAxe.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.DiamondAxe.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.NeptuniumAxe.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.WoodenWhacker.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.CopperWhacker.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.IronWhacker.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.WoodenHoe.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.GoldBar.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.IronBar.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Diamond.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.NeptuniumBar.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Bucket.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.WaterBucket.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.WheatSlop.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.PumpkinSoup.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.MelonSmoothie.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Battery.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Player.isPlank(), "!isPlank");
      assertFalse(ObjectTypes.Fragment.isPlank(), "!isPlank");
    }

    {
      assertTrue(ObjectTypes.WheatSeed.isSeed(), "isSeed");
      assertTrue(ObjectTypes.PumpkinSeed.isSeed(), "isSeed");
      assertTrue(ObjectTypes.MelonSeed.isSeed(), "isSeed");
      assertFalse(ObjectTypes.Null.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Air.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Water.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Lava.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Stone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Bedrock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Deepslate.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Granite.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Tuff.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Calcite.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Basalt.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SmoothBasalt.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Andesite.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Diorite.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Cobblestone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MossyCobblestone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Obsidian.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Dripstone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Blackstone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CobbledDeepslate.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Amethyst.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Glowstone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Grass.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Dirt.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Moss.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Podzol.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DirtPath.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Mud.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PackedMud.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Farmland.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.WetFarmland.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Snow.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Ice.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.UnrevealedOre.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CoalOre.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CopperOre.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.IronOre.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GoldOre.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DiamondOre.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.NeptuniumOre.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Gravel.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Sand.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.RedSand.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Sandstone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.RedSandstone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Clay.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AnyTerracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Terracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BrownTerracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OrangeTerracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.WhiteTerracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.LightGrayTerracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.YellowTerracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.RedTerracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.LightBlueTerracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CyanTerracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BlackTerracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PurpleTerracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BlueTerracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MagentaTerracotta.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AnyLog.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OakLog.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BirchLog.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.JungleLog.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SakuraLog.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AcaciaLog.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SpruceLog.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DarkOakLog.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MangroveLog.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AnyLeaf.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OakLeaf.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BirchLeaf.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.JungleLeaf.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SakuraLeaf.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SpruceLeaf.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AcaciaLeaf.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DarkOakLeaf.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AzaleaLeaf.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MangroveLeaf.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MangroveRoots.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AzaleaFlower.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BellFlower.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DandelionFlower.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DaylilyFlower.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.LilacFlower.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.RoseFlower.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.FireFlower.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MorninggloryFlower.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PeonyFlower.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Ultraviolet.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SunFlower.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.FlyTrap.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.FescueGrass.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SwitchGrass.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.VinesBush.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.IvyVine.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.HempBush.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Coral.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SeaAnemone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Algae.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.HornCoralBlock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.FireCoralBlock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.TubeCoralBlock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BubbleCoralBlock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BrainCoralBlock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SpiderWeb.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Bone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GoldenMushroom.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.RedMushroom.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CoffeeBush.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.StrawberryBush.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.RaspberryBush.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Wheat.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CottonBush.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Pumpkin.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Melon.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.RedMushroomBlock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BrownMushroomBlock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MushroomStem.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BambooBush.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Cactus.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AnyPlank.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OakPlanks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BirchPlanks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.JunglePlanks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SakuraPlanks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SprucePlanks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AcaciaPlanks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DarkOakPlanks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MangrovePlanks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CopperBlock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.IronBlock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GoldBlock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DiamondBlock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.NeptuniumBlock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OakSapling.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BirchSapling.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.JungleSapling.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SakuraSapling.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AcaciaSapling.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SpruceSapling.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DarkOakSapling.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MangroveSapling.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Furnace.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Workbench.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Powerstone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.ForceField.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Chest.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SpawnTile.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Bed.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.TextSign.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Torch.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Stonecutter.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.StoneBricks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.TuffBricks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DeepslateBricks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedAndesite.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedGranite.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedDiorite.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedTuff.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedBasalt.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedBlackstone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.ChiseledDeepslate.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.ChiseledSandstone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CrackedStoneBricks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CrackedTuffBricks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SmoothSandstone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SmoothRedSandstone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SmoothStone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Cotton.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CottonSeed.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Glass.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Brick.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BrickBlock.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MudBricks.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Paper.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Book.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Stick.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.RedDye.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.YellowDye.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BlueDye.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GreenDye.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.WhiteDye.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BlackDye.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BrownDye.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OrangeDye.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PinkDye.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.LimeDye.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CyanDye.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GrayDye.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PurpleDye.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.WhiteConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OrangeConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MagentaConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.YellowConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.LimeConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PinkConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GrayConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CyanConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PurpleConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BlueConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BrownConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GreenConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.RedConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BlackConcretePowder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.WhiteConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OrangeConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MagentaConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.LightBlueConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.YellowConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.LimeConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PinkConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GrayConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.LightGrayConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CyanConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PurpleConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BlueConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BrownConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GreenConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.RedConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BlackConcrete.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GlassPane.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OakDoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BirchDoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.JungleDoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SakuraDoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AcaciaDoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SpruceDoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DarkOakDoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MangroveDoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.IronDoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OakTrapdoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BirchTrapdoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.JungleTrapdoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SakuraTrapdoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SpruceTrapdoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MangroveTrapdoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.IronTrapdoor.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OakFence.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BirchFence.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.JungleFence.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SakuraFence.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AcaciaFence.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SpruceFence.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DarkOakFence.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MangroveFence.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OakFenceGate.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BirchFenceGate.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.JungleFenceGate.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SakuraFenceGate.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AcaciaFenceGate.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SpruceFenceGate.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DarkOakFenceGate.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MangroveFenceGate.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.IronBars.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Lantern.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Ladder.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Barrel.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Bookshelf.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Carpet.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.FlowerPot.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Lodestone.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.StoneStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CobblestoneStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.StoneBricksStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SmoothStoneStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AndesiteStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GraniteStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DioriteStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.TuffStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BasaltStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BlackstoneStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedTuffStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DeepslateStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SandstoneStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.RedSandstoneStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BrickBlockStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MudBricksStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.TuffBricksStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OakPlanksStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BirchPlanksStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.JunglePlanksStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SprucePlanksStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.StoneSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CobblestoneSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.StoneBricksSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SmoothStoneSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AndesiteSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GraniteSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DioriteSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.TuffSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BasaltSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BlackstoneSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedTuffSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DeepslateSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SandstoneSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.RedSandstoneSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BrickBlockSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MudBricksSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.TuffBricksSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.OakPlanksSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BirchPlanksSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.JunglePlanksSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SprucePlanksSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.StoneWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CobblestoneWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.StoneBricksWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.AndesiteWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GraniteWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DioriteWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.TuffWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BasaltWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BlackstoneWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedGraniteWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedDioriteWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedTuffWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedBasaltWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DeepslateWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DeepslateBricksWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.SandstoneWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.RedSandstoneWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.BrickBlockWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MudBricksWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.TuffBricksWall.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.WoodenPick.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CopperPick.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.IronPick.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GoldPick.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DiamondPick.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.NeptuniumPick.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.WoodenAxe.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CopperAxe.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.IronAxe.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GoldAxe.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.DiamondAxe.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.NeptuniumAxe.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.WoodenWhacker.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.CopperWhacker.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.IronWhacker.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.WoodenHoe.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.GoldBar.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.IronBar.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Diamond.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.NeptuniumBar.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Bucket.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.WaterBucket.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.WheatSlop.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.PumpkinSoup.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.MelonSmoothie.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Battery.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Player.isSeed(), "!isSeed");
      assertFalse(ObjectTypes.Fragment.isSeed(), "!isSeed");
    }

    {
      assertTrue(ObjectTypes.OakSapling.isSapling(), "isSapling");
      assertTrue(ObjectTypes.BirchSapling.isSapling(), "isSapling");
      assertTrue(ObjectTypes.JungleSapling.isSapling(), "isSapling");
      assertTrue(ObjectTypes.SakuraSapling.isSapling(), "isSapling");
      assertTrue(ObjectTypes.AcaciaSapling.isSapling(), "isSapling");
      assertTrue(ObjectTypes.SpruceSapling.isSapling(), "isSapling");
      assertTrue(ObjectTypes.DarkOakSapling.isSapling(), "isSapling");
      assertTrue(ObjectTypes.MangroveSapling.isSapling(), "isSapling");
      assertFalse(ObjectTypes.Null.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Air.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Water.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Lava.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Stone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Bedrock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Deepslate.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Granite.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Tuff.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Calcite.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Basalt.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SmoothBasalt.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Andesite.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Diorite.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Cobblestone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MossyCobblestone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Obsidian.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Dripstone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Blackstone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CobbledDeepslate.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Amethyst.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Glowstone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Grass.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Dirt.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Moss.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Podzol.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DirtPath.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Mud.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PackedMud.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Farmland.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.WetFarmland.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Snow.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Ice.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.UnrevealedOre.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CoalOre.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CopperOre.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.IronOre.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GoldOre.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DiamondOre.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.NeptuniumOre.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Gravel.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Sand.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.RedSand.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Sandstone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.RedSandstone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Clay.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AnyTerracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Terracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BrownTerracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.OrangeTerracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.WhiteTerracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.LightGrayTerracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.YellowTerracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.RedTerracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.LightBlueTerracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CyanTerracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BlackTerracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PurpleTerracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BlueTerracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MagentaTerracotta.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AnyLog.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.OakLog.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BirchLog.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.JungleLog.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SakuraLog.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AcaciaLog.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SpruceLog.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DarkOakLog.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MangroveLog.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AnyLeaf.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.OakLeaf.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BirchLeaf.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.JungleLeaf.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SakuraLeaf.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SpruceLeaf.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AcaciaLeaf.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DarkOakLeaf.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AzaleaLeaf.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MangroveLeaf.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MangroveRoots.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AzaleaFlower.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BellFlower.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DandelionFlower.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DaylilyFlower.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.LilacFlower.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.RoseFlower.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.FireFlower.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MorninggloryFlower.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PeonyFlower.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Ultraviolet.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SunFlower.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.FlyTrap.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.FescueGrass.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SwitchGrass.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.VinesBush.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.IvyVine.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.HempBush.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Coral.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SeaAnemone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Algae.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.HornCoralBlock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.FireCoralBlock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.TubeCoralBlock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BubbleCoralBlock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BrainCoralBlock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SpiderWeb.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Bone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GoldenMushroom.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.RedMushroom.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CoffeeBush.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.StrawberryBush.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.RaspberryBush.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Wheat.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CottonBush.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Pumpkin.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Melon.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.RedMushroomBlock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BrownMushroomBlock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MushroomStem.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BambooBush.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Cactus.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AnyPlank.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.OakPlanks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BirchPlanks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.JunglePlanks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SakuraPlanks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SprucePlanks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AcaciaPlanks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DarkOakPlanks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MangrovePlanks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CopperBlock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.IronBlock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GoldBlock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DiamondBlock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.NeptuniumBlock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.WheatSeed.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PumpkinSeed.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MelonSeed.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Furnace.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Workbench.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Powerstone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.ForceField.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Chest.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SpawnTile.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Bed.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.TextSign.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Torch.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Stonecutter.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.StoneBricks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.TuffBricks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DeepslateBricks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedAndesite.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedGranite.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedDiorite.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedTuff.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedBasalt.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedBlackstone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.ChiseledDeepslate.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.ChiseledSandstone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CrackedStoneBricks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CrackedTuffBricks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SmoothSandstone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SmoothRedSandstone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SmoothStone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Cotton.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CottonSeed.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Glass.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Brick.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BrickBlock.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MudBricks.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Paper.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Book.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Stick.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.RedDye.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.YellowDye.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BlueDye.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GreenDye.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.WhiteDye.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BlackDye.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BrownDye.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.OrangeDye.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PinkDye.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.LimeDye.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CyanDye.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GrayDye.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PurpleDye.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.WhiteConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.OrangeConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MagentaConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.YellowConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.LimeConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PinkConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GrayConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CyanConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PurpleConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BlueConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BrownConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GreenConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.RedConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BlackConcretePowder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.WhiteConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.OrangeConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MagentaConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.LightBlueConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.YellowConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.LimeConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PinkConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GrayConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.LightGrayConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CyanConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PurpleConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BlueConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BrownConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GreenConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.RedConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BlackConcrete.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GlassPane.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.OakDoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BirchDoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.JungleDoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SakuraDoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AcaciaDoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SpruceDoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DarkOakDoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MangroveDoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.IronDoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.OakTrapdoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BirchTrapdoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.JungleTrapdoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SakuraTrapdoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SpruceTrapdoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MangroveTrapdoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.IronTrapdoor.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.OakFence.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BirchFence.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.JungleFence.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SakuraFence.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AcaciaFence.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SpruceFence.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DarkOakFence.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MangroveFence.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.OakFenceGate.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BirchFenceGate.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.JungleFenceGate.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SakuraFenceGate.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AcaciaFenceGate.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SpruceFenceGate.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DarkOakFenceGate.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MangroveFenceGate.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.IronBars.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Lantern.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Ladder.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Barrel.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Bookshelf.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Carpet.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.FlowerPot.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Lodestone.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.StoneStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CobblestoneStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.StoneBricksStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SmoothStoneStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AndesiteStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GraniteStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DioriteStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.TuffStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BasaltStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BlackstoneStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedTuffStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DeepslateStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SandstoneStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.RedSandstoneStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BrickBlockStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MudBricksStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.TuffBricksStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.OakPlanksStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BirchPlanksStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.JunglePlanksStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SprucePlanksStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.StoneSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CobblestoneSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.StoneBricksSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SmoothStoneSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AndesiteSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GraniteSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DioriteSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.TuffSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BasaltSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BlackstoneSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedTuffSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DeepslateSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SandstoneSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.RedSandstoneSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BrickBlockSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MudBricksSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.TuffBricksSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.OakPlanksSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BirchPlanksSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.JunglePlanksSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SprucePlanksSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.StoneWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CobblestoneWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.StoneBricksWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.AndesiteWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GraniteWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DioriteWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.TuffWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BasaltWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BlackstoneWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedGraniteWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedDioriteWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedTuffWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedBasaltWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DeepslateWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DeepslateBricksWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.SandstoneWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.RedSandstoneWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.BrickBlockWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MudBricksWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.TuffBricksWall.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.WoodenPick.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CopperPick.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.IronPick.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GoldPick.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DiamondPick.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.NeptuniumPick.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.WoodenAxe.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CopperAxe.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.IronAxe.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GoldAxe.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.DiamondAxe.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.NeptuniumAxe.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.WoodenWhacker.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.CopperWhacker.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.IronWhacker.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.WoodenHoe.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.GoldBar.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.IronBar.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Diamond.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.NeptuniumBar.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Bucket.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.WaterBucket.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.WheatSlop.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.PumpkinSoup.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.MelonSmoothie.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Battery.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Player.isSapling(), "!isSapling");
      assertFalse(ObjectTypes.Fragment.isSapling(), "!isSapling");
    }

    {
      assertTrue(ObjectTypes.ForceField.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.Chest.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.SpawnTile.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.Bed.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.Fragment.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.TextSign.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.OakDoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.BirchDoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.JungleDoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.SakuraDoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.AcaciaDoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.SpruceDoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.DarkOakDoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.MangroveDoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.IronDoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.OakTrapdoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.BirchTrapdoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.JungleTrapdoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.SakuraTrapdoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.AcaciaTrapdoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.SpruceTrapdoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.DarkOakTrapdoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.MangroveTrapdoor.isSmartEntity(), "isSmartEntity");
      assertTrue(ObjectTypes.IronTrapdoor.isSmartEntity(), "isSmartEntity");
      assertFalse(ObjectTypes.Null.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Air.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Water.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Lava.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Stone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Bedrock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Deepslate.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Granite.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Tuff.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Calcite.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Basalt.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SmoothBasalt.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Andesite.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Diorite.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Cobblestone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MossyCobblestone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Obsidian.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Dripstone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Blackstone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CobbledDeepslate.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Amethyst.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Glowstone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Grass.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Dirt.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Moss.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Podzol.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DirtPath.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Mud.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PackedMud.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Farmland.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.WetFarmland.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Snow.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Ice.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.UnrevealedOre.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CoalOre.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CopperOre.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.IronOre.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GoldOre.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DiamondOre.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.NeptuniumOre.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Gravel.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Sand.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.RedSand.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Sandstone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.RedSandstone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Clay.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AnyTerracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Terracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BrownTerracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.OrangeTerracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.WhiteTerracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.LightGrayTerracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.YellowTerracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.RedTerracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.LightBlueTerracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CyanTerracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BlackTerracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PurpleTerracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BlueTerracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MagentaTerracotta.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AnyLog.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.OakLog.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BirchLog.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.JungleLog.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SakuraLog.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AcaciaLog.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SpruceLog.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DarkOakLog.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MangroveLog.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AnyLeaf.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.OakLeaf.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BirchLeaf.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.JungleLeaf.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SakuraLeaf.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SpruceLeaf.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AcaciaLeaf.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DarkOakLeaf.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AzaleaLeaf.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MangroveLeaf.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MangroveRoots.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AzaleaFlower.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BellFlower.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DandelionFlower.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DaylilyFlower.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.LilacFlower.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.RoseFlower.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.FireFlower.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MorninggloryFlower.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PeonyFlower.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Ultraviolet.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SunFlower.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.FlyTrap.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.FescueGrass.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SwitchGrass.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.VinesBush.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.IvyVine.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.HempBush.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Coral.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SeaAnemone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Algae.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.HornCoralBlock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.FireCoralBlock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.TubeCoralBlock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BubbleCoralBlock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BrainCoralBlock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SpiderWeb.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Bone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GoldenMushroom.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.RedMushroom.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CoffeeBush.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.StrawberryBush.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.RaspberryBush.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Wheat.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CottonBush.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Pumpkin.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Melon.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.RedMushroomBlock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BrownMushroomBlock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MushroomStem.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BambooBush.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Cactus.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AnyPlank.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.OakPlanks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BirchPlanks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.JunglePlanks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SakuraPlanks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SprucePlanks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AcaciaPlanks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DarkOakPlanks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MangrovePlanks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CopperBlock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.IronBlock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GoldBlock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DiamondBlock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.NeptuniumBlock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.WheatSeed.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PumpkinSeed.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MelonSeed.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.OakSapling.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BirchSapling.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.JungleSapling.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SakuraSapling.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AcaciaSapling.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SpruceSapling.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DarkOakSapling.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MangroveSapling.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Furnace.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Workbench.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Powerstone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Torch.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Stonecutter.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.StoneBricks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.TuffBricks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DeepslateBricks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedAndesite.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedGranite.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedDiorite.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedTuff.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedBasalt.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedBlackstone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.ChiseledDeepslate.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.ChiseledSandstone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CrackedStoneBricks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CrackedTuffBricks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SmoothSandstone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SmoothRedSandstone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SmoothStone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Cotton.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CottonSeed.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Glass.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Brick.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BrickBlock.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MudBricks.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Paper.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Book.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Stick.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.RedDye.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.YellowDye.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BlueDye.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GreenDye.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.WhiteDye.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BlackDye.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BrownDye.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.OrangeDye.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PinkDye.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.LimeDye.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CyanDye.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GrayDye.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PurpleDye.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.WhiteConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.OrangeConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MagentaConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.YellowConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.LimeConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PinkConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GrayConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CyanConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PurpleConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BlueConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BrownConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GreenConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.RedConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BlackConcretePowder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.WhiteConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.OrangeConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MagentaConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.LightBlueConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.YellowConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.LimeConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PinkConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GrayConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.LightGrayConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CyanConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PurpleConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BlueConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BrownConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GreenConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.RedConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BlackConcrete.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GlassPane.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.OakFence.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BirchFence.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.JungleFence.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SakuraFence.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AcaciaFence.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SpruceFence.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DarkOakFence.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MangroveFence.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.OakFenceGate.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BirchFenceGate.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.JungleFenceGate.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SakuraFenceGate.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AcaciaFenceGate.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SpruceFenceGate.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DarkOakFenceGate.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MangroveFenceGate.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.IronBars.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Lantern.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Ladder.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Barrel.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Bookshelf.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Carpet.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.FlowerPot.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Lodestone.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.StoneStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CobblestoneStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.StoneBricksStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SmoothStoneStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AndesiteStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GraniteStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DioriteStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.TuffStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BasaltStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BlackstoneStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedTuffStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DeepslateStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SandstoneStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.RedSandstoneStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BrickBlockStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MudBricksStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.TuffBricksStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.OakPlanksStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BirchPlanksStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.JunglePlanksStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SprucePlanksStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.StoneSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CobblestoneSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.StoneBricksSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SmoothStoneSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AndesiteSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GraniteSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DioriteSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.TuffSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BasaltSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BlackstoneSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedTuffSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DeepslateSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SandstoneSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.RedSandstoneSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BrickBlockSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MudBricksSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.TuffBricksSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.OakPlanksSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BirchPlanksSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.JunglePlanksSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SprucePlanksSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.StoneWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CobblestoneWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.StoneBricksWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.AndesiteWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GraniteWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DioriteWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.TuffWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BasaltWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BlackstoneWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedGraniteWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedDioriteWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedTuffWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedBasaltWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DeepslateWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DeepslateBricksWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.SandstoneWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.RedSandstoneWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.BrickBlockWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MudBricksWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.TuffBricksWall.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.WoodenPick.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CopperPick.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.IronPick.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GoldPick.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DiamondPick.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.NeptuniumPick.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.WoodenAxe.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CopperAxe.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.IronAxe.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GoldAxe.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.DiamondAxe.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.NeptuniumAxe.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.WoodenWhacker.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.CopperWhacker.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.IronWhacker.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.WoodenHoe.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.GoldBar.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.IronBar.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Diamond.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.NeptuniumBar.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Bucket.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.WaterBucket.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.WheatSlop.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.PumpkinSoup.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.MelonSmoothie.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Battery.isSmartEntity(), "!isSmartEntity");
      assertFalse(ObjectTypes.Player.isSmartEntity(), "!isSmartEntity");
    }

    {
      assertTrue(ObjectTypes.Workbench.isStation(), "isStation");
      assertTrue(ObjectTypes.Powerstone.isStation(), "isStation");
      assertTrue(ObjectTypes.Furnace.isStation(), "isStation");
      assertTrue(ObjectTypes.Stonecutter.isStation(), "isStation");
      assertFalse(ObjectTypes.Null.isStation(), "!isStation");
      assertFalse(ObjectTypes.Air.isStation(), "!isStation");
      assertFalse(ObjectTypes.Water.isStation(), "!isStation");
      assertFalse(ObjectTypes.Lava.isStation(), "!isStation");
      assertFalse(ObjectTypes.Stone.isStation(), "!isStation");
      assertFalse(ObjectTypes.Bedrock.isStation(), "!isStation");
      assertFalse(ObjectTypes.Deepslate.isStation(), "!isStation");
      assertFalse(ObjectTypes.Granite.isStation(), "!isStation");
      assertFalse(ObjectTypes.Tuff.isStation(), "!isStation");
      assertFalse(ObjectTypes.Calcite.isStation(), "!isStation");
      assertFalse(ObjectTypes.Basalt.isStation(), "!isStation");
      assertFalse(ObjectTypes.SmoothBasalt.isStation(), "!isStation");
      assertFalse(ObjectTypes.Andesite.isStation(), "!isStation");
      assertFalse(ObjectTypes.Diorite.isStation(), "!isStation");
      assertFalse(ObjectTypes.Cobblestone.isStation(), "!isStation");
      assertFalse(ObjectTypes.MossyCobblestone.isStation(), "!isStation");
      assertFalse(ObjectTypes.Obsidian.isStation(), "!isStation");
      assertFalse(ObjectTypes.Dripstone.isStation(), "!isStation");
      assertFalse(ObjectTypes.Blackstone.isStation(), "!isStation");
      assertFalse(ObjectTypes.CobbledDeepslate.isStation(), "!isStation");
      assertFalse(ObjectTypes.Amethyst.isStation(), "!isStation");
      assertFalse(ObjectTypes.Glowstone.isStation(), "!isStation");
      assertFalse(ObjectTypes.Grass.isStation(), "!isStation");
      assertFalse(ObjectTypes.Dirt.isStation(), "!isStation");
      assertFalse(ObjectTypes.Moss.isStation(), "!isStation");
      assertFalse(ObjectTypes.Podzol.isStation(), "!isStation");
      assertFalse(ObjectTypes.DirtPath.isStation(), "!isStation");
      assertFalse(ObjectTypes.Mud.isStation(), "!isStation");
      assertFalse(ObjectTypes.PackedMud.isStation(), "!isStation");
      assertFalse(ObjectTypes.Farmland.isStation(), "!isStation");
      assertFalse(ObjectTypes.WetFarmland.isStation(), "!isStation");
      assertFalse(ObjectTypes.Snow.isStation(), "!isStation");
      assertFalse(ObjectTypes.Ice.isStation(), "!isStation");
      assertFalse(ObjectTypes.UnrevealedOre.isStation(), "!isStation");
      assertFalse(ObjectTypes.CoalOre.isStation(), "!isStation");
      assertFalse(ObjectTypes.CopperOre.isStation(), "!isStation");
      assertFalse(ObjectTypes.IronOre.isStation(), "!isStation");
      assertFalse(ObjectTypes.GoldOre.isStation(), "!isStation");
      assertFalse(ObjectTypes.DiamondOre.isStation(), "!isStation");
      assertFalse(ObjectTypes.NeptuniumOre.isStation(), "!isStation");
      assertFalse(ObjectTypes.Gravel.isStation(), "!isStation");
      assertFalse(ObjectTypes.Sand.isStation(), "!isStation");
      assertFalse(ObjectTypes.RedSand.isStation(), "!isStation");
      assertFalse(ObjectTypes.Sandstone.isStation(), "!isStation");
      assertFalse(ObjectTypes.RedSandstone.isStation(), "!isStation");
      assertFalse(ObjectTypes.Clay.isStation(), "!isStation");
      assertFalse(ObjectTypes.AnyTerracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.Terracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.BrownTerracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.OrangeTerracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.WhiteTerracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.LightGrayTerracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.YellowTerracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.RedTerracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.LightBlueTerracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.CyanTerracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.BlackTerracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.PurpleTerracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.BlueTerracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.MagentaTerracotta.isStation(), "!isStation");
      assertFalse(ObjectTypes.AnyLog.isStation(), "!isStation");
      assertFalse(ObjectTypes.OakLog.isStation(), "!isStation");
      assertFalse(ObjectTypes.BirchLog.isStation(), "!isStation");
      assertFalse(ObjectTypes.JungleLog.isStation(), "!isStation");
      assertFalse(ObjectTypes.SakuraLog.isStation(), "!isStation");
      assertFalse(ObjectTypes.AcaciaLog.isStation(), "!isStation");
      assertFalse(ObjectTypes.SpruceLog.isStation(), "!isStation");
      assertFalse(ObjectTypes.DarkOakLog.isStation(), "!isStation");
      assertFalse(ObjectTypes.MangroveLog.isStation(), "!isStation");
      assertFalse(ObjectTypes.AnyLeaf.isStation(), "!isStation");
      assertFalse(ObjectTypes.OakLeaf.isStation(), "!isStation");
      assertFalse(ObjectTypes.BirchLeaf.isStation(), "!isStation");
      assertFalse(ObjectTypes.JungleLeaf.isStation(), "!isStation");
      assertFalse(ObjectTypes.SakuraLeaf.isStation(), "!isStation");
      assertFalse(ObjectTypes.SpruceLeaf.isStation(), "!isStation");
      assertFalse(ObjectTypes.AcaciaLeaf.isStation(), "!isStation");
      assertFalse(ObjectTypes.DarkOakLeaf.isStation(), "!isStation");
      assertFalse(ObjectTypes.AzaleaLeaf.isStation(), "!isStation");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isStation(), "!isStation");
      assertFalse(ObjectTypes.MangroveLeaf.isStation(), "!isStation");
      assertFalse(ObjectTypes.MangroveRoots.isStation(), "!isStation");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isStation(), "!isStation");
      assertFalse(ObjectTypes.AzaleaFlower.isStation(), "!isStation");
      assertFalse(ObjectTypes.BellFlower.isStation(), "!isStation");
      assertFalse(ObjectTypes.DandelionFlower.isStation(), "!isStation");
      assertFalse(ObjectTypes.DaylilyFlower.isStation(), "!isStation");
      assertFalse(ObjectTypes.LilacFlower.isStation(), "!isStation");
      assertFalse(ObjectTypes.RoseFlower.isStation(), "!isStation");
      assertFalse(ObjectTypes.FireFlower.isStation(), "!isStation");
      assertFalse(ObjectTypes.MorninggloryFlower.isStation(), "!isStation");
      assertFalse(ObjectTypes.PeonyFlower.isStation(), "!isStation");
      assertFalse(ObjectTypes.Ultraviolet.isStation(), "!isStation");
      assertFalse(ObjectTypes.SunFlower.isStation(), "!isStation");
      assertFalse(ObjectTypes.FlyTrap.isStation(), "!isStation");
      assertFalse(ObjectTypes.FescueGrass.isStation(), "!isStation");
      assertFalse(ObjectTypes.SwitchGrass.isStation(), "!isStation");
      assertFalse(ObjectTypes.VinesBush.isStation(), "!isStation");
      assertFalse(ObjectTypes.IvyVine.isStation(), "!isStation");
      assertFalse(ObjectTypes.HempBush.isStation(), "!isStation");
      assertFalse(ObjectTypes.Coral.isStation(), "!isStation");
      assertFalse(ObjectTypes.SeaAnemone.isStation(), "!isStation");
      assertFalse(ObjectTypes.Algae.isStation(), "!isStation");
      assertFalse(ObjectTypes.HornCoralBlock.isStation(), "!isStation");
      assertFalse(ObjectTypes.FireCoralBlock.isStation(), "!isStation");
      assertFalse(ObjectTypes.TubeCoralBlock.isStation(), "!isStation");
      assertFalse(ObjectTypes.BubbleCoralBlock.isStation(), "!isStation");
      assertFalse(ObjectTypes.BrainCoralBlock.isStation(), "!isStation");
      assertFalse(ObjectTypes.SpiderWeb.isStation(), "!isStation");
      assertFalse(ObjectTypes.Bone.isStation(), "!isStation");
      assertFalse(ObjectTypes.GoldenMushroom.isStation(), "!isStation");
      assertFalse(ObjectTypes.RedMushroom.isStation(), "!isStation");
      assertFalse(ObjectTypes.CoffeeBush.isStation(), "!isStation");
      assertFalse(ObjectTypes.StrawberryBush.isStation(), "!isStation");
      assertFalse(ObjectTypes.RaspberryBush.isStation(), "!isStation");
      assertFalse(ObjectTypes.Wheat.isStation(), "!isStation");
      assertFalse(ObjectTypes.CottonBush.isStation(), "!isStation");
      assertFalse(ObjectTypes.Pumpkin.isStation(), "!isStation");
      assertFalse(ObjectTypes.Melon.isStation(), "!isStation");
      assertFalse(ObjectTypes.RedMushroomBlock.isStation(), "!isStation");
      assertFalse(ObjectTypes.BrownMushroomBlock.isStation(), "!isStation");
      assertFalse(ObjectTypes.MushroomStem.isStation(), "!isStation");
      assertFalse(ObjectTypes.BambooBush.isStation(), "!isStation");
      assertFalse(ObjectTypes.Cactus.isStation(), "!isStation");
      assertFalse(ObjectTypes.AnyPlank.isStation(), "!isStation");
      assertFalse(ObjectTypes.OakPlanks.isStation(), "!isStation");
      assertFalse(ObjectTypes.BirchPlanks.isStation(), "!isStation");
      assertFalse(ObjectTypes.JunglePlanks.isStation(), "!isStation");
      assertFalse(ObjectTypes.SakuraPlanks.isStation(), "!isStation");
      assertFalse(ObjectTypes.SprucePlanks.isStation(), "!isStation");
      assertFalse(ObjectTypes.AcaciaPlanks.isStation(), "!isStation");
      assertFalse(ObjectTypes.DarkOakPlanks.isStation(), "!isStation");
      assertFalse(ObjectTypes.MangrovePlanks.isStation(), "!isStation");
      assertFalse(ObjectTypes.CopperBlock.isStation(), "!isStation");
      assertFalse(ObjectTypes.IronBlock.isStation(), "!isStation");
      assertFalse(ObjectTypes.GoldBlock.isStation(), "!isStation");
      assertFalse(ObjectTypes.DiamondBlock.isStation(), "!isStation");
      assertFalse(ObjectTypes.NeptuniumBlock.isStation(), "!isStation");
      assertFalse(ObjectTypes.WheatSeed.isStation(), "!isStation");
      assertFalse(ObjectTypes.PumpkinSeed.isStation(), "!isStation");
      assertFalse(ObjectTypes.MelonSeed.isStation(), "!isStation");
      assertFalse(ObjectTypes.OakSapling.isStation(), "!isStation");
      assertFalse(ObjectTypes.BirchSapling.isStation(), "!isStation");
      assertFalse(ObjectTypes.JungleSapling.isStation(), "!isStation");
      assertFalse(ObjectTypes.SakuraSapling.isStation(), "!isStation");
      assertFalse(ObjectTypes.AcaciaSapling.isStation(), "!isStation");
      assertFalse(ObjectTypes.SpruceSapling.isStation(), "!isStation");
      assertFalse(ObjectTypes.DarkOakSapling.isStation(), "!isStation");
      assertFalse(ObjectTypes.MangroveSapling.isStation(), "!isStation");
      assertFalse(ObjectTypes.ForceField.isStation(), "!isStation");
      assertFalse(ObjectTypes.Chest.isStation(), "!isStation");
      assertFalse(ObjectTypes.SpawnTile.isStation(), "!isStation");
      assertFalse(ObjectTypes.Bed.isStation(), "!isStation");
      assertFalse(ObjectTypes.TextSign.isStation(), "!isStation");
      assertFalse(ObjectTypes.Torch.isStation(), "!isStation");
      assertFalse(ObjectTypes.StoneBricks.isStation(), "!isStation");
      assertFalse(ObjectTypes.TuffBricks.isStation(), "!isStation");
      assertFalse(ObjectTypes.DeepslateBricks.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedAndesite.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedGranite.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedDiorite.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedTuff.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedBasalt.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedBlackstone.isStation(), "!isStation");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isStation(), "!isStation");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isStation(), "!isStation");
      assertFalse(ObjectTypes.ChiseledDeepslate.isStation(), "!isStation");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isStation(), "!isStation");
      assertFalse(ObjectTypes.ChiseledSandstone.isStation(), "!isStation");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isStation(), "!isStation");
      assertFalse(ObjectTypes.CrackedStoneBricks.isStation(), "!isStation");
      assertFalse(ObjectTypes.CrackedTuffBricks.isStation(), "!isStation");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isStation(), "!isStation");
      assertFalse(ObjectTypes.SmoothSandstone.isStation(), "!isStation");
      assertFalse(ObjectTypes.SmoothRedSandstone.isStation(), "!isStation");
      assertFalse(ObjectTypes.SmoothStone.isStation(), "!isStation");
      assertFalse(ObjectTypes.Cotton.isStation(), "!isStation");
      assertFalse(ObjectTypes.CottonSeed.isStation(), "!isStation");
      assertFalse(ObjectTypes.Glass.isStation(), "!isStation");
      assertFalse(ObjectTypes.Brick.isStation(), "!isStation");
      assertFalse(ObjectTypes.BrickBlock.isStation(), "!isStation");
      assertFalse(ObjectTypes.MudBricks.isStation(), "!isStation");
      assertFalse(ObjectTypes.Paper.isStation(), "!isStation");
      assertFalse(ObjectTypes.Book.isStation(), "!isStation");
      assertFalse(ObjectTypes.Stick.isStation(), "!isStation");
      assertFalse(ObjectTypes.RedDye.isStation(), "!isStation");
      assertFalse(ObjectTypes.YellowDye.isStation(), "!isStation");
      assertFalse(ObjectTypes.BlueDye.isStation(), "!isStation");
      assertFalse(ObjectTypes.GreenDye.isStation(), "!isStation");
      assertFalse(ObjectTypes.WhiteDye.isStation(), "!isStation");
      assertFalse(ObjectTypes.BlackDye.isStation(), "!isStation");
      assertFalse(ObjectTypes.BrownDye.isStation(), "!isStation");
      assertFalse(ObjectTypes.OrangeDye.isStation(), "!isStation");
      assertFalse(ObjectTypes.PinkDye.isStation(), "!isStation");
      assertFalse(ObjectTypes.LimeDye.isStation(), "!isStation");
      assertFalse(ObjectTypes.CyanDye.isStation(), "!isStation");
      assertFalse(ObjectTypes.GrayDye.isStation(), "!isStation");
      assertFalse(ObjectTypes.PurpleDye.isStation(), "!isStation");
      assertFalse(ObjectTypes.WhiteConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.OrangeConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.MagentaConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.YellowConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.LimeConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.PinkConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.GrayConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.CyanConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.PurpleConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.BlueConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.BrownConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.GreenConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.RedConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.BlackConcretePowder.isStation(), "!isStation");
      assertFalse(ObjectTypes.WhiteConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.OrangeConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.MagentaConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.LightBlueConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.YellowConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.LimeConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.PinkConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.GrayConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.LightGrayConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.CyanConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.PurpleConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.BlueConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.BrownConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.GreenConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.RedConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.BlackConcrete.isStation(), "!isStation");
      assertFalse(ObjectTypes.GlassPane.isStation(), "!isStation");
      assertFalse(ObjectTypes.OakDoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.BirchDoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.JungleDoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.SakuraDoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.AcaciaDoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.SpruceDoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.DarkOakDoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.MangroveDoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.IronDoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.OakTrapdoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.BirchTrapdoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.JungleTrapdoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.SakuraTrapdoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.SpruceTrapdoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.MangroveTrapdoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.IronTrapdoor.isStation(), "!isStation");
      assertFalse(ObjectTypes.OakFence.isStation(), "!isStation");
      assertFalse(ObjectTypes.BirchFence.isStation(), "!isStation");
      assertFalse(ObjectTypes.JungleFence.isStation(), "!isStation");
      assertFalse(ObjectTypes.SakuraFence.isStation(), "!isStation");
      assertFalse(ObjectTypes.AcaciaFence.isStation(), "!isStation");
      assertFalse(ObjectTypes.SpruceFence.isStation(), "!isStation");
      assertFalse(ObjectTypes.DarkOakFence.isStation(), "!isStation");
      assertFalse(ObjectTypes.MangroveFence.isStation(), "!isStation");
      assertFalse(ObjectTypes.OakFenceGate.isStation(), "!isStation");
      assertFalse(ObjectTypes.BirchFenceGate.isStation(), "!isStation");
      assertFalse(ObjectTypes.JungleFenceGate.isStation(), "!isStation");
      assertFalse(ObjectTypes.SakuraFenceGate.isStation(), "!isStation");
      assertFalse(ObjectTypes.AcaciaFenceGate.isStation(), "!isStation");
      assertFalse(ObjectTypes.SpruceFenceGate.isStation(), "!isStation");
      assertFalse(ObjectTypes.DarkOakFenceGate.isStation(), "!isStation");
      assertFalse(ObjectTypes.MangroveFenceGate.isStation(), "!isStation");
      assertFalse(ObjectTypes.IronBars.isStation(), "!isStation");
      assertFalse(ObjectTypes.Lantern.isStation(), "!isStation");
      assertFalse(ObjectTypes.Ladder.isStation(), "!isStation");
      assertFalse(ObjectTypes.Barrel.isStation(), "!isStation");
      assertFalse(ObjectTypes.Bookshelf.isStation(), "!isStation");
      assertFalse(ObjectTypes.Carpet.isStation(), "!isStation");
      assertFalse(ObjectTypes.FlowerPot.isStation(), "!isStation");
      assertFalse(ObjectTypes.Lodestone.isStation(), "!isStation");
      assertFalse(ObjectTypes.StoneStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.CobblestoneStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.StoneBricksStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.SmoothStoneStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.AndesiteStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.GraniteStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.DioriteStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.TuffStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.BasaltStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.BlackstoneStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedTuffStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.DeepslateStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.SandstoneStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.RedSandstoneStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.BrickBlockStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.MudBricksStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.TuffBricksStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.OakPlanksStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.BirchPlanksStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.JunglePlanksStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.SprucePlanksStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isStation(), "!isStation");
      assertFalse(ObjectTypes.StoneSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.CobblestoneSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.StoneBricksSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.SmoothStoneSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.AndesiteSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.GraniteSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.DioriteSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.TuffSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.BasaltSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.BlackstoneSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedTuffSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.DeepslateSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.SandstoneSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.RedSandstoneSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.BrickBlockSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.MudBricksSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.TuffBricksSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.OakPlanksSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.BirchPlanksSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.JunglePlanksSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.SprucePlanksSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isStation(), "!isStation");
      assertFalse(ObjectTypes.StoneWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.CobblestoneWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.StoneBricksWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.AndesiteWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.GraniteWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.DioriteWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.TuffWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.BasaltWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.BlackstoneWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedGraniteWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedDioriteWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedTuffWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedBasaltWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.DeepslateWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.DeepslateBricksWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.SandstoneWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.RedSandstoneWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.BrickBlockWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.MudBricksWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.TuffBricksWall.isStation(), "!isStation");
      assertFalse(ObjectTypes.WoodenPick.isStation(), "!isStation");
      assertFalse(ObjectTypes.CopperPick.isStation(), "!isStation");
      assertFalse(ObjectTypes.IronPick.isStation(), "!isStation");
      assertFalse(ObjectTypes.GoldPick.isStation(), "!isStation");
      assertFalse(ObjectTypes.DiamondPick.isStation(), "!isStation");
      assertFalse(ObjectTypes.NeptuniumPick.isStation(), "!isStation");
      assertFalse(ObjectTypes.WoodenAxe.isStation(), "!isStation");
      assertFalse(ObjectTypes.CopperAxe.isStation(), "!isStation");
      assertFalse(ObjectTypes.IronAxe.isStation(), "!isStation");
      assertFalse(ObjectTypes.GoldAxe.isStation(), "!isStation");
      assertFalse(ObjectTypes.DiamondAxe.isStation(), "!isStation");
      assertFalse(ObjectTypes.NeptuniumAxe.isStation(), "!isStation");
      assertFalse(ObjectTypes.WoodenWhacker.isStation(), "!isStation");
      assertFalse(ObjectTypes.CopperWhacker.isStation(), "!isStation");
      assertFalse(ObjectTypes.IronWhacker.isStation(), "!isStation");
      assertFalse(ObjectTypes.WoodenHoe.isStation(), "!isStation");
      assertFalse(ObjectTypes.GoldBar.isStation(), "!isStation");
      assertFalse(ObjectTypes.IronBar.isStation(), "!isStation");
      assertFalse(ObjectTypes.Diamond.isStation(), "!isStation");
      assertFalse(ObjectTypes.NeptuniumBar.isStation(), "!isStation");
      assertFalse(ObjectTypes.Bucket.isStation(), "!isStation");
      assertFalse(ObjectTypes.WaterBucket.isStation(), "!isStation");
      assertFalse(ObjectTypes.WheatSlop.isStation(), "!isStation");
      assertFalse(ObjectTypes.PumpkinSoup.isStation(), "!isStation");
      assertFalse(ObjectTypes.MelonSmoothie.isStation(), "!isStation");
      assertFalse(ObjectTypes.Battery.isStation(), "!isStation");
      assertFalse(ObjectTypes.Player.isStation(), "!isStation");
      assertFalse(ObjectTypes.Fragment.isStation(), "!isStation");
    }

    {
      assertTrue(ObjectTypes.WoodenPick.isPick(), "isPick");
      assertTrue(ObjectTypes.CopperPick.isPick(), "isPick");
      assertTrue(ObjectTypes.IronPick.isPick(), "isPick");
      assertTrue(ObjectTypes.GoldPick.isPick(), "isPick");
      assertTrue(ObjectTypes.DiamondPick.isPick(), "isPick");
      assertTrue(ObjectTypes.NeptuniumPick.isPick(), "isPick");
      assertFalse(ObjectTypes.Null.isPick(), "!isPick");
      assertFalse(ObjectTypes.Air.isPick(), "!isPick");
      assertFalse(ObjectTypes.Water.isPick(), "!isPick");
      assertFalse(ObjectTypes.Lava.isPick(), "!isPick");
      assertFalse(ObjectTypes.Stone.isPick(), "!isPick");
      assertFalse(ObjectTypes.Bedrock.isPick(), "!isPick");
      assertFalse(ObjectTypes.Deepslate.isPick(), "!isPick");
      assertFalse(ObjectTypes.Granite.isPick(), "!isPick");
      assertFalse(ObjectTypes.Tuff.isPick(), "!isPick");
      assertFalse(ObjectTypes.Calcite.isPick(), "!isPick");
      assertFalse(ObjectTypes.Basalt.isPick(), "!isPick");
      assertFalse(ObjectTypes.SmoothBasalt.isPick(), "!isPick");
      assertFalse(ObjectTypes.Andesite.isPick(), "!isPick");
      assertFalse(ObjectTypes.Diorite.isPick(), "!isPick");
      assertFalse(ObjectTypes.Cobblestone.isPick(), "!isPick");
      assertFalse(ObjectTypes.MossyCobblestone.isPick(), "!isPick");
      assertFalse(ObjectTypes.Obsidian.isPick(), "!isPick");
      assertFalse(ObjectTypes.Dripstone.isPick(), "!isPick");
      assertFalse(ObjectTypes.Blackstone.isPick(), "!isPick");
      assertFalse(ObjectTypes.CobbledDeepslate.isPick(), "!isPick");
      assertFalse(ObjectTypes.Amethyst.isPick(), "!isPick");
      assertFalse(ObjectTypes.Glowstone.isPick(), "!isPick");
      assertFalse(ObjectTypes.Grass.isPick(), "!isPick");
      assertFalse(ObjectTypes.Dirt.isPick(), "!isPick");
      assertFalse(ObjectTypes.Moss.isPick(), "!isPick");
      assertFalse(ObjectTypes.Podzol.isPick(), "!isPick");
      assertFalse(ObjectTypes.DirtPath.isPick(), "!isPick");
      assertFalse(ObjectTypes.Mud.isPick(), "!isPick");
      assertFalse(ObjectTypes.PackedMud.isPick(), "!isPick");
      assertFalse(ObjectTypes.Farmland.isPick(), "!isPick");
      assertFalse(ObjectTypes.WetFarmland.isPick(), "!isPick");
      assertFalse(ObjectTypes.Snow.isPick(), "!isPick");
      assertFalse(ObjectTypes.Ice.isPick(), "!isPick");
      assertFalse(ObjectTypes.UnrevealedOre.isPick(), "!isPick");
      assertFalse(ObjectTypes.CoalOre.isPick(), "!isPick");
      assertFalse(ObjectTypes.CopperOre.isPick(), "!isPick");
      assertFalse(ObjectTypes.IronOre.isPick(), "!isPick");
      assertFalse(ObjectTypes.GoldOre.isPick(), "!isPick");
      assertFalse(ObjectTypes.DiamondOre.isPick(), "!isPick");
      assertFalse(ObjectTypes.NeptuniumOre.isPick(), "!isPick");
      assertFalse(ObjectTypes.Gravel.isPick(), "!isPick");
      assertFalse(ObjectTypes.Sand.isPick(), "!isPick");
      assertFalse(ObjectTypes.RedSand.isPick(), "!isPick");
      assertFalse(ObjectTypes.Sandstone.isPick(), "!isPick");
      assertFalse(ObjectTypes.RedSandstone.isPick(), "!isPick");
      assertFalse(ObjectTypes.Clay.isPick(), "!isPick");
      assertFalse(ObjectTypes.AnyTerracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.Terracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.BrownTerracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.OrangeTerracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.WhiteTerracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.LightGrayTerracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.YellowTerracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.RedTerracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.LightBlueTerracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.CyanTerracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.BlackTerracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.PurpleTerracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.BlueTerracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.MagentaTerracotta.isPick(), "!isPick");
      assertFalse(ObjectTypes.AnyLog.isPick(), "!isPick");
      assertFalse(ObjectTypes.OakLog.isPick(), "!isPick");
      assertFalse(ObjectTypes.BirchLog.isPick(), "!isPick");
      assertFalse(ObjectTypes.JungleLog.isPick(), "!isPick");
      assertFalse(ObjectTypes.SakuraLog.isPick(), "!isPick");
      assertFalse(ObjectTypes.AcaciaLog.isPick(), "!isPick");
      assertFalse(ObjectTypes.SpruceLog.isPick(), "!isPick");
      assertFalse(ObjectTypes.DarkOakLog.isPick(), "!isPick");
      assertFalse(ObjectTypes.MangroveLog.isPick(), "!isPick");
      assertFalse(ObjectTypes.AnyLeaf.isPick(), "!isPick");
      assertFalse(ObjectTypes.OakLeaf.isPick(), "!isPick");
      assertFalse(ObjectTypes.BirchLeaf.isPick(), "!isPick");
      assertFalse(ObjectTypes.JungleLeaf.isPick(), "!isPick");
      assertFalse(ObjectTypes.SakuraLeaf.isPick(), "!isPick");
      assertFalse(ObjectTypes.SpruceLeaf.isPick(), "!isPick");
      assertFalse(ObjectTypes.AcaciaLeaf.isPick(), "!isPick");
      assertFalse(ObjectTypes.DarkOakLeaf.isPick(), "!isPick");
      assertFalse(ObjectTypes.AzaleaLeaf.isPick(), "!isPick");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isPick(), "!isPick");
      assertFalse(ObjectTypes.MangroveLeaf.isPick(), "!isPick");
      assertFalse(ObjectTypes.MangroveRoots.isPick(), "!isPick");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isPick(), "!isPick");
      assertFalse(ObjectTypes.AzaleaFlower.isPick(), "!isPick");
      assertFalse(ObjectTypes.BellFlower.isPick(), "!isPick");
      assertFalse(ObjectTypes.DandelionFlower.isPick(), "!isPick");
      assertFalse(ObjectTypes.DaylilyFlower.isPick(), "!isPick");
      assertFalse(ObjectTypes.LilacFlower.isPick(), "!isPick");
      assertFalse(ObjectTypes.RoseFlower.isPick(), "!isPick");
      assertFalse(ObjectTypes.FireFlower.isPick(), "!isPick");
      assertFalse(ObjectTypes.MorninggloryFlower.isPick(), "!isPick");
      assertFalse(ObjectTypes.PeonyFlower.isPick(), "!isPick");
      assertFalse(ObjectTypes.Ultraviolet.isPick(), "!isPick");
      assertFalse(ObjectTypes.SunFlower.isPick(), "!isPick");
      assertFalse(ObjectTypes.FlyTrap.isPick(), "!isPick");
      assertFalse(ObjectTypes.FescueGrass.isPick(), "!isPick");
      assertFalse(ObjectTypes.SwitchGrass.isPick(), "!isPick");
      assertFalse(ObjectTypes.VinesBush.isPick(), "!isPick");
      assertFalse(ObjectTypes.IvyVine.isPick(), "!isPick");
      assertFalse(ObjectTypes.HempBush.isPick(), "!isPick");
      assertFalse(ObjectTypes.Coral.isPick(), "!isPick");
      assertFalse(ObjectTypes.SeaAnemone.isPick(), "!isPick");
      assertFalse(ObjectTypes.Algae.isPick(), "!isPick");
      assertFalse(ObjectTypes.HornCoralBlock.isPick(), "!isPick");
      assertFalse(ObjectTypes.FireCoralBlock.isPick(), "!isPick");
      assertFalse(ObjectTypes.TubeCoralBlock.isPick(), "!isPick");
      assertFalse(ObjectTypes.BubbleCoralBlock.isPick(), "!isPick");
      assertFalse(ObjectTypes.BrainCoralBlock.isPick(), "!isPick");
      assertFalse(ObjectTypes.SpiderWeb.isPick(), "!isPick");
      assertFalse(ObjectTypes.Bone.isPick(), "!isPick");
      assertFalse(ObjectTypes.GoldenMushroom.isPick(), "!isPick");
      assertFalse(ObjectTypes.RedMushroom.isPick(), "!isPick");
      assertFalse(ObjectTypes.CoffeeBush.isPick(), "!isPick");
      assertFalse(ObjectTypes.StrawberryBush.isPick(), "!isPick");
      assertFalse(ObjectTypes.RaspberryBush.isPick(), "!isPick");
      assertFalse(ObjectTypes.Wheat.isPick(), "!isPick");
      assertFalse(ObjectTypes.CottonBush.isPick(), "!isPick");
      assertFalse(ObjectTypes.Pumpkin.isPick(), "!isPick");
      assertFalse(ObjectTypes.Melon.isPick(), "!isPick");
      assertFalse(ObjectTypes.RedMushroomBlock.isPick(), "!isPick");
      assertFalse(ObjectTypes.BrownMushroomBlock.isPick(), "!isPick");
      assertFalse(ObjectTypes.MushroomStem.isPick(), "!isPick");
      assertFalse(ObjectTypes.BambooBush.isPick(), "!isPick");
      assertFalse(ObjectTypes.Cactus.isPick(), "!isPick");
      assertFalse(ObjectTypes.AnyPlank.isPick(), "!isPick");
      assertFalse(ObjectTypes.OakPlanks.isPick(), "!isPick");
      assertFalse(ObjectTypes.BirchPlanks.isPick(), "!isPick");
      assertFalse(ObjectTypes.JunglePlanks.isPick(), "!isPick");
      assertFalse(ObjectTypes.SakuraPlanks.isPick(), "!isPick");
      assertFalse(ObjectTypes.SprucePlanks.isPick(), "!isPick");
      assertFalse(ObjectTypes.AcaciaPlanks.isPick(), "!isPick");
      assertFalse(ObjectTypes.DarkOakPlanks.isPick(), "!isPick");
      assertFalse(ObjectTypes.MangrovePlanks.isPick(), "!isPick");
      assertFalse(ObjectTypes.CopperBlock.isPick(), "!isPick");
      assertFalse(ObjectTypes.IronBlock.isPick(), "!isPick");
      assertFalse(ObjectTypes.GoldBlock.isPick(), "!isPick");
      assertFalse(ObjectTypes.DiamondBlock.isPick(), "!isPick");
      assertFalse(ObjectTypes.NeptuniumBlock.isPick(), "!isPick");
      assertFalse(ObjectTypes.WheatSeed.isPick(), "!isPick");
      assertFalse(ObjectTypes.PumpkinSeed.isPick(), "!isPick");
      assertFalse(ObjectTypes.MelonSeed.isPick(), "!isPick");
      assertFalse(ObjectTypes.OakSapling.isPick(), "!isPick");
      assertFalse(ObjectTypes.BirchSapling.isPick(), "!isPick");
      assertFalse(ObjectTypes.JungleSapling.isPick(), "!isPick");
      assertFalse(ObjectTypes.SakuraSapling.isPick(), "!isPick");
      assertFalse(ObjectTypes.AcaciaSapling.isPick(), "!isPick");
      assertFalse(ObjectTypes.SpruceSapling.isPick(), "!isPick");
      assertFalse(ObjectTypes.DarkOakSapling.isPick(), "!isPick");
      assertFalse(ObjectTypes.MangroveSapling.isPick(), "!isPick");
      assertFalse(ObjectTypes.Furnace.isPick(), "!isPick");
      assertFalse(ObjectTypes.Workbench.isPick(), "!isPick");
      assertFalse(ObjectTypes.Powerstone.isPick(), "!isPick");
      assertFalse(ObjectTypes.ForceField.isPick(), "!isPick");
      assertFalse(ObjectTypes.Chest.isPick(), "!isPick");
      assertFalse(ObjectTypes.SpawnTile.isPick(), "!isPick");
      assertFalse(ObjectTypes.Bed.isPick(), "!isPick");
      assertFalse(ObjectTypes.TextSign.isPick(), "!isPick");
      assertFalse(ObjectTypes.Torch.isPick(), "!isPick");
      assertFalse(ObjectTypes.Stonecutter.isPick(), "!isPick");
      assertFalse(ObjectTypes.StoneBricks.isPick(), "!isPick");
      assertFalse(ObjectTypes.TuffBricks.isPick(), "!isPick");
      assertFalse(ObjectTypes.DeepslateBricks.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedAndesite.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedGranite.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedDiorite.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedTuff.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedBasalt.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedBlackstone.isPick(), "!isPick");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isPick(), "!isPick");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isPick(), "!isPick");
      assertFalse(ObjectTypes.ChiseledDeepslate.isPick(), "!isPick");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isPick(), "!isPick");
      assertFalse(ObjectTypes.ChiseledSandstone.isPick(), "!isPick");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isPick(), "!isPick");
      assertFalse(ObjectTypes.CrackedStoneBricks.isPick(), "!isPick");
      assertFalse(ObjectTypes.CrackedTuffBricks.isPick(), "!isPick");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isPick(), "!isPick");
      assertFalse(ObjectTypes.SmoothSandstone.isPick(), "!isPick");
      assertFalse(ObjectTypes.SmoothRedSandstone.isPick(), "!isPick");
      assertFalse(ObjectTypes.SmoothStone.isPick(), "!isPick");
      assertFalse(ObjectTypes.Cotton.isPick(), "!isPick");
      assertFalse(ObjectTypes.CottonSeed.isPick(), "!isPick");
      assertFalse(ObjectTypes.Glass.isPick(), "!isPick");
      assertFalse(ObjectTypes.Brick.isPick(), "!isPick");
      assertFalse(ObjectTypes.BrickBlock.isPick(), "!isPick");
      assertFalse(ObjectTypes.MudBricks.isPick(), "!isPick");
      assertFalse(ObjectTypes.Paper.isPick(), "!isPick");
      assertFalse(ObjectTypes.Book.isPick(), "!isPick");
      assertFalse(ObjectTypes.Stick.isPick(), "!isPick");
      assertFalse(ObjectTypes.RedDye.isPick(), "!isPick");
      assertFalse(ObjectTypes.YellowDye.isPick(), "!isPick");
      assertFalse(ObjectTypes.BlueDye.isPick(), "!isPick");
      assertFalse(ObjectTypes.GreenDye.isPick(), "!isPick");
      assertFalse(ObjectTypes.WhiteDye.isPick(), "!isPick");
      assertFalse(ObjectTypes.BlackDye.isPick(), "!isPick");
      assertFalse(ObjectTypes.BrownDye.isPick(), "!isPick");
      assertFalse(ObjectTypes.OrangeDye.isPick(), "!isPick");
      assertFalse(ObjectTypes.PinkDye.isPick(), "!isPick");
      assertFalse(ObjectTypes.LimeDye.isPick(), "!isPick");
      assertFalse(ObjectTypes.CyanDye.isPick(), "!isPick");
      assertFalse(ObjectTypes.GrayDye.isPick(), "!isPick");
      assertFalse(ObjectTypes.PurpleDye.isPick(), "!isPick");
      assertFalse(ObjectTypes.WhiteConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.OrangeConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.MagentaConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.YellowConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.LimeConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.PinkConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.GrayConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.CyanConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.PurpleConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.BlueConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.BrownConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.GreenConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.RedConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.BlackConcretePowder.isPick(), "!isPick");
      assertFalse(ObjectTypes.WhiteConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.OrangeConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.MagentaConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.LightBlueConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.YellowConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.LimeConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.PinkConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.GrayConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.LightGrayConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.CyanConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.PurpleConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.BlueConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.BrownConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.GreenConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.RedConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.BlackConcrete.isPick(), "!isPick");
      assertFalse(ObjectTypes.GlassPane.isPick(), "!isPick");
      assertFalse(ObjectTypes.OakDoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.BirchDoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.JungleDoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.SakuraDoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.AcaciaDoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.SpruceDoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.DarkOakDoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.MangroveDoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.IronDoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.OakTrapdoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.BirchTrapdoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.JungleTrapdoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.SakuraTrapdoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.SpruceTrapdoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.MangroveTrapdoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.IronTrapdoor.isPick(), "!isPick");
      assertFalse(ObjectTypes.OakFence.isPick(), "!isPick");
      assertFalse(ObjectTypes.BirchFence.isPick(), "!isPick");
      assertFalse(ObjectTypes.JungleFence.isPick(), "!isPick");
      assertFalse(ObjectTypes.SakuraFence.isPick(), "!isPick");
      assertFalse(ObjectTypes.AcaciaFence.isPick(), "!isPick");
      assertFalse(ObjectTypes.SpruceFence.isPick(), "!isPick");
      assertFalse(ObjectTypes.DarkOakFence.isPick(), "!isPick");
      assertFalse(ObjectTypes.MangroveFence.isPick(), "!isPick");
      assertFalse(ObjectTypes.OakFenceGate.isPick(), "!isPick");
      assertFalse(ObjectTypes.BirchFenceGate.isPick(), "!isPick");
      assertFalse(ObjectTypes.JungleFenceGate.isPick(), "!isPick");
      assertFalse(ObjectTypes.SakuraFenceGate.isPick(), "!isPick");
      assertFalse(ObjectTypes.AcaciaFenceGate.isPick(), "!isPick");
      assertFalse(ObjectTypes.SpruceFenceGate.isPick(), "!isPick");
      assertFalse(ObjectTypes.DarkOakFenceGate.isPick(), "!isPick");
      assertFalse(ObjectTypes.MangroveFenceGate.isPick(), "!isPick");
      assertFalse(ObjectTypes.IronBars.isPick(), "!isPick");
      assertFalse(ObjectTypes.Lantern.isPick(), "!isPick");
      assertFalse(ObjectTypes.Ladder.isPick(), "!isPick");
      assertFalse(ObjectTypes.Barrel.isPick(), "!isPick");
      assertFalse(ObjectTypes.Bookshelf.isPick(), "!isPick");
      assertFalse(ObjectTypes.Carpet.isPick(), "!isPick");
      assertFalse(ObjectTypes.FlowerPot.isPick(), "!isPick");
      assertFalse(ObjectTypes.Lodestone.isPick(), "!isPick");
      assertFalse(ObjectTypes.StoneStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.CobblestoneStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.StoneBricksStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.SmoothStoneStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.AndesiteStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.GraniteStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.DioriteStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.TuffStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.BasaltStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.BlackstoneStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedTuffStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.DeepslateStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.SandstoneStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.RedSandstoneStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.BrickBlockStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.MudBricksStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.TuffBricksStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.OakPlanksStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.BirchPlanksStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.JunglePlanksStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.SprucePlanksStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isPick(), "!isPick");
      assertFalse(ObjectTypes.StoneSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.CobblestoneSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.StoneBricksSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.SmoothStoneSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.AndesiteSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.GraniteSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.DioriteSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.TuffSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.BasaltSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.BlackstoneSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedTuffSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.DeepslateSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.SandstoneSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.RedSandstoneSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.BrickBlockSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.MudBricksSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.TuffBricksSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.OakPlanksSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.BirchPlanksSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.JunglePlanksSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.SprucePlanksSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isPick(), "!isPick");
      assertFalse(ObjectTypes.StoneWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.CobblestoneWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.StoneBricksWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.AndesiteWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.GraniteWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.DioriteWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.TuffWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.BasaltWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.BlackstoneWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedGraniteWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedDioriteWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedTuffWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedBasaltWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.DeepslateWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.DeepslateBricksWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.SandstoneWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.RedSandstoneWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.BrickBlockWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.MudBricksWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.TuffBricksWall.isPick(), "!isPick");
      assertFalse(ObjectTypes.WoodenAxe.isPick(), "!isPick");
      assertFalse(ObjectTypes.CopperAxe.isPick(), "!isPick");
      assertFalse(ObjectTypes.IronAxe.isPick(), "!isPick");
      assertFalse(ObjectTypes.GoldAxe.isPick(), "!isPick");
      assertFalse(ObjectTypes.DiamondAxe.isPick(), "!isPick");
      assertFalse(ObjectTypes.NeptuniumAxe.isPick(), "!isPick");
      assertFalse(ObjectTypes.WoodenWhacker.isPick(), "!isPick");
      assertFalse(ObjectTypes.CopperWhacker.isPick(), "!isPick");
      assertFalse(ObjectTypes.IronWhacker.isPick(), "!isPick");
      assertFalse(ObjectTypes.WoodenHoe.isPick(), "!isPick");
      assertFalse(ObjectTypes.GoldBar.isPick(), "!isPick");
      assertFalse(ObjectTypes.IronBar.isPick(), "!isPick");
      assertFalse(ObjectTypes.Diamond.isPick(), "!isPick");
      assertFalse(ObjectTypes.NeptuniumBar.isPick(), "!isPick");
      assertFalse(ObjectTypes.Bucket.isPick(), "!isPick");
      assertFalse(ObjectTypes.WaterBucket.isPick(), "!isPick");
      assertFalse(ObjectTypes.WheatSlop.isPick(), "!isPick");
      assertFalse(ObjectTypes.PumpkinSoup.isPick(), "!isPick");
      assertFalse(ObjectTypes.MelonSmoothie.isPick(), "!isPick");
      assertFalse(ObjectTypes.Battery.isPick(), "!isPick");
      assertFalse(ObjectTypes.Player.isPick(), "!isPick");
      assertFalse(ObjectTypes.Fragment.isPick(), "!isPick");
    }

    {
      assertTrue(ObjectTypes.WoodenAxe.isAxe(), "isAxe");
      assertTrue(ObjectTypes.CopperAxe.isAxe(), "isAxe");
      assertTrue(ObjectTypes.IronAxe.isAxe(), "isAxe");
      assertTrue(ObjectTypes.GoldAxe.isAxe(), "isAxe");
      assertTrue(ObjectTypes.DiamondAxe.isAxe(), "isAxe");
      assertTrue(ObjectTypes.NeptuniumAxe.isAxe(), "isAxe");
      assertFalse(ObjectTypes.Null.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Air.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Water.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Lava.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Stone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Bedrock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Deepslate.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Granite.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Tuff.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Calcite.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Basalt.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SmoothBasalt.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Andesite.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Diorite.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Cobblestone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MossyCobblestone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Obsidian.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Dripstone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Blackstone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CobbledDeepslate.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Amethyst.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Glowstone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Grass.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Dirt.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Moss.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Podzol.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DirtPath.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Mud.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PackedMud.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Farmland.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.WetFarmland.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Snow.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Ice.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.UnrevealedOre.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CoalOre.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CopperOre.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.IronOre.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GoldOre.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DiamondOre.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.NeptuniumOre.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Gravel.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Sand.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.RedSand.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Sandstone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.RedSandstone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Clay.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AnyTerracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Terracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BrownTerracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OrangeTerracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.WhiteTerracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.LightGrayTerracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.YellowTerracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.RedTerracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.LightBlueTerracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CyanTerracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BlackTerracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PurpleTerracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BlueTerracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MagentaTerracotta.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AnyLog.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OakLog.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BirchLog.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.JungleLog.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SakuraLog.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AcaciaLog.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SpruceLog.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DarkOakLog.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MangroveLog.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AnyLeaf.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OakLeaf.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BirchLeaf.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.JungleLeaf.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SakuraLeaf.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SpruceLeaf.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AcaciaLeaf.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DarkOakLeaf.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AzaleaLeaf.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MangroveLeaf.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MangroveRoots.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AzaleaFlower.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BellFlower.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DandelionFlower.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DaylilyFlower.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.LilacFlower.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.RoseFlower.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.FireFlower.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MorninggloryFlower.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PeonyFlower.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Ultraviolet.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SunFlower.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.FlyTrap.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.FescueGrass.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SwitchGrass.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.VinesBush.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.IvyVine.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.HempBush.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Coral.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SeaAnemone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Algae.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.HornCoralBlock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.FireCoralBlock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.TubeCoralBlock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BubbleCoralBlock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BrainCoralBlock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SpiderWeb.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Bone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GoldenMushroom.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.RedMushroom.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CoffeeBush.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.StrawberryBush.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.RaspberryBush.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Wheat.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CottonBush.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Pumpkin.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Melon.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.RedMushroomBlock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BrownMushroomBlock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MushroomStem.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BambooBush.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Cactus.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AnyPlank.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OakPlanks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BirchPlanks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.JunglePlanks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SakuraPlanks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SprucePlanks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AcaciaPlanks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DarkOakPlanks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MangrovePlanks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CopperBlock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.IronBlock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GoldBlock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DiamondBlock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.NeptuniumBlock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.WheatSeed.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PumpkinSeed.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MelonSeed.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OakSapling.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BirchSapling.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.JungleSapling.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SakuraSapling.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AcaciaSapling.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SpruceSapling.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DarkOakSapling.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MangroveSapling.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Furnace.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Workbench.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Powerstone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.ForceField.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Chest.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SpawnTile.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Bed.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.TextSign.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Torch.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Stonecutter.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.StoneBricks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.TuffBricks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DeepslateBricks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedAndesite.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedGranite.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedDiorite.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedTuff.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedBasalt.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedBlackstone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.ChiseledDeepslate.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.ChiseledSandstone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CrackedStoneBricks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CrackedTuffBricks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SmoothSandstone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SmoothRedSandstone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SmoothStone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Cotton.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CottonSeed.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Glass.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Brick.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BrickBlock.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MudBricks.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Paper.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Book.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Stick.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.RedDye.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.YellowDye.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BlueDye.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GreenDye.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.WhiteDye.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BlackDye.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BrownDye.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OrangeDye.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PinkDye.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.LimeDye.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CyanDye.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GrayDye.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PurpleDye.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.WhiteConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OrangeConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MagentaConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.YellowConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.LimeConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PinkConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GrayConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CyanConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PurpleConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BlueConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BrownConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GreenConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.RedConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BlackConcretePowder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.WhiteConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OrangeConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MagentaConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.LightBlueConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.YellowConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.LimeConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PinkConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GrayConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.LightGrayConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CyanConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PurpleConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BlueConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BrownConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GreenConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.RedConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BlackConcrete.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GlassPane.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OakDoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BirchDoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.JungleDoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SakuraDoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AcaciaDoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SpruceDoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DarkOakDoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MangroveDoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.IronDoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OakTrapdoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BirchTrapdoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.JungleTrapdoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SakuraTrapdoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SpruceTrapdoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MangroveTrapdoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.IronTrapdoor.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OakFence.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BirchFence.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.JungleFence.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SakuraFence.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AcaciaFence.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SpruceFence.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DarkOakFence.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MangroveFence.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OakFenceGate.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BirchFenceGate.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.JungleFenceGate.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SakuraFenceGate.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AcaciaFenceGate.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SpruceFenceGate.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DarkOakFenceGate.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MangroveFenceGate.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.IronBars.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Lantern.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Ladder.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Barrel.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Bookshelf.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Carpet.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.FlowerPot.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Lodestone.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.StoneStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CobblestoneStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.StoneBricksStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SmoothStoneStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AndesiteStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GraniteStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DioriteStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.TuffStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BasaltStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BlackstoneStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedTuffStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DeepslateStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SandstoneStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.RedSandstoneStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BrickBlockStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MudBricksStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.TuffBricksStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OakPlanksStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BirchPlanksStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.JunglePlanksStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SprucePlanksStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.StoneSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CobblestoneSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.StoneBricksSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SmoothStoneSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AndesiteSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GraniteSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DioriteSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.TuffSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BasaltSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BlackstoneSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedTuffSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DeepslateSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SandstoneSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.RedSandstoneSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BrickBlockSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MudBricksSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.TuffBricksSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.OakPlanksSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BirchPlanksSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.JunglePlanksSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SprucePlanksSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.StoneWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CobblestoneWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.StoneBricksWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.AndesiteWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GraniteWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DioriteWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.TuffWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BasaltWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BlackstoneWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedGraniteWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedDioriteWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedTuffWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedBasaltWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DeepslateWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DeepslateBricksWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.SandstoneWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.RedSandstoneWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.BrickBlockWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MudBricksWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.TuffBricksWall.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.WoodenPick.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CopperPick.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.IronPick.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GoldPick.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.DiamondPick.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.NeptuniumPick.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.WoodenWhacker.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.CopperWhacker.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.IronWhacker.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.WoodenHoe.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.GoldBar.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.IronBar.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Diamond.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.NeptuniumBar.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Bucket.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.WaterBucket.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.WheatSlop.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.PumpkinSoup.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.MelonSmoothie.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Battery.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Player.isAxe(), "!isAxe");
      assertFalse(ObjectTypes.Fragment.isAxe(), "!isAxe");
    }

    {
      assertTrue(ObjectTypes.WoodenHoe.isHoe(), "isHoe");
      assertFalse(ObjectTypes.Null.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Air.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Water.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Lava.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Stone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Bedrock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Deepslate.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Granite.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Tuff.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Calcite.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Basalt.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SmoothBasalt.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Andesite.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Diorite.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Cobblestone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MossyCobblestone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Obsidian.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Dripstone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Blackstone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CobbledDeepslate.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Amethyst.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Glowstone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Grass.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Dirt.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Moss.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Podzol.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DirtPath.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Mud.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PackedMud.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Farmland.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.WetFarmland.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Snow.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Ice.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.UnrevealedOre.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CoalOre.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CopperOre.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.IronOre.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GoldOre.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DiamondOre.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.NeptuniumOre.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Gravel.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Sand.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.RedSand.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Sandstone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.RedSandstone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Clay.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AnyTerracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Terracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BrownTerracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OrangeTerracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.WhiteTerracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.LightGrayTerracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.YellowTerracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.RedTerracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.LightBlueTerracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CyanTerracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BlackTerracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PurpleTerracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BlueTerracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MagentaTerracotta.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AnyLog.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OakLog.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BirchLog.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.JungleLog.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SakuraLog.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AcaciaLog.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SpruceLog.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DarkOakLog.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MangroveLog.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AnyLeaf.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OakLeaf.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BirchLeaf.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.JungleLeaf.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SakuraLeaf.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SpruceLeaf.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AcaciaLeaf.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DarkOakLeaf.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AzaleaLeaf.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MangroveLeaf.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MangroveRoots.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AzaleaFlower.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BellFlower.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DandelionFlower.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DaylilyFlower.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.LilacFlower.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.RoseFlower.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.FireFlower.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MorninggloryFlower.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PeonyFlower.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Ultraviolet.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SunFlower.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.FlyTrap.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.FescueGrass.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SwitchGrass.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.VinesBush.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.IvyVine.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.HempBush.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Coral.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SeaAnemone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Algae.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.HornCoralBlock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.FireCoralBlock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.TubeCoralBlock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BubbleCoralBlock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BrainCoralBlock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SpiderWeb.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Bone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GoldenMushroom.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.RedMushroom.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CoffeeBush.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.StrawberryBush.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.RaspberryBush.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Wheat.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CottonBush.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Pumpkin.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Melon.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.RedMushroomBlock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BrownMushroomBlock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MushroomStem.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BambooBush.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Cactus.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AnyPlank.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OakPlanks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BirchPlanks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.JunglePlanks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SakuraPlanks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SprucePlanks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AcaciaPlanks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DarkOakPlanks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MangrovePlanks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CopperBlock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.IronBlock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GoldBlock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DiamondBlock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.NeptuniumBlock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.WheatSeed.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PumpkinSeed.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MelonSeed.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OakSapling.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BirchSapling.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.JungleSapling.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SakuraSapling.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AcaciaSapling.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SpruceSapling.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DarkOakSapling.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MangroveSapling.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Furnace.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Workbench.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Powerstone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.ForceField.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Chest.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SpawnTile.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Bed.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.TextSign.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Torch.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Stonecutter.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.StoneBricks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.TuffBricks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DeepslateBricks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedAndesite.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedGranite.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedDiorite.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedTuff.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedBasalt.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedBlackstone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.ChiseledDeepslate.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.ChiseledSandstone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CrackedStoneBricks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CrackedTuffBricks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SmoothSandstone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SmoothRedSandstone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SmoothStone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Cotton.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CottonSeed.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Glass.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Brick.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BrickBlock.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MudBricks.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Paper.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Book.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Stick.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.RedDye.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.YellowDye.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BlueDye.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GreenDye.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.WhiteDye.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BlackDye.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BrownDye.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OrangeDye.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PinkDye.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.LimeDye.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CyanDye.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GrayDye.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PurpleDye.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.WhiteConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OrangeConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MagentaConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.YellowConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.LimeConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PinkConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GrayConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CyanConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PurpleConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BlueConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BrownConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GreenConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.RedConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BlackConcretePowder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.WhiteConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OrangeConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MagentaConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.LightBlueConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.YellowConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.LimeConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PinkConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GrayConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.LightGrayConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CyanConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PurpleConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BlueConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BrownConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GreenConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.RedConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BlackConcrete.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GlassPane.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OakDoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BirchDoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.JungleDoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SakuraDoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AcaciaDoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SpruceDoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DarkOakDoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MangroveDoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.IronDoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OakTrapdoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BirchTrapdoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.JungleTrapdoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SakuraTrapdoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SpruceTrapdoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MangroveTrapdoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.IronTrapdoor.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OakFence.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BirchFence.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.JungleFence.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SakuraFence.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AcaciaFence.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SpruceFence.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DarkOakFence.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MangroveFence.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OakFenceGate.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BirchFenceGate.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.JungleFenceGate.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SakuraFenceGate.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AcaciaFenceGate.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SpruceFenceGate.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DarkOakFenceGate.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MangroveFenceGate.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.IronBars.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Lantern.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Ladder.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Barrel.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Bookshelf.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Carpet.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.FlowerPot.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Lodestone.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.StoneStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CobblestoneStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.StoneBricksStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SmoothStoneStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AndesiteStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GraniteStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DioriteStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.TuffStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BasaltStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BlackstoneStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedTuffStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DeepslateStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SandstoneStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.RedSandstoneStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BrickBlockStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MudBricksStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.TuffBricksStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OakPlanksStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BirchPlanksStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.JunglePlanksStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SprucePlanksStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.StoneSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CobblestoneSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.StoneBricksSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SmoothStoneSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AndesiteSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GraniteSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DioriteSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.TuffSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BasaltSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BlackstoneSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedTuffSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DeepslateSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SandstoneSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.RedSandstoneSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BrickBlockSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MudBricksSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.TuffBricksSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.OakPlanksSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BirchPlanksSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.JunglePlanksSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SprucePlanksSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.StoneWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CobblestoneWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.StoneBricksWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.AndesiteWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GraniteWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DioriteWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.TuffWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BasaltWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BlackstoneWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedGraniteWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedDioriteWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedTuffWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedBasaltWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DeepslateWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DeepslateBricksWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.SandstoneWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.RedSandstoneWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.BrickBlockWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MudBricksWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.TuffBricksWall.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.WoodenPick.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CopperPick.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.IronPick.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GoldPick.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DiamondPick.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.NeptuniumPick.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.WoodenAxe.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CopperAxe.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.IronAxe.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GoldAxe.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.DiamondAxe.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.NeptuniumAxe.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.WoodenWhacker.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.CopperWhacker.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.IronWhacker.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.GoldBar.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.IronBar.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Diamond.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.NeptuniumBar.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Bucket.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.WaterBucket.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.WheatSlop.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.PumpkinSoup.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.MelonSmoothie.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Battery.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Player.isHoe(), "!isHoe");
      assertFalse(ObjectTypes.Fragment.isHoe(), "!isHoe");
    }

    {
      assertTrue(ObjectTypes.WoodenWhacker.isWhacker(), "isWhacker");
      assertTrue(ObjectTypes.CopperWhacker.isWhacker(), "isWhacker");
      assertTrue(ObjectTypes.IronWhacker.isWhacker(), "isWhacker");
      assertFalse(ObjectTypes.Null.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Air.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Water.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Lava.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Stone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Bedrock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Deepslate.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Granite.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Tuff.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Calcite.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Basalt.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SmoothBasalt.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Andesite.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Diorite.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Cobblestone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MossyCobblestone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Obsidian.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Dripstone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Blackstone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CobbledDeepslate.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Amethyst.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Glowstone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Grass.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Dirt.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Moss.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Podzol.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DirtPath.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Mud.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PackedMud.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Farmland.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.WetFarmland.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Snow.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Ice.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.UnrevealedOre.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CoalOre.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CopperOre.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.IronOre.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GoldOre.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DiamondOre.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.NeptuniumOre.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Gravel.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Sand.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.RedSand.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Sandstone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.RedSandstone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Clay.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AnyTerracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Terracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BrownTerracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OrangeTerracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.WhiteTerracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.LightGrayTerracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.YellowTerracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.RedTerracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.LightBlueTerracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CyanTerracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BlackTerracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PurpleTerracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BlueTerracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MagentaTerracotta.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AnyLog.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OakLog.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BirchLog.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.JungleLog.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SakuraLog.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AcaciaLog.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SpruceLog.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DarkOakLog.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MangroveLog.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AnyLeaf.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OakLeaf.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BirchLeaf.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.JungleLeaf.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SakuraLeaf.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SpruceLeaf.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AcaciaLeaf.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DarkOakLeaf.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AzaleaLeaf.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MangroveLeaf.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MangroveRoots.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AzaleaFlower.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BellFlower.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DandelionFlower.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DaylilyFlower.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.LilacFlower.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.RoseFlower.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.FireFlower.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MorninggloryFlower.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PeonyFlower.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Ultraviolet.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SunFlower.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.FlyTrap.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.FescueGrass.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SwitchGrass.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.VinesBush.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.IvyVine.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.HempBush.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Coral.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SeaAnemone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Algae.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.HornCoralBlock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.FireCoralBlock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.TubeCoralBlock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BubbleCoralBlock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BrainCoralBlock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SpiderWeb.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Bone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GoldenMushroom.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.RedMushroom.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CoffeeBush.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.StrawberryBush.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.RaspberryBush.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Wheat.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CottonBush.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Pumpkin.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Melon.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.RedMushroomBlock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BrownMushroomBlock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MushroomStem.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BambooBush.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Cactus.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AnyPlank.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OakPlanks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BirchPlanks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.JunglePlanks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SakuraPlanks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SprucePlanks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AcaciaPlanks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DarkOakPlanks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MangrovePlanks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CopperBlock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.IronBlock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GoldBlock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DiamondBlock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.NeptuniumBlock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.WheatSeed.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PumpkinSeed.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MelonSeed.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OakSapling.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BirchSapling.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.JungleSapling.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SakuraSapling.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AcaciaSapling.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SpruceSapling.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DarkOakSapling.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MangroveSapling.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Furnace.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Workbench.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Powerstone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.ForceField.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Chest.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SpawnTile.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Bed.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.TextSign.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Torch.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Stonecutter.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.StoneBricks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.TuffBricks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DeepslateBricks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedAndesite.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedGranite.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedDiorite.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedTuff.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedBasalt.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedBlackstone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.ChiseledDeepslate.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.ChiseledSandstone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CrackedStoneBricks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CrackedTuffBricks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SmoothSandstone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SmoothRedSandstone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SmoothStone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Cotton.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CottonSeed.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Glass.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Brick.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BrickBlock.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MudBricks.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Paper.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Book.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Stick.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.RedDye.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.YellowDye.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BlueDye.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GreenDye.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.WhiteDye.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BlackDye.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BrownDye.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OrangeDye.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PinkDye.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.LimeDye.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CyanDye.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GrayDye.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PurpleDye.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.WhiteConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OrangeConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MagentaConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.YellowConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.LimeConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PinkConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GrayConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CyanConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PurpleConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BlueConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BrownConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GreenConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.RedConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BlackConcretePowder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.WhiteConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OrangeConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MagentaConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.LightBlueConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.YellowConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.LimeConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PinkConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GrayConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.LightGrayConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CyanConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PurpleConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BlueConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BrownConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GreenConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.RedConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BlackConcrete.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GlassPane.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OakDoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BirchDoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.JungleDoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SakuraDoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AcaciaDoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SpruceDoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DarkOakDoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MangroveDoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.IronDoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OakTrapdoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BirchTrapdoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.JungleTrapdoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SakuraTrapdoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SpruceTrapdoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MangroveTrapdoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.IronTrapdoor.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OakFence.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BirchFence.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.JungleFence.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SakuraFence.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AcaciaFence.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SpruceFence.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DarkOakFence.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MangroveFence.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OakFenceGate.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BirchFenceGate.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.JungleFenceGate.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SakuraFenceGate.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AcaciaFenceGate.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SpruceFenceGate.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DarkOakFenceGate.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MangroveFenceGate.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.IronBars.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Lantern.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Ladder.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Barrel.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Bookshelf.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Carpet.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.FlowerPot.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Lodestone.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.StoneStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CobblestoneStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.StoneBricksStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SmoothStoneStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AndesiteStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GraniteStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DioriteStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.TuffStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BasaltStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BlackstoneStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedTuffStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DeepslateStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SandstoneStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.RedSandstoneStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BrickBlockStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MudBricksStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.TuffBricksStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OakPlanksStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BirchPlanksStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.JunglePlanksStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SprucePlanksStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.StoneSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CobblestoneSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.StoneBricksSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SmoothStoneSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AndesiteSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GraniteSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DioriteSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.TuffSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BasaltSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BlackstoneSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedTuffSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DeepslateSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SandstoneSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.RedSandstoneSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BrickBlockSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MudBricksSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.TuffBricksSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.OakPlanksSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BirchPlanksSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.JunglePlanksSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SprucePlanksSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.StoneWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CobblestoneWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.StoneBricksWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.AndesiteWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GraniteWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DioriteWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.TuffWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BasaltWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BlackstoneWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedGraniteWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedDioriteWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedTuffWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedBasaltWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DeepslateWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DeepslateBricksWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.SandstoneWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.RedSandstoneWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.BrickBlockWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MudBricksWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.TuffBricksWall.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.WoodenPick.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CopperPick.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.IronPick.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GoldPick.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DiamondPick.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.NeptuniumPick.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.WoodenAxe.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.CopperAxe.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.IronAxe.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GoldAxe.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.DiamondAxe.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.NeptuniumAxe.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.WoodenHoe.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.GoldBar.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.IronBar.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Diamond.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.NeptuniumBar.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Bucket.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.WaterBucket.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.WheatSlop.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.PumpkinSoup.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.MelonSmoothie.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Battery.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Player.isWhacker(), "!isWhacker");
      assertFalse(ObjectTypes.Fragment.isWhacker(), "!isWhacker");
    }

    {
      assertTrue(ObjectTypes.GoldBar.isOreBar(), "isOreBar");
      assertTrue(ObjectTypes.IronBar.isOreBar(), "isOreBar");
      assertTrue(ObjectTypes.Diamond.isOreBar(), "isOreBar");
      assertTrue(ObjectTypes.NeptuniumBar.isOreBar(), "isOreBar");
      assertFalse(ObjectTypes.Null.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Air.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Water.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Lava.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Stone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Bedrock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Deepslate.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Granite.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Tuff.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Calcite.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Basalt.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SmoothBasalt.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Andesite.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Diorite.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Cobblestone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MossyCobblestone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Obsidian.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Dripstone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Blackstone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CobbledDeepslate.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Amethyst.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Glowstone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Grass.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Dirt.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Moss.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Podzol.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DirtPath.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Mud.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PackedMud.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Farmland.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.WetFarmland.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Snow.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Ice.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.UnrevealedOre.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CoalOre.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CopperOre.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.IronOre.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GoldOre.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DiamondOre.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.NeptuniumOre.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Gravel.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Sand.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.RedSand.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Sandstone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.RedSandstone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Clay.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AnyTerracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Terracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BrownTerracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OrangeTerracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.WhiteTerracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.LightGrayTerracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.YellowTerracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.RedTerracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.LightBlueTerracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CyanTerracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BlackTerracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PurpleTerracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BlueTerracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MagentaTerracotta.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AnyLog.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OakLog.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BirchLog.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.JungleLog.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SakuraLog.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AcaciaLog.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SpruceLog.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DarkOakLog.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MangroveLog.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AnyLeaf.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OakLeaf.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BirchLeaf.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.JungleLeaf.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SakuraLeaf.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SpruceLeaf.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AcaciaLeaf.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DarkOakLeaf.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AzaleaLeaf.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MangroveLeaf.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MangroveRoots.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AzaleaFlower.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BellFlower.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DandelionFlower.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DaylilyFlower.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.LilacFlower.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.RoseFlower.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.FireFlower.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MorninggloryFlower.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PeonyFlower.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Ultraviolet.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SunFlower.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.FlyTrap.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.FescueGrass.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SwitchGrass.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.VinesBush.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.IvyVine.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.HempBush.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Coral.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SeaAnemone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Algae.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.HornCoralBlock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.FireCoralBlock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.TubeCoralBlock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BubbleCoralBlock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BrainCoralBlock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SpiderWeb.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Bone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GoldenMushroom.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.RedMushroom.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CoffeeBush.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.StrawberryBush.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.RaspberryBush.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Wheat.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CottonBush.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Pumpkin.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Melon.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.RedMushroomBlock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BrownMushroomBlock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MushroomStem.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BambooBush.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Cactus.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AnyPlank.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OakPlanks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BirchPlanks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.JunglePlanks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SakuraPlanks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SprucePlanks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AcaciaPlanks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DarkOakPlanks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MangrovePlanks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CopperBlock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.IronBlock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GoldBlock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DiamondBlock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.NeptuniumBlock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.WheatSeed.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PumpkinSeed.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MelonSeed.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OakSapling.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BirchSapling.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.JungleSapling.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SakuraSapling.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AcaciaSapling.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SpruceSapling.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DarkOakSapling.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MangroveSapling.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Furnace.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Workbench.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Powerstone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.ForceField.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Chest.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SpawnTile.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Bed.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.TextSign.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Torch.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Stonecutter.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.StoneBricks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.TuffBricks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DeepslateBricks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedAndesite.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedGranite.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedDiorite.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedTuff.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedBasalt.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedBlackstone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.ChiseledDeepslate.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.ChiseledSandstone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CrackedStoneBricks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CrackedTuffBricks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SmoothSandstone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SmoothRedSandstone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SmoothStone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Cotton.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CottonSeed.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Glass.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Brick.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BrickBlock.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MudBricks.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Paper.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Book.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Stick.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.RedDye.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.YellowDye.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BlueDye.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GreenDye.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.WhiteDye.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BlackDye.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BrownDye.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OrangeDye.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PinkDye.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.LimeDye.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CyanDye.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GrayDye.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PurpleDye.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.WhiteConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OrangeConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MagentaConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.YellowConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.LimeConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PinkConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GrayConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CyanConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PurpleConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BlueConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BrownConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GreenConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.RedConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BlackConcretePowder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.WhiteConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OrangeConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MagentaConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.LightBlueConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.YellowConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.LimeConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PinkConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GrayConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.LightGrayConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CyanConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PurpleConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BlueConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BrownConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GreenConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.RedConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BlackConcrete.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GlassPane.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OakDoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BirchDoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.JungleDoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SakuraDoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AcaciaDoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SpruceDoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DarkOakDoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MangroveDoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.IronDoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OakTrapdoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BirchTrapdoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.JungleTrapdoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SakuraTrapdoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SpruceTrapdoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MangroveTrapdoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.IronTrapdoor.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OakFence.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BirchFence.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.JungleFence.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SakuraFence.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AcaciaFence.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SpruceFence.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DarkOakFence.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MangroveFence.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OakFenceGate.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BirchFenceGate.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.JungleFenceGate.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SakuraFenceGate.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AcaciaFenceGate.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SpruceFenceGate.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DarkOakFenceGate.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MangroveFenceGate.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.IronBars.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Lantern.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Ladder.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Barrel.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Bookshelf.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Carpet.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.FlowerPot.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Lodestone.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.StoneStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CobblestoneStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.StoneBricksStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SmoothStoneStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AndesiteStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GraniteStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DioriteStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.TuffStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BasaltStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BlackstoneStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedTuffStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DeepslateStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SandstoneStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.RedSandstoneStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BrickBlockStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MudBricksStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.TuffBricksStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OakPlanksStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BirchPlanksStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.JunglePlanksStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SprucePlanksStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.StoneSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CobblestoneSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.StoneBricksSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SmoothStoneSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AndesiteSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GraniteSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DioriteSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.TuffSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BasaltSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BlackstoneSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedTuffSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DeepslateSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SandstoneSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.RedSandstoneSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BrickBlockSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MudBricksSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.TuffBricksSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.OakPlanksSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BirchPlanksSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.JunglePlanksSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SprucePlanksSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.StoneWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CobblestoneWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.StoneBricksWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.AndesiteWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GraniteWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DioriteWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.TuffWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BasaltWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BlackstoneWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedGraniteWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedDioriteWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedTuffWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedBasaltWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DeepslateWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DeepslateBricksWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.SandstoneWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.RedSandstoneWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.BrickBlockWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MudBricksWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.TuffBricksWall.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.WoodenPick.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CopperPick.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.IronPick.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GoldPick.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DiamondPick.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.NeptuniumPick.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.WoodenAxe.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CopperAxe.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.IronAxe.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.GoldAxe.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.DiamondAxe.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.NeptuniumAxe.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.WoodenWhacker.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.CopperWhacker.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.IronWhacker.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.WoodenHoe.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Bucket.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.WaterBucket.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.WheatSlop.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.PumpkinSoup.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.MelonSmoothie.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Battery.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Player.isOreBar(), "!isOreBar");
      assertFalse(ObjectTypes.Fragment.isOreBar(), "!isOreBar");
    }

    {
      assertTrue(ObjectTypes.WheatSlop.isFood(), "isFood");
      assertTrue(ObjectTypes.PumpkinSoup.isFood(), "isFood");
      assertTrue(ObjectTypes.MelonSmoothie.isFood(), "isFood");
      assertFalse(ObjectTypes.Null.isFood(), "!isFood");
      assertFalse(ObjectTypes.Air.isFood(), "!isFood");
      assertFalse(ObjectTypes.Water.isFood(), "!isFood");
      assertFalse(ObjectTypes.Lava.isFood(), "!isFood");
      assertFalse(ObjectTypes.Stone.isFood(), "!isFood");
      assertFalse(ObjectTypes.Bedrock.isFood(), "!isFood");
      assertFalse(ObjectTypes.Deepslate.isFood(), "!isFood");
      assertFalse(ObjectTypes.Granite.isFood(), "!isFood");
      assertFalse(ObjectTypes.Tuff.isFood(), "!isFood");
      assertFalse(ObjectTypes.Calcite.isFood(), "!isFood");
      assertFalse(ObjectTypes.Basalt.isFood(), "!isFood");
      assertFalse(ObjectTypes.SmoothBasalt.isFood(), "!isFood");
      assertFalse(ObjectTypes.Andesite.isFood(), "!isFood");
      assertFalse(ObjectTypes.Diorite.isFood(), "!isFood");
      assertFalse(ObjectTypes.Cobblestone.isFood(), "!isFood");
      assertFalse(ObjectTypes.MossyCobblestone.isFood(), "!isFood");
      assertFalse(ObjectTypes.Obsidian.isFood(), "!isFood");
      assertFalse(ObjectTypes.Dripstone.isFood(), "!isFood");
      assertFalse(ObjectTypes.Blackstone.isFood(), "!isFood");
      assertFalse(ObjectTypes.CobbledDeepslate.isFood(), "!isFood");
      assertFalse(ObjectTypes.Amethyst.isFood(), "!isFood");
      assertFalse(ObjectTypes.Glowstone.isFood(), "!isFood");
      assertFalse(ObjectTypes.Grass.isFood(), "!isFood");
      assertFalse(ObjectTypes.Dirt.isFood(), "!isFood");
      assertFalse(ObjectTypes.Moss.isFood(), "!isFood");
      assertFalse(ObjectTypes.Podzol.isFood(), "!isFood");
      assertFalse(ObjectTypes.DirtPath.isFood(), "!isFood");
      assertFalse(ObjectTypes.Mud.isFood(), "!isFood");
      assertFalse(ObjectTypes.PackedMud.isFood(), "!isFood");
      assertFalse(ObjectTypes.Farmland.isFood(), "!isFood");
      assertFalse(ObjectTypes.WetFarmland.isFood(), "!isFood");
      assertFalse(ObjectTypes.Snow.isFood(), "!isFood");
      assertFalse(ObjectTypes.Ice.isFood(), "!isFood");
      assertFalse(ObjectTypes.UnrevealedOre.isFood(), "!isFood");
      assertFalse(ObjectTypes.CoalOre.isFood(), "!isFood");
      assertFalse(ObjectTypes.CopperOre.isFood(), "!isFood");
      assertFalse(ObjectTypes.IronOre.isFood(), "!isFood");
      assertFalse(ObjectTypes.GoldOre.isFood(), "!isFood");
      assertFalse(ObjectTypes.DiamondOre.isFood(), "!isFood");
      assertFalse(ObjectTypes.NeptuniumOre.isFood(), "!isFood");
      assertFalse(ObjectTypes.Gravel.isFood(), "!isFood");
      assertFalse(ObjectTypes.Sand.isFood(), "!isFood");
      assertFalse(ObjectTypes.RedSand.isFood(), "!isFood");
      assertFalse(ObjectTypes.Sandstone.isFood(), "!isFood");
      assertFalse(ObjectTypes.RedSandstone.isFood(), "!isFood");
      assertFalse(ObjectTypes.Clay.isFood(), "!isFood");
      assertFalse(ObjectTypes.AnyTerracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.Terracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.BrownTerracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.OrangeTerracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.WhiteTerracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.LightGrayTerracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.YellowTerracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.RedTerracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.LightBlueTerracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.CyanTerracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.BlackTerracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.PurpleTerracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.BlueTerracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.MagentaTerracotta.isFood(), "!isFood");
      assertFalse(ObjectTypes.AnyLog.isFood(), "!isFood");
      assertFalse(ObjectTypes.OakLog.isFood(), "!isFood");
      assertFalse(ObjectTypes.BirchLog.isFood(), "!isFood");
      assertFalse(ObjectTypes.JungleLog.isFood(), "!isFood");
      assertFalse(ObjectTypes.SakuraLog.isFood(), "!isFood");
      assertFalse(ObjectTypes.AcaciaLog.isFood(), "!isFood");
      assertFalse(ObjectTypes.SpruceLog.isFood(), "!isFood");
      assertFalse(ObjectTypes.DarkOakLog.isFood(), "!isFood");
      assertFalse(ObjectTypes.MangroveLog.isFood(), "!isFood");
      assertFalse(ObjectTypes.AnyLeaf.isFood(), "!isFood");
      assertFalse(ObjectTypes.OakLeaf.isFood(), "!isFood");
      assertFalse(ObjectTypes.BirchLeaf.isFood(), "!isFood");
      assertFalse(ObjectTypes.JungleLeaf.isFood(), "!isFood");
      assertFalse(ObjectTypes.SakuraLeaf.isFood(), "!isFood");
      assertFalse(ObjectTypes.SpruceLeaf.isFood(), "!isFood");
      assertFalse(ObjectTypes.AcaciaLeaf.isFood(), "!isFood");
      assertFalse(ObjectTypes.DarkOakLeaf.isFood(), "!isFood");
      assertFalse(ObjectTypes.AzaleaLeaf.isFood(), "!isFood");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isFood(), "!isFood");
      assertFalse(ObjectTypes.MangroveLeaf.isFood(), "!isFood");
      assertFalse(ObjectTypes.MangroveRoots.isFood(), "!isFood");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isFood(), "!isFood");
      assertFalse(ObjectTypes.AzaleaFlower.isFood(), "!isFood");
      assertFalse(ObjectTypes.BellFlower.isFood(), "!isFood");
      assertFalse(ObjectTypes.DandelionFlower.isFood(), "!isFood");
      assertFalse(ObjectTypes.DaylilyFlower.isFood(), "!isFood");
      assertFalse(ObjectTypes.LilacFlower.isFood(), "!isFood");
      assertFalse(ObjectTypes.RoseFlower.isFood(), "!isFood");
      assertFalse(ObjectTypes.FireFlower.isFood(), "!isFood");
      assertFalse(ObjectTypes.MorninggloryFlower.isFood(), "!isFood");
      assertFalse(ObjectTypes.PeonyFlower.isFood(), "!isFood");
      assertFalse(ObjectTypes.Ultraviolet.isFood(), "!isFood");
      assertFalse(ObjectTypes.SunFlower.isFood(), "!isFood");
      assertFalse(ObjectTypes.FlyTrap.isFood(), "!isFood");
      assertFalse(ObjectTypes.FescueGrass.isFood(), "!isFood");
      assertFalse(ObjectTypes.SwitchGrass.isFood(), "!isFood");
      assertFalse(ObjectTypes.VinesBush.isFood(), "!isFood");
      assertFalse(ObjectTypes.IvyVine.isFood(), "!isFood");
      assertFalse(ObjectTypes.HempBush.isFood(), "!isFood");
      assertFalse(ObjectTypes.Coral.isFood(), "!isFood");
      assertFalse(ObjectTypes.SeaAnemone.isFood(), "!isFood");
      assertFalse(ObjectTypes.Algae.isFood(), "!isFood");
      assertFalse(ObjectTypes.HornCoralBlock.isFood(), "!isFood");
      assertFalse(ObjectTypes.FireCoralBlock.isFood(), "!isFood");
      assertFalse(ObjectTypes.TubeCoralBlock.isFood(), "!isFood");
      assertFalse(ObjectTypes.BubbleCoralBlock.isFood(), "!isFood");
      assertFalse(ObjectTypes.BrainCoralBlock.isFood(), "!isFood");
      assertFalse(ObjectTypes.SpiderWeb.isFood(), "!isFood");
      assertFalse(ObjectTypes.Bone.isFood(), "!isFood");
      assertFalse(ObjectTypes.GoldenMushroom.isFood(), "!isFood");
      assertFalse(ObjectTypes.RedMushroom.isFood(), "!isFood");
      assertFalse(ObjectTypes.CoffeeBush.isFood(), "!isFood");
      assertFalse(ObjectTypes.StrawberryBush.isFood(), "!isFood");
      assertFalse(ObjectTypes.RaspberryBush.isFood(), "!isFood");
      assertFalse(ObjectTypes.Wheat.isFood(), "!isFood");
      assertFalse(ObjectTypes.CottonBush.isFood(), "!isFood");
      assertFalse(ObjectTypes.Pumpkin.isFood(), "!isFood");
      assertFalse(ObjectTypes.Melon.isFood(), "!isFood");
      assertFalse(ObjectTypes.RedMushroomBlock.isFood(), "!isFood");
      assertFalse(ObjectTypes.BrownMushroomBlock.isFood(), "!isFood");
      assertFalse(ObjectTypes.MushroomStem.isFood(), "!isFood");
      assertFalse(ObjectTypes.BambooBush.isFood(), "!isFood");
      assertFalse(ObjectTypes.Cactus.isFood(), "!isFood");
      assertFalse(ObjectTypes.AnyPlank.isFood(), "!isFood");
      assertFalse(ObjectTypes.OakPlanks.isFood(), "!isFood");
      assertFalse(ObjectTypes.BirchPlanks.isFood(), "!isFood");
      assertFalse(ObjectTypes.JunglePlanks.isFood(), "!isFood");
      assertFalse(ObjectTypes.SakuraPlanks.isFood(), "!isFood");
      assertFalse(ObjectTypes.SprucePlanks.isFood(), "!isFood");
      assertFalse(ObjectTypes.AcaciaPlanks.isFood(), "!isFood");
      assertFalse(ObjectTypes.DarkOakPlanks.isFood(), "!isFood");
      assertFalse(ObjectTypes.MangrovePlanks.isFood(), "!isFood");
      assertFalse(ObjectTypes.CopperBlock.isFood(), "!isFood");
      assertFalse(ObjectTypes.IronBlock.isFood(), "!isFood");
      assertFalse(ObjectTypes.GoldBlock.isFood(), "!isFood");
      assertFalse(ObjectTypes.DiamondBlock.isFood(), "!isFood");
      assertFalse(ObjectTypes.NeptuniumBlock.isFood(), "!isFood");
      assertFalse(ObjectTypes.WheatSeed.isFood(), "!isFood");
      assertFalse(ObjectTypes.PumpkinSeed.isFood(), "!isFood");
      assertFalse(ObjectTypes.MelonSeed.isFood(), "!isFood");
      assertFalse(ObjectTypes.OakSapling.isFood(), "!isFood");
      assertFalse(ObjectTypes.BirchSapling.isFood(), "!isFood");
      assertFalse(ObjectTypes.JungleSapling.isFood(), "!isFood");
      assertFalse(ObjectTypes.SakuraSapling.isFood(), "!isFood");
      assertFalse(ObjectTypes.AcaciaSapling.isFood(), "!isFood");
      assertFalse(ObjectTypes.SpruceSapling.isFood(), "!isFood");
      assertFalse(ObjectTypes.DarkOakSapling.isFood(), "!isFood");
      assertFalse(ObjectTypes.MangroveSapling.isFood(), "!isFood");
      assertFalse(ObjectTypes.Furnace.isFood(), "!isFood");
      assertFalse(ObjectTypes.Workbench.isFood(), "!isFood");
      assertFalse(ObjectTypes.Powerstone.isFood(), "!isFood");
      assertFalse(ObjectTypes.ForceField.isFood(), "!isFood");
      assertFalse(ObjectTypes.Chest.isFood(), "!isFood");
      assertFalse(ObjectTypes.SpawnTile.isFood(), "!isFood");
      assertFalse(ObjectTypes.Bed.isFood(), "!isFood");
      assertFalse(ObjectTypes.TextSign.isFood(), "!isFood");
      assertFalse(ObjectTypes.Torch.isFood(), "!isFood");
      assertFalse(ObjectTypes.Stonecutter.isFood(), "!isFood");
      assertFalse(ObjectTypes.StoneBricks.isFood(), "!isFood");
      assertFalse(ObjectTypes.TuffBricks.isFood(), "!isFood");
      assertFalse(ObjectTypes.DeepslateBricks.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedAndesite.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedGranite.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedDiorite.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedTuff.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedBasalt.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedBlackstone.isFood(), "!isFood");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isFood(), "!isFood");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isFood(), "!isFood");
      assertFalse(ObjectTypes.ChiseledDeepslate.isFood(), "!isFood");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isFood(), "!isFood");
      assertFalse(ObjectTypes.ChiseledSandstone.isFood(), "!isFood");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isFood(), "!isFood");
      assertFalse(ObjectTypes.CrackedStoneBricks.isFood(), "!isFood");
      assertFalse(ObjectTypes.CrackedTuffBricks.isFood(), "!isFood");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isFood(), "!isFood");
      assertFalse(ObjectTypes.SmoothSandstone.isFood(), "!isFood");
      assertFalse(ObjectTypes.SmoothRedSandstone.isFood(), "!isFood");
      assertFalse(ObjectTypes.SmoothStone.isFood(), "!isFood");
      assertFalse(ObjectTypes.Cotton.isFood(), "!isFood");
      assertFalse(ObjectTypes.CottonSeed.isFood(), "!isFood");
      assertFalse(ObjectTypes.Glass.isFood(), "!isFood");
      assertFalse(ObjectTypes.Brick.isFood(), "!isFood");
      assertFalse(ObjectTypes.BrickBlock.isFood(), "!isFood");
      assertFalse(ObjectTypes.MudBricks.isFood(), "!isFood");
      assertFalse(ObjectTypes.Paper.isFood(), "!isFood");
      assertFalse(ObjectTypes.Book.isFood(), "!isFood");
      assertFalse(ObjectTypes.Stick.isFood(), "!isFood");
      assertFalse(ObjectTypes.RedDye.isFood(), "!isFood");
      assertFalse(ObjectTypes.YellowDye.isFood(), "!isFood");
      assertFalse(ObjectTypes.BlueDye.isFood(), "!isFood");
      assertFalse(ObjectTypes.GreenDye.isFood(), "!isFood");
      assertFalse(ObjectTypes.WhiteDye.isFood(), "!isFood");
      assertFalse(ObjectTypes.BlackDye.isFood(), "!isFood");
      assertFalse(ObjectTypes.BrownDye.isFood(), "!isFood");
      assertFalse(ObjectTypes.OrangeDye.isFood(), "!isFood");
      assertFalse(ObjectTypes.PinkDye.isFood(), "!isFood");
      assertFalse(ObjectTypes.LimeDye.isFood(), "!isFood");
      assertFalse(ObjectTypes.CyanDye.isFood(), "!isFood");
      assertFalse(ObjectTypes.GrayDye.isFood(), "!isFood");
      assertFalse(ObjectTypes.PurpleDye.isFood(), "!isFood");
      assertFalse(ObjectTypes.WhiteConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.OrangeConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.MagentaConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.YellowConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.LimeConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.PinkConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.GrayConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.CyanConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.PurpleConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.BlueConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.BrownConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.GreenConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.RedConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.BlackConcretePowder.isFood(), "!isFood");
      assertFalse(ObjectTypes.WhiteConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.OrangeConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.MagentaConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.LightBlueConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.YellowConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.LimeConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.PinkConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.GrayConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.LightGrayConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.CyanConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.PurpleConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.BlueConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.BrownConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.GreenConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.RedConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.BlackConcrete.isFood(), "!isFood");
      assertFalse(ObjectTypes.GlassPane.isFood(), "!isFood");
      assertFalse(ObjectTypes.OakDoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.BirchDoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.JungleDoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.SakuraDoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.AcaciaDoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.SpruceDoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.DarkOakDoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.MangroveDoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.IronDoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.OakTrapdoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.BirchTrapdoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.JungleTrapdoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.SakuraTrapdoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.SpruceTrapdoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.MangroveTrapdoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.IronTrapdoor.isFood(), "!isFood");
      assertFalse(ObjectTypes.OakFence.isFood(), "!isFood");
      assertFalse(ObjectTypes.BirchFence.isFood(), "!isFood");
      assertFalse(ObjectTypes.JungleFence.isFood(), "!isFood");
      assertFalse(ObjectTypes.SakuraFence.isFood(), "!isFood");
      assertFalse(ObjectTypes.AcaciaFence.isFood(), "!isFood");
      assertFalse(ObjectTypes.SpruceFence.isFood(), "!isFood");
      assertFalse(ObjectTypes.DarkOakFence.isFood(), "!isFood");
      assertFalse(ObjectTypes.MangroveFence.isFood(), "!isFood");
      assertFalse(ObjectTypes.OakFenceGate.isFood(), "!isFood");
      assertFalse(ObjectTypes.BirchFenceGate.isFood(), "!isFood");
      assertFalse(ObjectTypes.JungleFenceGate.isFood(), "!isFood");
      assertFalse(ObjectTypes.SakuraFenceGate.isFood(), "!isFood");
      assertFalse(ObjectTypes.AcaciaFenceGate.isFood(), "!isFood");
      assertFalse(ObjectTypes.SpruceFenceGate.isFood(), "!isFood");
      assertFalse(ObjectTypes.DarkOakFenceGate.isFood(), "!isFood");
      assertFalse(ObjectTypes.MangroveFenceGate.isFood(), "!isFood");
      assertFalse(ObjectTypes.IronBars.isFood(), "!isFood");
      assertFalse(ObjectTypes.Lantern.isFood(), "!isFood");
      assertFalse(ObjectTypes.Ladder.isFood(), "!isFood");
      assertFalse(ObjectTypes.Barrel.isFood(), "!isFood");
      assertFalse(ObjectTypes.Bookshelf.isFood(), "!isFood");
      assertFalse(ObjectTypes.Carpet.isFood(), "!isFood");
      assertFalse(ObjectTypes.FlowerPot.isFood(), "!isFood");
      assertFalse(ObjectTypes.Lodestone.isFood(), "!isFood");
      assertFalse(ObjectTypes.StoneStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.CobblestoneStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.StoneBricksStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.SmoothStoneStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.AndesiteStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.GraniteStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.DioriteStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.TuffStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.BasaltStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.BlackstoneStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedTuffStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.DeepslateStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.SandstoneStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.RedSandstoneStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.BrickBlockStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.MudBricksStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.TuffBricksStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.OakPlanksStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.BirchPlanksStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.JunglePlanksStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.SprucePlanksStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isFood(), "!isFood");
      assertFalse(ObjectTypes.StoneSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.CobblestoneSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.StoneBricksSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.SmoothStoneSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.AndesiteSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.GraniteSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.DioriteSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.TuffSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.BasaltSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.BlackstoneSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedTuffSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.DeepslateSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.SandstoneSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.RedSandstoneSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.BrickBlockSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.MudBricksSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.TuffBricksSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.OakPlanksSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.BirchPlanksSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.JunglePlanksSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.SprucePlanksSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isFood(), "!isFood");
      assertFalse(ObjectTypes.StoneWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.CobblestoneWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.StoneBricksWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.AndesiteWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.GraniteWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.DioriteWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.TuffWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.BasaltWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.BlackstoneWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedGraniteWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedDioriteWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedTuffWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedBasaltWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.DeepslateWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.DeepslateBricksWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.SandstoneWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.RedSandstoneWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.BrickBlockWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.MudBricksWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.TuffBricksWall.isFood(), "!isFood");
      assertFalse(ObjectTypes.WoodenPick.isFood(), "!isFood");
      assertFalse(ObjectTypes.CopperPick.isFood(), "!isFood");
      assertFalse(ObjectTypes.IronPick.isFood(), "!isFood");
      assertFalse(ObjectTypes.GoldPick.isFood(), "!isFood");
      assertFalse(ObjectTypes.DiamondPick.isFood(), "!isFood");
      assertFalse(ObjectTypes.NeptuniumPick.isFood(), "!isFood");
      assertFalse(ObjectTypes.WoodenAxe.isFood(), "!isFood");
      assertFalse(ObjectTypes.CopperAxe.isFood(), "!isFood");
      assertFalse(ObjectTypes.IronAxe.isFood(), "!isFood");
      assertFalse(ObjectTypes.GoldAxe.isFood(), "!isFood");
      assertFalse(ObjectTypes.DiamondAxe.isFood(), "!isFood");
      assertFalse(ObjectTypes.NeptuniumAxe.isFood(), "!isFood");
      assertFalse(ObjectTypes.WoodenWhacker.isFood(), "!isFood");
      assertFalse(ObjectTypes.CopperWhacker.isFood(), "!isFood");
      assertFalse(ObjectTypes.IronWhacker.isFood(), "!isFood");
      assertFalse(ObjectTypes.WoodenHoe.isFood(), "!isFood");
      assertFalse(ObjectTypes.GoldBar.isFood(), "!isFood");
      assertFalse(ObjectTypes.IronBar.isFood(), "!isFood");
      assertFalse(ObjectTypes.Diamond.isFood(), "!isFood");
      assertFalse(ObjectTypes.NeptuniumBar.isFood(), "!isFood");
      assertFalse(ObjectTypes.Bucket.isFood(), "!isFood");
      assertFalse(ObjectTypes.WaterBucket.isFood(), "!isFood");
      assertFalse(ObjectTypes.Battery.isFood(), "!isFood");
      assertFalse(ObjectTypes.Player.isFood(), "!isFood");
      assertFalse(ObjectTypes.Fragment.isFood(), "!isFood");
    }

    {
      assertTrue(ObjectTypes.Battery.isFuel(), "isFuel");
      assertFalse(ObjectTypes.Null.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Air.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Water.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Lava.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Stone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Bedrock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Deepslate.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Granite.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Tuff.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Calcite.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Basalt.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SmoothBasalt.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Andesite.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Diorite.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Cobblestone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MossyCobblestone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Obsidian.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Dripstone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Blackstone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CobbledDeepslate.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Amethyst.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Glowstone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Grass.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Dirt.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Moss.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Podzol.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DirtPath.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Mud.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PackedMud.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Farmland.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.WetFarmland.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Snow.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Ice.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.UnrevealedOre.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CoalOre.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CopperOre.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.IronOre.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GoldOre.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DiamondOre.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.NeptuniumOre.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Gravel.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Sand.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.RedSand.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Sandstone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.RedSandstone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Clay.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AnyTerracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Terracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BrownTerracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OrangeTerracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.WhiteTerracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.LightGrayTerracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.YellowTerracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.RedTerracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.LightBlueTerracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CyanTerracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BlackTerracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PurpleTerracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BlueTerracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MagentaTerracotta.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AnyLog.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OakLog.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BirchLog.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.JungleLog.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SakuraLog.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AcaciaLog.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SpruceLog.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DarkOakLog.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MangroveLog.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AnyLeaf.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OakLeaf.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BirchLeaf.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.JungleLeaf.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SakuraLeaf.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SpruceLeaf.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AcaciaLeaf.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DarkOakLeaf.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AzaleaLeaf.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MangroveLeaf.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MangroveRoots.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AzaleaFlower.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BellFlower.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DandelionFlower.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DaylilyFlower.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.LilacFlower.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.RoseFlower.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.FireFlower.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MorninggloryFlower.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PeonyFlower.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Ultraviolet.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SunFlower.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.FlyTrap.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.FescueGrass.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SwitchGrass.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.VinesBush.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.IvyVine.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.HempBush.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Coral.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SeaAnemone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Algae.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.HornCoralBlock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.FireCoralBlock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.TubeCoralBlock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BubbleCoralBlock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BrainCoralBlock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SpiderWeb.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Bone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GoldenMushroom.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.RedMushroom.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CoffeeBush.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.StrawberryBush.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.RaspberryBush.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Wheat.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CottonBush.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Pumpkin.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Melon.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.RedMushroomBlock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BrownMushroomBlock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MushroomStem.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BambooBush.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Cactus.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AnyPlank.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OakPlanks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BirchPlanks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.JunglePlanks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SakuraPlanks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SprucePlanks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AcaciaPlanks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DarkOakPlanks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MangrovePlanks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CopperBlock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.IronBlock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GoldBlock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DiamondBlock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.NeptuniumBlock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.WheatSeed.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PumpkinSeed.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MelonSeed.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OakSapling.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BirchSapling.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.JungleSapling.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SakuraSapling.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AcaciaSapling.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SpruceSapling.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DarkOakSapling.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MangroveSapling.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Furnace.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Workbench.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Powerstone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.ForceField.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Chest.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SpawnTile.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Bed.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.TextSign.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Torch.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Stonecutter.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.StoneBricks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.TuffBricks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DeepslateBricks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedAndesite.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedGranite.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedDiorite.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedTuff.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedBasalt.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedBlackstone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.ChiseledDeepslate.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.ChiseledSandstone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CrackedStoneBricks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CrackedTuffBricks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SmoothSandstone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SmoothRedSandstone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SmoothStone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Cotton.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CottonSeed.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Glass.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Brick.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BrickBlock.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MudBricks.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Paper.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Book.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Stick.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.RedDye.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.YellowDye.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BlueDye.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GreenDye.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.WhiteDye.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BlackDye.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BrownDye.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OrangeDye.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PinkDye.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.LimeDye.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CyanDye.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GrayDye.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PurpleDye.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.WhiteConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OrangeConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MagentaConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.YellowConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.LimeConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PinkConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GrayConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CyanConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PurpleConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BlueConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BrownConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GreenConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.RedConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BlackConcretePowder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.WhiteConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OrangeConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MagentaConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.LightBlueConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.YellowConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.LimeConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PinkConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GrayConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.LightGrayConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CyanConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PurpleConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BlueConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BrownConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GreenConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.RedConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BlackConcrete.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GlassPane.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OakDoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BirchDoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.JungleDoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SakuraDoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AcaciaDoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SpruceDoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DarkOakDoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MangroveDoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.IronDoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OakTrapdoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BirchTrapdoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.JungleTrapdoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SakuraTrapdoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SpruceTrapdoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MangroveTrapdoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.IronTrapdoor.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OakFence.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BirchFence.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.JungleFence.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SakuraFence.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AcaciaFence.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SpruceFence.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DarkOakFence.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MangroveFence.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OakFenceGate.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BirchFenceGate.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.JungleFenceGate.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SakuraFenceGate.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AcaciaFenceGate.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SpruceFenceGate.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DarkOakFenceGate.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MangroveFenceGate.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.IronBars.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Lantern.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Ladder.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Barrel.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Bookshelf.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Carpet.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.FlowerPot.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Lodestone.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.StoneStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CobblestoneStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.StoneBricksStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SmoothStoneStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AndesiteStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GraniteStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DioriteStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.TuffStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BasaltStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BlackstoneStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedTuffStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DeepslateStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SandstoneStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.RedSandstoneStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BrickBlockStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MudBricksStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.TuffBricksStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OakPlanksStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BirchPlanksStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.JunglePlanksStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SprucePlanksStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.StoneSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CobblestoneSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.StoneBricksSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SmoothStoneSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AndesiteSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GraniteSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DioriteSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.TuffSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BasaltSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BlackstoneSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedTuffSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DeepslateSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SandstoneSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.RedSandstoneSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BrickBlockSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MudBricksSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.TuffBricksSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.OakPlanksSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BirchPlanksSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.JunglePlanksSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SprucePlanksSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.StoneWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CobblestoneWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.StoneBricksWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.AndesiteWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GraniteWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DioriteWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.TuffWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BasaltWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BlackstoneWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedGraniteWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedDioriteWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedTuffWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedBasaltWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DeepslateWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DeepslateBricksWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.SandstoneWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.RedSandstoneWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.BrickBlockWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MudBricksWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.TuffBricksWall.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.WoodenPick.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CopperPick.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.IronPick.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GoldPick.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DiamondPick.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.NeptuniumPick.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.WoodenAxe.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CopperAxe.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.IronAxe.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GoldAxe.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.DiamondAxe.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.NeptuniumAxe.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.WoodenWhacker.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.CopperWhacker.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.IronWhacker.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.WoodenHoe.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.GoldBar.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.IronBar.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Diamond.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.NeptuniumBar.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Bucket.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.WaterBucket.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.WheatSlop.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.PumpkinSoup.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.MelonSmoothie.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Player.isFuel(), "!isFuel");
      assertFalse(ObjectTypes.Fragment.isFuel(), "!isFuel");
    }

    {
      assertTrue(ObjectTypes.Player.isPlayer(), "isPlayer");
      assertFalse(ObjectTypes.Null.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Air.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Water.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Lava.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Stone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Bedrock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Deepslate.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Granite.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Tuff.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Calcite.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Basalt.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SmoothBasalt.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Andesite.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Diorite.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Cobblestone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MossyCobblestone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Obsidian.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Dripstone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Blackstone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CobbledDeepslate.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Amethyst.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Glowstone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Grass.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Dirt.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Moss.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Podzol.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DirtPath.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Mud.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PackedMud.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Farmland.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.WetFarmland.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Snow.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Ice.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.UnrevealedOre.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CoalOre.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CopperOre.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.IronOre.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GoldOre.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DiamondOre.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.NeptuniumOre.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Gravel.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Sand.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.RedSand.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Sandstone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.RedSandstone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Clay.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AnyTerracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Terracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BrownTerracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OrangeTerracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.WhiteTerracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.LightGrayTerracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.YellowTerracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.RedTerracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.LightBlueTerracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CyanTerracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BlackTerracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PurpleTerracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BlueTerracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MagentaTerracotta.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AnyLog.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OakLog.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BirchLog.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.JungleLog.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SakuraLog.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AcaciaLog.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SpruceLog.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DarkOakLog.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MangroveLog.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AnyLeaf.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OakLeaf.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BirchLeaf.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.JungleLeaf.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SakuraLeaf.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SpruceLeaf.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AcaciaLeaf.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DarkOakLeaf.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AzaleaLeaf.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MangroveLeaf.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MangroveRoots.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AzaleaFlower.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BellFlower.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DandelionFlower.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DaylilyFlower.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.LilacFlower.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.RoseFlower.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.FireFlower.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MorninggloryFlower.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PeonyFlower.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Ultraviolet.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SunFlower.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.FlyTrap.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.FescueGrass.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SwitchGrass.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.VinesBush.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.IvyVine.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.HempBush.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Coral.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SeaAnemone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Algae.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.HornCoralBlock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.FireCoralBlock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.TubeCoralBlock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BubbleCoralBlock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BrainCoralBlock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SpiderWeb.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Bone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GoldenMushroom.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.RedMushroom.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CoffeeBush.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.StrawberryBush.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.RaspberryBush.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Wheat.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CottonBush.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Pumpkin.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Melon.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.RedMushroomBlock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BrownMushroomBlock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MushroomStem.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BambooBush.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Cactus.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AnyPlank.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OakPlanks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BirchPlanks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.JunglePlanks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SakuraPlanks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SprucePlanks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AcaciaPlanks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DarkOakPlanks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MangrovePlanks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CopperBlock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.IronBlock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GoldBlock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DiamondBlock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.NeptuniumBlock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.WheatSeed.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PumpkinSeed.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MelonSeed.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OakSapling.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BirchSapling.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.JungleSapling.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SakuraSapling.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AcaciaSapling.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SpruceSapling.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DarkOakSapling.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MangroveSapling.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Furnace.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Workbench.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Powerstone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.ForceField.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Chest.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SpawnTile.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Bed.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.TextSign.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Torch.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Stonecutter.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.StoneBricks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.TuffBricks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DeepslateBricks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedAndesite.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedGranite.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedDiorite.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedTuff.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedBasalt.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedBlackstone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.ChiseledDeepslate.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.ChiseledSandstone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CrackedStoneBricks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CrackedTuffBricks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SmoothSandstone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SmoothRedSandstone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SmoothStone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Cotton.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CottonSeed.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Glass.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Brick.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BrickBlock.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MudBricks.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Paper.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Book.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Stick.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.RedDye.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.YellowDye.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BlueDye.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GreenDye.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.WhiteDye.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BlackDye.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BrownDye.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OrangeDye.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PinkDye.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.LimeDye.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CyanDye.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GrayDye.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PurpleDye.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.WhiteConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OrangeConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MagentaConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.YellowConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.LimeConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PinkConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GrayConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CyanConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PurpleConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BlueConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BrownConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GreenConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.RedConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BlackConcretePowder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.WhiteConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OrangeConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MagentaConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.LightBlueConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.YellowConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.LimeConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PinkConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GrayConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.LightGrayConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CyanConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PurpleConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BlueConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BrownConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GreenConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.RedConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BlackConcrete.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GlassPane.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OakDoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BirchDoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.JungleDoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SakuraDoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AcaciaDoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SpruceDoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DarkOakDoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MangroveDoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.IronDoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OakTrapdoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BirchTrapdoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.JungleTrapdoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SakuraTrapdoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SpruceTrapdoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MangroveTrapdoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.IronTrapdoor.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OakFence.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BirchFence.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.JungleFence.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SakuraFence.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AcaciaFence.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SpruceFence.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DarkOakFence.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MangroveFence.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OakFenceGate.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BirchFenceGate.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.JungleFenceGate.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SakuraFenceGate.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AcaciaFenceGate.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SpruceFenceGate.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DarkOakFenceGate.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MangroveFenceGate.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.IronBars.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Lantern.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Ladder.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Barrel.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Bookshelf.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Carpet.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.FlowerPot.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Lodestone.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.StoneStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CobblestoneStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.StoneBricksStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SmoothStoneStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AndesiteStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GraniteStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DioriteStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.TuffStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BasaltStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BlackstoneStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedTuffStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DeepslateStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SandstoneStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.RedSandstoneStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BrickBlockStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MudBricksStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.TuffBricksStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OakPlanksStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BirchPlanksStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.JunglePlanksStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SprucePlanksStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.StoneSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CobblestoneSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.StoneBricksSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SmoothStoneSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AndesiteSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GraniteSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DioriteSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.TuffSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BasaltSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BlackstoneSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedTuffSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DeepslateSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SandstoneSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.RedSandstoneSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BrickBlockSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MudBricksSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.TuffBricksSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.OakPlanksSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BirchPlanksSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.JunglePlanksSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SprucePlanksSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.StoneWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CobblestoneWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.StoneBricksWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.AndesiteWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GraniteWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DioriteWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.TuffWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BasaltWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BlackstoneWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedGraniteWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedDioriteWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedTuffWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedBasaltWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DeepslateWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DeepslateBricksWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.SandstoneWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.RedSandstoneWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.BrickBlockWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MudBricksWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.TuffBricksWall.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.WoodenPick.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CopperPick.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.IronPick.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GoldPick.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DiamondPick.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.NeptuniumPick.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.WoodenAxe.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CopperAxe.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.IronAxe.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GoldAxe.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.DiamondAxe.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.NeptuniumAxe.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.WoodenWhacker.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.CopperWhacker.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.IronWhacker.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.WoodenHoe.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.GoldBar.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.IronBar.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Diamond.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.NeptuniumBar.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Bucket.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.WaterBucket.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.WheatSlop.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.PumpkinSoup.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.MelonSmoothie.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Battery.isPlayer(), "!isPlayer");
      assertFalse(ObjectTypes.Fragment.isPlayer(), "!isPlayer");
    }

    {
      assertTrue(ObjectTypes.OakLeaf.hasExtraDrops(), "hasExtraDrops");
      assertTrue(ObjectTypes.BirchLeaf.hasExtraDrops(), "hasExtraDrops");
      assertTrue(ObjectTypes.JungleLeaf.hasExtraDrops(), "hasExtraDrops");
      assertTrue(ObjectTypes.SakuraLeaf.hasExtraDrops(), "hasExtraDrops");
      assertTrue(ObjectTypes.SpruceLeaf.hasExtraDrops(), "hasExtraDrops");
      assertTrue(ObjectTypes.AcaciaLeaf.hasExtraDrops(), "hasExtraDrops");
      assertTrue(ObjectTypes.DarkOakLeaf.hasExtraDrops(), "hasExtraDrops");
      assertTrue(ObjectTypes.MangroveLeaf.hasExtraDrops(), "hasExtraDrops");
      assertTrue(ObjectTypes.Wheat.hasExtraDrops(), "hasExtraDrops");
      assertTrue(ObjectTypes.Pumpkin.hasExtraDrops(), "hasExtraDrops");
      assertTrue(ObjectTypes.Melon.hasExtraDrops(), "hasExtraDrops");
      assertTrue(ObjectTypes.FescueGrass.hasExtraDrops(), "hasExtraDrops");
      assertTrue(ObjectTypes.SwitchGrass.hasExtraDrops(), "hasExtraDrops");
      assertTrue(ObjectTypes.CottonBush.hasExtraDrops(), "hasExtraDrops");
      assertFalse(ObjectTypes.Null.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Air.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Water.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Lava.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Stone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Bedrock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Deepslate.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Granite.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Tuff.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Calcite.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Basalt.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SmoothBasalt.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Andesite.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Diorite.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Cobblestone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MossyCobblestone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Obsidian.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Dripstone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Blackstone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CobbledDeepslate.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Amethyst.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Glowstone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Grass.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Dirt.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Moss.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Podzol.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DirtPath.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Mud.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PackedMud.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Farmland.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.WetFarmland.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Snow.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Ice.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.UnrevealedOre.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CoalOre.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CopperOre.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.IronOre.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GoldOre.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DiamondOre.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.NeptuniumOre.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Gravel.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Sand.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.RedSand.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Sandstone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.RedSandstone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Clay.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AnyTerracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Terracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BrownTerracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.OrangeTerracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.WhiteTerracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.LightGrayTerracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.YellowTerracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.RedTerracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.LightBlueTerracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CyanTerracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BlackTerracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PurpleTerracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BlueTerracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MagentaTerracotta.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AnyLog.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.OakLog.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BirchLog.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.JungleLog.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SakuraLog.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AcaciaLog.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SpruceLog.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DarkOakLog.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MangroveLog.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AnyLeaf.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AzaleaLeaf.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MangroveRoots.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MuddyMangroveRoots.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AzaleaFlower.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BellFlower.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DandelionFlower.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DaylilyFlower.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.LilacFlower.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.RoseFlower.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.FireFlower.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MorninggloryFlower.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PeonyFlower.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Ultraviolet.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SunFlower.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.FlyTrap.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.VinesBush.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.IvyVine.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.HempBush.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Coral.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SeaAnemone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Algae.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.HornCoralBlock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.FireCoralBlock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.TubeCoralBlock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BubbleCoralBlock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BrainCoralBlock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SpiderWeb.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Bone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GoldenMushroom.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.RedMushroom.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CoffeeBush.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.StrawberryBush.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.RaspberryBush.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.RedMushroomBlock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BrownMushroomBlock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MushroomStem.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BambooBush.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Cactus.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AnyPlank.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.OakPlanks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BirchPlanks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.JunglePlanks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SakuraPlanks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SprucePlanks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AcaciaPlanks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DarkOakPlanks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MangrovePlanks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CopperBlock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.IronBlock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GoldBlock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DiamondBlock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.NeptuniumBlock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.WheatSeed.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PumpkinSeed.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MelonSeed.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.OakSapling.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BirchSapling.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.JungleSapling.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SakuraSapling.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AcaciaSapling.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SpruceSapling.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DarkOakSapling.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MangroveSapling.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Furnace.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Workbench.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Powerstone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.ForceField.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Chest.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SpawnTile.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Bed.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.TextSign.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Torch.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Stonecutter.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.StoneBricks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.TuffBricks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DeepslateBricks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedAndesite.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedGranite.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedDiorite.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedTuff.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedBasalt.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedBlackstone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.ChiseledStoneBricks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.ChiseledTuffBricks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.ChiseledDeepslate.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.ChiseledSandstone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.ChiseledRedSandstone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CrackedStoneBricks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CrackedTuffBricks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SmoothSandstone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SmoothRedSandstone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SmoothStone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Cotton.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CottonSeed.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Glass.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Brick.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BrickBlock.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MudBricks.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Paper.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Book.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Stick.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.RedDye.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.YellowDye.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BlueDye.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GreenDye.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.WhiteDye.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BlackDye.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BrownDye.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.OrangeDye.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PinkDye.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.LimeDye.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CyanDye.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GrayDye.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PurpleDye.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.WhiteConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.OrangeConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MagentaConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.LightBlueConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.YellowConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.LimeConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PinkConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GrayConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.LightGrayConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CyanConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PurpleConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BlueConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BrownConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GreenConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.RedConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BlackConcretePowder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.WhiteConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.OrangeConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MagentaConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.LightBlueConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.YellowConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.LimeConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PinkConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GrayConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.LightGrayConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CyanConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PurpleConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BlueConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BrownConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GreenConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.RedConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BlackConcrete.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GlassPane.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.OakDoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BirchDoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.JungleDoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SakuraDoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AcaciaDoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SpruceDoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DarkOakDoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MangroveDoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.IronDoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.OakTrapdoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BirchTrapdoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.JungleTrapdoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SakuraTrapdoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AcaciaTrapdoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SpruceTrapdoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DarkOakTrapdoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MangroveTrapdoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.IronTrapdoor.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.OakFence.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BirchFence.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.JungleFence.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SakuraFence.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AcaciaFence.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SpruceFence.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DarkOakFence.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MangroveFence.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.OakFenceGate.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BirchFenceGate.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.JungleFenceGate.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SakuraFenceGate.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AcaciaFenceGate.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SpruceFenceGate.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DarkOakFenceGate.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MangroveFenceGate.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.IronBars.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Lantern.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Ladder.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Barrel.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Bookshelf.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Carpet.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.FlowerPot.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Lodestone.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.StoneStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CobblestoneStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.StoneBricksStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SmoothStoneStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AndesiteStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GraniteStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DioriteStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.TuffStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BasaltStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BlackstoneStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedGraniteStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedDioriteStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedTuffStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedBasaltStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DeepslateStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DeepslateBricksStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SandstoneStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.RedSandstoneStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BrickBlockStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MudBricksStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.TuffBricksStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.OakPlanksStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BirchPlanksStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.JunglePlanksStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SakuraPlanksStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SprucePlanksStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MangrovePlanksStairs.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.StoneSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CobblestoneSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.StoneBricksSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SmoothStoneSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AndesiteSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GraniteSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DioriteSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.TuffSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BasaltSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BlackstoneSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedGraniteSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedDioriteSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedTuffSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedBasaltSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DeepslateSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DeepslateBricksSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SandstoneSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.RedSandstoneSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BrickBlockSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MudBricksSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.TuffBricksSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.OakPlanksSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BirchPlanksSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.JunglePlanksSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SakuraPlanksSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SprucePlanksSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MangrovePlanksSlab.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.StoneWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CobblestoneWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MossyCobblestoneWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.StoneBricksWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.AndesiteWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GraniteWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DioriteWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.TuffWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BasaltWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BlackstoneWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedAndesiteWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedGraniteWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedDioriteWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedTuffWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedBasaltWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DeepslateWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CobbledDeepslateWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DeepslateBricksWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.SandstoneWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.RedSandstoneWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.BrickBlockWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MudBricksWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.TuffBricksWall.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.WoodenPick.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CopperPick.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.IronPick.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GoldPick.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DiamondPick.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.NeptuniumPick.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.WoodenAxe.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CopperAxe.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.IronAxe.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GoldAxe.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.DiamondAxe.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.NeptuniumAxe.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.WoodenWhacker.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.CopperWhacker.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.IronWhacker.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.WoodenHoe.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.GoldBar.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.IronBar.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Diamond.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.NeptuniumBar.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Bucket.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.WaterBucket.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.WheatSlop.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.PumpkinSoup.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.MelonSmoothie.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Battery.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Player.hasExtraDrops(), "!hasExtraDrops");
      assertFalse(ObjectTypes.Fragment.hasExtraDrops(), "!hasExtraDrops");
    }

    {
      assertTrue(ObjectTypes.OakLog.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.BirchLog.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.JungleLog.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.SakuraLog.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.AcaciaLog.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.SpruceLog.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.DarkOakLog.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.MangroveLog.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.OakLeaf.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.BirchLeaf.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.JungleLeaf.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.SakuraLeaf.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.SpruceLeaf.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.AcaciaLeaf.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.DarkOakLeaf.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.AzaleaLeaf.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.FloweringAzaleaLeaf.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.MangroveLeaf.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.MangroveRoots.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.MuddyMangroveRoots.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.OakPlanks.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.BirchPlanks.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.JunglePlanks.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.SakuraPlanks.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.SprucePlanks.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.AcaciaPlanks.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.DarkOakPlanks.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.MangrovePlanks.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.Pumpkin.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.Melon.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.RedMushroomBlock.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.BrownMushroomBlock.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.MushroomStem.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.BambooBush.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.Cactus.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.Chest.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.Workbench.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.SpawnTile.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.Bed.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.TextSign.hasAxeMultiplier(), "hasAxeMultiplier");
      assertTrue(ObjectTypes.Torch.hasAxeMultiplier(), "hasAxeMultiplier");
      assertFalse(ObjectTypes.Null.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Air.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Water.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Lava.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Stone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Bedrock.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Deepslate.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Granite.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Tuff.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Calcite.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Basalt.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SmoothBasalt.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Andesite.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Diorite.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Cobblestone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MossyCobblestone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Obsidian.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Dripstone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Blackstone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CobbledDeepslate.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Amethyst.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Glowstone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Grass.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Dirt.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Moss.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Podzol.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DirtPath.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Mud.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PackedMud.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Farmland.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.WetFarmland.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Snow.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Ice.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.UnrevealedOre.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CoalOre.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CopperOre.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.IronOre.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GoldOre.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DiamondOre.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.NeptuniumOre.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Gravel.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Sand.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.RedSand.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Sandstone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.RedSandstone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Clay.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AnyTerracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Terracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BrownTerracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.OrangeTerracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.WhiteTerracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.LightGrayTerracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.YellowTerracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.RedTerracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.LightBlueTerracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CyanTerracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BlackTerracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PurpleTerracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BlueTerracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MagentaTerracotta.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AnyLog.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AnyLeaf.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AzaleaFlower.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BellFlower.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DandelionFlower.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DaylilyFlower.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.LilacFlower.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.RoseFlower.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.FireFlower.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MorninggloryFlower.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PeonyFlower.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Ultraviolet.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SunFlower.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.FlyTrap.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.FescueGrass.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SwitchGrass.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.VinesBush.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.IvyVine.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.HempBush.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Coral.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SeaAnemone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Algae.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.HornCoralBlock.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.FireCoralBlock.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.TubeCoralBlock.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BubbleCoralBlock.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BrainCoralBlock.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SpiderWeb.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Bone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GoldenMushroom.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.RedMushroom.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CoffeeBush.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.StrawberryBush.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.RaspberryBush.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Wheat.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CottonBush.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AnyPlank.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CopperBlock.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.IronBlock.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GoldBlock.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DiamondBlock.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.NeptuniumBlock.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.WheatSeed.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PumpkinSeed.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MelonSeed.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.OakSapling.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BirchSapling.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.JungleSapling.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SakuraSapling.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AcaciaSapling.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SpruceSapling.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DarkOakSapling.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MangroveSapling.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Furnace.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Powerstone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.ForceField.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Stonecutter.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.StoneBricks.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.TuffBricks.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DeepslateBricks.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedAndesite.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedGranite.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedDiorite.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedTuff.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedBasalt.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedBlackstone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.ChiseledStoneBricks.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.ChiseledTuffBricks.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.ChiseledDeepslate.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.ChiseledSandstone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.ChiseledRedSandstone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CrackedStoneBricks.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CrackedTuffBricks.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SmoothSandstone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SmoothRedSandstone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SmoothStone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Cotton.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CottonSeed.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Glass.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Brick.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BrickBlock.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MudBricks.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Paper.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Book.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Stick.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.RedDye.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.YellowDye.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BlueDye.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GreenDye.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.WhiteDye.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BlackDye.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BrownDye.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.OrangeDye.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PinkDye.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.LimeDye.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CyanDye.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GrayDye.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PurpleDye.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.WhiteConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.OrangeConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MagentaConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.LightBlueConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.YellowConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.LimeConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PinkConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GrayConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.LightGrayConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CyanConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PurpleConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BlueConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BrownConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GreenConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.RedConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BlackConcretePowder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.WhiteConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.OrangeConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MagentaConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.LightBlueConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.YellowConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.LimeConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PinkConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GrayConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.LightGrayConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CyanConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PurpleConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BlueConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BrownConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GreenConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.RedConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BlackConcrete.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GlassPane.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.OakDoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BirchDoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.JungleDoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SakuraDoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AcaciaDoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SpruceDoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DarkOakDoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MangroveDoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.IronDoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.OakTrapdoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BirchTrapdoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.JungleTrapdoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SakuraTrapdoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AcaciaTrapdoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SpruceTrapdoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DarkOakTrapdoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MangroveTrapdoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.IronTrapdoor.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.OakFence.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BirchFence.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.JungleFence.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SakuraFence.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AcaciaFence.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SpruceFence.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DarkOakFence.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MangroveFence.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.OakFenceGate.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BirchFenceGate.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.JungleFenceGate.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SakuraFenceGate.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AcaciaFenceGate.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SpruceFenceGate.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DarkOakFenceGate.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MangroveFenceGate.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.IronBars.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Lantern.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Ladder.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Barrel.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Bookshelf.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Carpet.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.FlowerPot.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Lodestone.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.StoneStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CobblestoneStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.StoneBricksStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SmoothStoneStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AndesiteStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GraniteStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DioriteStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.TuffStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BasaltStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BlackstoneStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedGraniteStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedDioriteStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedTuffStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedBasaltStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DeepslateStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DeepslateBricksStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SandstoneStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.RedSandstoneStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BrickBlockStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MudBricksStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.TuffBricksStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.OakPlanksStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BirchPlanksStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.JunglePlanksStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SakuraPlanksStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SprucePlanksStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MangrovePlanksStairs.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.StoneSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CobblestoneSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.StoneBricksSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SmoothStoneSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AndesiteSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GraniteSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DioriteSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.TuffSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BasaltSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BlackstoneSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedGraniteSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedDioriteSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedTuffSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedBasaltSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DeepslateSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DeepslateBricksSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SandstoneSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.RedSandstoneSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BrickBlockSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MudBricksSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.TuffBricksSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.OakPlanksSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BirchPlanksSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.JunglePlanksSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SakuraPlanksSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SprucePlanksSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MangrovePlanksSlab.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.StoneWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CobblestoneWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MossyCobblestoneWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.StoneBricksWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.AndesiteWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GraniteWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DioriteWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.TuffWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BasaltWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BlackstoneWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedAndesiteWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedGraniteWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedDioriteWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedTuffWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedBasaltWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DeepslateWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CobbledDeepslateWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DeepslateBricksWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.SandstoneWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.RedSandstoneWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.BrickBlockWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MudBricksWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.TuffBricksWall.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.WoodenPick.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CopperPick.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.IronPick.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GoldPick.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DiamondPick.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.NeptuniumPick.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.WoodenAxe.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CopperAxe.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.IronAxe.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GoldAxe.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.DiamondAxe.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.NeptuniumAxe.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.WoodenWhacker.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.CopperWhacker.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.IronWhacker.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.WoodenHoe.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.GoldBar.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.IronBar.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Diamond.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.NeptuniumBar.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Bucket.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.WaterBucket.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.WheatSlop.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.PumpkinSoup.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.MelonSmoothie.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Battery.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Player.hasAxeMultiplier(), "!hasAxeMultiplier");
      assertFalse(ObjectTypes.Fragment.hasAxeMultiplier(), "!hasAxeMultiplier");
    }

    {
      assertTrue(ObjectTypes.CoalOre.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.CopperOre.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.IronOre.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.GoldOre.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.DiamondOre.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.NeptuniumOre.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Amethyst.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Glowstone.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Stone.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Deepslate.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Granite.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Tuff.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Calcite.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Basalt.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.SmoothBasalt.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Andesite.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Diorite.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Cobblestone.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.MossyCobblestone.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Obsidian.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Dripstone.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Blackstone.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.CobbledDeepslate.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Terracotta.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.BrownTerracotta.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.OrangeTerracotta.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.WhiteTerracotta.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.LightGrayTerracotta.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.YellowTerracotta.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.RedTerracotta.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.LightBlueTerracotta.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.CyanTerracotta.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.BlackTerracotta.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.PurpleTerracotta.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.BlueTerracotta.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.MagentaTerracotta.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.CopperBlock.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.IronBlock.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.GoldBlock.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.DiamondBlock.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.NeptuniumBlock.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Powerstone.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.Furnace.hasPickMultiplier(), "hasPickMultiplier");
      assertTrue(ObjectTypes.ForceField.hasPickMultiplier(), "hasPickMultiplier");
      assertFalse(ObjectTypes.Null.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Air.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Water.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Lava.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Bedrock.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Grass.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Dirt.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Moss.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Podzol.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DirtPath.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Mud.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PackedMud.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Farmland.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.WetFarmland.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Snow.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Ice.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.UnrevealedOre.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Gravel.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Sand.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.RedSand.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Sandstone.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.RedSandstone.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Clay.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AnyTerracotta.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AnyLog.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.OakLog.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BirchLog.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.JungleLog.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SakuraLog.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AcaciaLog.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SpruceLog.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DarkOakLog.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MangroveLog.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AnyLeaf.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.OakLeaf.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BirchLeaf.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.JungleLeaf.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SakuraLeaf.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SpruceLeaf.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AcaciaLeaf.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DarkOakLeaf.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AzaleaLeaf.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MangroveLeaf.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MangroveRoots.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MuddyMangroveRoots.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AzaleaFlower.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BellFlower.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DandelionFlower.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DaylilyFlower.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.LilacFlower.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.RoseFlower.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.FireFlower.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MorninggloryFlower.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PeonyFlower.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Ultraviolet.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SunFlower.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.FlyTrap.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.FescueGrass.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SwitchGrass.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.VinesBush.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.IvyVine.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.HempBush.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Coral.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SeaAnemone.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Algae.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.HornCoralBlock.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.FireCoralBlock.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.TubeCoralBlock.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BubbleCoralBlock.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BrainCoralBlock.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SpiderWeb.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Bone.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GoldenMushroom.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.RedMushroom.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CoffeeBush.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.StrawberryBush.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.RaspberryBush.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Wheat.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CottonBush.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Pumpkin.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Melon.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.RedMushroomBlock.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BrownMushroomBlock.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MushroomStem.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BambooBush.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Cactus.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AnyPlank.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.OakPlanks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BirchPlanks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.JunglePlanks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SakuraPlanks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SprucePlanks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AcaciaPlanks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DarkOakPlanks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MangrovePlanks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.WheatSeed.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PumpkinSeed.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MelonSeed.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.OakSapling.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BirchSapling.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.JungleSapling.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SakuraSapling.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AcaciaSapling.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SpruceSapling.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DarkOakSapling.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MangroveSapling.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Workbench.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Chest.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SpawnTile.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Bed.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.TextSign.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Torch.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Stonecutter.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.StoneBricks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.TuffBricks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DeepslateBricks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedAndesite.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedGranite.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedDiorite.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedTuff.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedBasalt.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedBlackstone.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.ChiseledStoneBricks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.ChiseledTuffBricks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.ChiseledDeepslate.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.ChiseledSandstone.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.ChiseledRedSandstone.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CrackedStoneBricks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CrackedTuffBricks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SmoothSandstone.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SmoothRedSandstone.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SmoothStone.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Cotton.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CottonSeed.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Glass.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Brick.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BrickBlock.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MudBricks.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Paper.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Book.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Stick.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.RedDye.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.YellowDye.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BlueDye.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GreenDye.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.WhiteDye.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BlackDye.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BrownDye.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.OrangeDye.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PinkDye.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.LimeDye.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CyanDye.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GrayDye.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PurpleDye.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.WhiteConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.OrangeConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MagentaConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.LightBlueConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.YellowConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.LimeConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PinkConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GrayConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.LightGrayConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CyanConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PurpleConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BlueConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BrownConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GreenConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.RedConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BlackConcretePowder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.WhiteConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.OrangeConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MagentaConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.LightBlueConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.YellowConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.LimeConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PinkConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GrayConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.LightGrayConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CyanConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PurpleConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BlueConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BrownConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GreenConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.RedConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BlackConcrete.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GlassPane.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.OakDoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BirchDoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.JungleDoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SakuraDoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AcaciaDoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SpruceDoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DarkOakDoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MangroveDoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.IronDoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.OakTrapdoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BirchTrapdoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.JungleTrapdoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SakuraTrapdoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AcaciaTrapdoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SpruceTrapdoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DarkOakTrapdoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MangroveTrapdoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.IronTrapdoor.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.OakFence.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BirchFence.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.JungleFence.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SakuraFence.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AcaciaFence.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SpruceFence.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DarkOakFence.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MangroveFence.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.OakFenceGate.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BirchFenceGate.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.JungleFenceGate.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SakuraFenceGate.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AcaciaFenceGate.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SpruceFenceGate.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DarkOakFenceGate.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MangroveFenceGate.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.IronBars.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Lantern.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Ladder.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Barrel.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Bookshelf.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Carpet.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.FlowerPot.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Lodestone.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.StoneStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CobblestoneStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.StoneBricksStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SmoothStoneStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AndesiteStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GraniteStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DioriteStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.TuffStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BasaltStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BlackstoneStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedGraniteStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedDioriteStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedTuffStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedBasaltStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DeepslateStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DeepslateBricksStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SandstoneStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.RedSandstoneStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BrickBlockStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MudBricksStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.TuffBricksStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.OakPlanksStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BirchPlanksStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.JunglePlanksStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SakuraPlanksStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SprucePlanksStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MangrovePlanksStairs.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.StoneSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CobblestoneSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.StoneBricksSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SmoothStoneSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AndesiteSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GraniteSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DioriteSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.TuffSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BasaltSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BlackstoneSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedGraniteSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedDioriteSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedTuffSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedBasaltSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DeepslateSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DeepslateBricksSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SandstoneSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.RedSandstoneSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BrickBlockSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MudBricksSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.TuffBricksSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.OakPlanksSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BirchPlanksSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.JunglePlanksSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SakuraPlanksSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SprucePlanksSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MangrovePlanksSlab.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.StoneWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CobblestoneWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MossyCobblestoneWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.StoneBricksWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.AndesiteWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GraniteWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DioriteWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.TuffWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BasaltWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BlackstoneWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedAndesiteWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedGraniteWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedDioriteWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedTuffWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedBasaltWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DeepslateWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CobbledDeepslateWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DeepslateBricksWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.SandstoneWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.RedSandstoneWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.BrickBlockWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MudBricksWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.TuffBricksWall.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.WoodenPick.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CopperPick.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.IronPick.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GoldPick.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DiamondPick.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.NeptuniumPick.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.WoodenAxe.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CopperAxe.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.IronAxe.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GoldAxe.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.DiamondAxe.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.NeptuniumAxe.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.WoodenWhacker.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.CopperWhacker.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.IronWhacker.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.WoodenHoe.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.GoldBar.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.IronBar.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Diamond.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.NeptuniumBar.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Bucket.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.WaterBucket.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.WheatSlop.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.PumpkinSoup.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.MelonSmoothie.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Battery.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Player.hasPickMultiplier(), "!hasPickMultiplier");
      assertFalse(ObjectTypes.Fragment.hasPickMultiplier(), "!hasPickMultiplier");
    }

    {
      assertTrue(ObjectTypes.WoodenPick.isWoodenTool(), "isWoodenTool");
      assertTrue(ObjectTypes.WoodenAxe.isWoodenTool(), "isWoodenTool");
      assertTrue(ObjectTypes.WoodenWhacker.isWoodenTool(), "isWoodenTool");
      assertTrue(ObjectTypes.WoodenHoe.isWoodenTool(), "isWoodenTool");
      assertFalse(ObjectTypes.Null.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Air.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Water.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Lava.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Stone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Bedrock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Deepslate.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Granite.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Tuff.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Calcite.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Basalt.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SmoothBasalt.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Andesite.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Diorite.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Cobblestone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MossyCobblestone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Obsidian.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Dripstone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Blackstone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CobbledDeepslate.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Amethyst.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Glowstone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Grass.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Dirt.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Moss.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Podzol.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DirtPath.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Mud.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PackedMud.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Farmland.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.WetFarmland.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Snow.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Ice.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.UnrevealedOre.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CoalOre.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CopperOre.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.IronOre.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GoldOre.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DiamondOre.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.NeptuniumOre.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Gravel.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Sand.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.RedSand.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Sandstone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.RedSandstone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Clay.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AnyTerracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Terracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BrownTerracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OrangeTerracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.WhiteTerracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.LightGrayTerracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.YellowTerracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.RedTerracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.LightBlueTerracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CyanTerracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BlackTerracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PurpleTerracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BlueTerracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MagentaTerracotta.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AnyLog.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OakLog.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BirchLog.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.JungleLog.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SakuraLog.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AcaciaLog.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SpruceLog.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DarkOakLog.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MangroveLog.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AnyLeaf.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OakLeaf.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BirchLeaf.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.JungleLeaf.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SakuraLeaf.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SpruceLeaf.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AcaciaLeaf.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DarkOakLeaf.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AzaleaLeaf.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MangroveLeaf.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MangroveRoots.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AzaleaFlower.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BellFlower.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DandelionFlower.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DaylilyFlower.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.LilacFlower.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.RoseFlower.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.FireFlower.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MorninggloryFlower.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PeonyFlower.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Ultraviolet.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SunFlower.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.FlyTrap.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.FescueGrass.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SwitchGrass.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.VinesBush.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.IvyVine.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.HempBush.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Coral.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SeaAnemone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Algae.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.HornCoralBlock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.FireCoralBlock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.TubeCoralBlock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BubbleCoralBlock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BrainCoralBlock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SpiderWeb.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Bone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GoldenMushroom.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.RedMushroom.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CoffeeBush.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.StrawberryBush.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.RaspberryBush.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Wheat.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CottonBush.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Pumpkin.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Melon.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.RedMushroomBlock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BrownMushroomBlock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MushroomStem.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BambooBush.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Cactus.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AnyPlank.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OakPlanks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BirchPlanks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.JunglePlanks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SakuraPlanks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SprucePlanks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AcaciaPlanks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DarkOakPlanks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MangrovePlanks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CopperBlock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.IronBlock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GoldBlock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DiamondBlock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.NeptuniumBlock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.WheatSeed.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PumpkinSeed.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MelonSeed.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OakSapling.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BirchSapling.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.JungleSapling.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SakuraSapling.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AcaciaSapling.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SpruceSapling.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DarkOakSapling.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MangroveSapling.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Furnace.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Workbench.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Powerstone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.ForceField.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Chest.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SpawnTile.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Bed.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.TextSign.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Torch.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Stonecutter.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.StoneBricks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.TuffBricks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DeepslateBricks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedAndesite.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedGranite.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedDiorite.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedTuff.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedBasalt.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedBlackstone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.ChiseledDeepslate.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.ChiseledSandstone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CrackedStoneBricks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CrackedTuffBricks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SmoothSandstone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SmoothRedSandstone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SmoothStone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Cotton.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CottonSeed.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Glass.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Brick.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BrickBlock.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MudBricks.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Paper.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Book.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Stick.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.RedDye.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.YellowDye.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BlueDye.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GreenDye.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.WhiteDye.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BlackDye.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BrownDye.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OrangeDye.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PinkDye.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.LimeDye.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CyanDye.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GrayDye.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PurpleDye.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.WhiteConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OrangeConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MagentaConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.YellowConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.LimeConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PinkConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GrayConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CyanConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PurpleConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BlueConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BrownConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GreenConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.RedConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BlackConcretePowder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.WhiteConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OrangeConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MagentaConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.LightBlueConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.YellowConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.LimeConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PinkConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GrayConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.LightGrayConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CyanConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PurpleConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BlueConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BrownConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GreenConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.RedConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BlackConcrete.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GlassPane.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OakDoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BirchDoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.JungleDoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SakuraDoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AcaciaDoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SpruceDoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DarkOakDoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MangroveDoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.IronDoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OakTrapdoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BirchTrapdoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.JungleTrapdoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SakuraTrapdoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SpruceTrapdoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MangroveTrapdoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.IronTrapdoor.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OakFence.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BirchFence.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.JungleFence.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SakuraFence.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AcaciaFence.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SpruceFence.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DarkOakFence.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MangroveFence.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OakFenceGate.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BirchFenceGate.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.JungleFenceGate.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SakuraFenceGate.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AcaciaFenceGate.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SpruceFenceGate.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DarkOakFenceGate.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MangroveFenceGate.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.IronBars.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Lantern.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Ladder.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Barrel.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Bookshelf.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Carpet.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.FlowerPot.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Lodestone.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.StoneStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CobblestoneStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.StoneBricksStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SmoothStoneStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AndesiteStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GraniteStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DioriteStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.TuffStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BasaltStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BlackstoneStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedTuffStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DeepslateStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SandstoneStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.RedSandstoneStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BrickBlockStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MudBricksStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.TuffBricksStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OakPlanksStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BirchPlanksStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.JunglePlanksStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SprucePlanksStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.StoneSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CobblestoneSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.StoneBricksSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SmoothStoneSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AndesiteSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GraniteSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DioriteSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.TuffSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BasaltSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BlackstoneSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedTuffSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DeepslateSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SandstoneSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.RedSandstoneSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BrickBlockSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MudBricksSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.TuffBricksSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.OakPlanksSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BirchPlanksSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.JunglePlanksSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SprucePlanksSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.StoneWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CobblestoneWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.StoneBricksWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.AndesiteWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GraniteWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DioriteWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.TuffWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BasaltWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BlackstoneWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedGraniteWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedDioriteWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedTuffWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedBasaltWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DeepslateWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DeepslateBricksWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.SandstoneWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.RedSandstoneWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.BrickBlockWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MudBricksWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.TuffBricksWall.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CopperPick.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.IronPick.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GoldPick.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DiamondPick.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.NeptuniumPick.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CopperAxe.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.IronAxe.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GoldAxe.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.DiamondAxe.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.NeptuniumAxe.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.CopperWhacker.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.IronWhacker.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.GoldBar.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.IronBar.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Diamond.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.NeptuniumBar.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Bucket.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.WaterBucket.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.WheatSlop.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.PumpkinSoup.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.MelonSmoothie.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Battery.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Player.isWoodenTool(), "!isWoodenTool");
      assertFalse(ObjectTypes.Fragment.isWoodenTool(), "!isWoodenTool");
    }

    {
      assertTrue(ObjectTypes.Air.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.Water.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.AzaleaFlower.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.BellFlower.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.DandelionFlower.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.DaylilyFlower.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.LilacFlower.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.RoseFlower.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.FireFlower.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.MorninggloryFlower.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.PeonyFlower.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.Ultraviolet.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.SunFlower.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.FlyTrap.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.WheatSeed.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.PumpkinSeed.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.MelonSeed.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.OakSapling.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.BirchSapling.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.JungleSapling.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.SakuraSapling.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.AcaciaSapling.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.SpruceSapling.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.DarkOakSapling.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.MangroveSapling.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.FescueGrass.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.SwitchGrass.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.VinesBush.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.IvyVine.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.HempBush.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.GoldenMushroom.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.RedMushroom.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.CoffeeBush.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.StrawberryBush.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.RaspberryBush.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.Wheat.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.CottonBush.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.Coral.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.SeaAnemone.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.Algae.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.Torch.isPassThrough(), "isPassThrough");
      assertTrue(ObjectTypes.BambooBush.isPassThrough(), "isPassThrough");
      assertFalse(ObjectTypes.Null.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Lava.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Stone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Bedrock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Deepslate.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Granite.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Tuff.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Calcite.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Basalt.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SmoothBasalt.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Andesite.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Diorite.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Cobblestone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MossyCobblestone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Obsidian.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Dripstone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Blackstone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CobbledDeepslate.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Amethyst.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Glowstone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Grass.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Dirt.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Moss.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Podzol.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DirtPath.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Mud.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PackedMud.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Farmland.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.WetFarmland.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Snow.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Ice.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.UnrevealedOre.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CoalOre.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CopperOre.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.IronOre.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GoldOre.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DiamondOre.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.NeptuniumOre.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Gravel.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Sand.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.RedSand.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Sandstone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.RedSandstone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Clay.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AnyTerracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Terracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BrownTerracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.OrangeTerracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.WhiteTerracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.LightGrayTerracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.YellowTerracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.RedTerracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.LightBlueTerracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CyanTerracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BlackTerracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PurpleTerracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BlueTerracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MagentaTerracotta.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AnyLog.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.OakLog.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BirchLog.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.JungleLog.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SakuraLog.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AcaciaLog.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SpruceLog.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DarkOakLog.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MangroveLog.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AnyLeaf.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.OakLeaf.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BirchLeaf.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.JungleLeaf.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SakuraLeaf.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SpruceLeaf.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AcaciaLeaf.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DarkOakLeaf.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AzaleaLeaf.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MangroveLeaf.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MangroveRoots.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.HornCoralBlock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.FireCoralBlock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.TubeCoralBlock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BubbleCoralBlock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BrainCoralBlock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SpiderWeb.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Bone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Pumpkin.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Melon.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.RedMushroomBlock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BrownMushroomBlock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MushroomStem.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Cactus.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AnyPlank.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.OakPlanks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BirchPlanks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.JunglePlanks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SakuraPlanks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SprucePlanks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AcaciaPlanks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DarkOakPlanks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MangrovePlanks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CopperBlock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.IronBlock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GoldBlock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DiamondBlock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.NeptuniumBlock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Furnace.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Workbench.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Powerstone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.ForceField.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Chest.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SpawnTile.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Bed.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.TextSign.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Stonecutter.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.StoneBricks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.TuffBricks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DeepslateBricks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedAndesite.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedGranite.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedDiorite.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedTuff.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedBasalt.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedBlackstone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.ChiseledDeepslate.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.ChiseledSandstone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CrackedStoneBricks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CrackedTuffBricks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SmoothSandstone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SmoothRedSandstone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SmoothStone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Cotton.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CottonSeed.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Glass.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Brick.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BrickBlock.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MudBricks.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Paper.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Book.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Stick.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.RedDye.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.YellowDye.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BlueDye.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GreenDye.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.WhiteDye.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BlackDye.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BrownDye.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.OrangeDye.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PinkDye.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.LimeDye.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CyanDye.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GrayDye.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PurpleDye.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.WhiteConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.OrangeConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MagentaConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.YellowConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.LimeConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PinkConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GrayConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CyanConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PurpleConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BlueConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BrownConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GreenConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.RedConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BlackConcretePowder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.WhiteConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.OrangeConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MagentaConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.LightBlueConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.YellowConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.LimeConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PinkConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GrayConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.LightGrayConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CyanConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PurpleConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BlueConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BrownConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GreenConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.RedConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BlackConcrete.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GlassPane.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.OakDoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BirchDoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.JungleDoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SakuraDoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AcaciaDoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SpruceDoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DarkOakDoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MangroveDoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.IronDoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.OakTrapdoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BirchTrapdoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.JungleTrapdoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SakuraTrapdoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SpruceTrapdoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MangroveTrapdoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.IronTrapdoor.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.OakFence.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BirchFence.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.JungleFence.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SakuraFence.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AcaciaFence.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SpruceFence.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DarkOakFence.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MangroveFence.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.OakFenceGate.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BirchFenceGate.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.JungleFenceGate.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SakuraFenceGate.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AcaciaFenceGate.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SpruceFenceGate.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DarkOakFenceGate.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MangroveFenceGate.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.IronBars.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Lantern.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Ladder.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Barrel.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Bookshelf.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Carpet.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.FlowerPot.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Lodestone.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.StoneStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CobblestoneStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.StoneBricksStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SmoothStoneStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AndesiteStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GraniteStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DioriteStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.TuffStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BasaltStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BlackstoneStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedTuffStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DeepslateStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SandstoneStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.RedSandstoneStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BrickBlockStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MudBricksStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.TuffBricksStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.OakPlanksStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BirchPlanksStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.JunglePlanksStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SprucePlanksStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.StoneSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CobblestoneSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.StoneBricksSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SmoothStoneSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AndesiteSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GraniteSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DioriteSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.TuffSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BasaltSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BlackstoneSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedTuffSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DeepslateSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SandstoneSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.RedSandstoneSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BrickBlockSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MudBricksSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.TuffBricksSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.OakPlanksSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BirchPlanksSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.JunglePlanksSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SprucePlanksSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.StoneWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CobblestoneWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.StoneBricksWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.AndesiteWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GraniteWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DioriteWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.TuffWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BasaltWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BlackstoneWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedGraniteWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedDioriteWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedTuffWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedBasaltWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DeepslateWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DeepslateBricksWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.SandstoneWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.RedSandstoneWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.BrickBlockWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MudBricksWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.TuffBricksWall.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.WoodenPick.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CopperPick.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.IronPick.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GoldPick.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DiamondPick.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.NeptuniumPick.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.WoodenAxe.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CopperAxe.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.IronAxe.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GoldAxe.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.DiamondAxe.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.NeptuniumAxe.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.WoodenWhacker.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.CopperWhacker.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.IronWhacker.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.WoodenHoe.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.GoldBar.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.IronBar.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Diamond.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.NeptuniumBar.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Bucket.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.WaterBucket.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.WheatSlop.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.PumpkinSoup.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.MelonSmoothie.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Battery.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Player.isPassThrough(), "!isPassThrough");
      assertFalse(ObjectTypes.Fragment.isPassThrough(), "!isPassThrough");
    }

    {
      assertTrue(ObjectTypes.WheatSeed.isGrowable(), "isGrowable");
      assertTrue(ObjectTypes.PumpkinSeed.isGrowable(), "isGrowable");
      assertTrue(ObjectTypes.MelonSeed.isGrowable(), "isGrowable");
      assertTrue(ObjectTypes.OakSapling.isGrowable(), "isGrowable");
      assertTrue(ObjectTypes.BirchSapling.isGrowable(), "isGrowable");
      assertTrue(ObjectTypes.JungleSapling.isGrowable(), "isGrowable");
      assertTrue(ObjectTypes.SakuraSapling.isGrowable(), "isGrowable");
      assertTrue(ObjectTypes.AcaciaSapling.isGrowable(), "isGrowable");
      assertTrue(ObjectTypes.SpruceSapling.isGrowable(), "isGrowable");
      assertTrue(ObjectTypes.DarkOakSapling.isGrowable(), "isGrowable");
      assertTrue(ObjectTypes.MangroveSapling.isGrowable(), "isGrowable");
      assertFalse(ObjectTypes.Null.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Air.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Water.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Lava.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Stone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Bedrock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Deepslate.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Granite.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Tuff.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Calcite.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Basalt.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SmoothBasalt.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Andesite.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Diorite.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Cobblestone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MossyCobblestone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Obsidian.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Dripstone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Blackstone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CobbledDeepslate.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Amethyst.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Glowstone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Grass.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Dirt.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Moss.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Podzol.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DirtPath.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Mud.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PackedMud.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Farmland.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.WetFarmland.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Snow.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Ice.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.UnrevealedOre.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CoalOre.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CopperOre.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.IronOre.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GoldOre.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DiamondOre.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.NeptuniumOre.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Gravel.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Sand.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.RedSand.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Sandstone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.RedSandstone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Clay.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AnyTerracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Terracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BrownTerracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.OrangeTerracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.WhiteTerracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.LightGrayTerracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.YellowTerracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.RedTerracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.LightBlueTerracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CyanTerracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BlackTerracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PurpleTerracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BlueTerracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MagentaTerracotta.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AnyLog.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.OakLog.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BirchLog.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.JungleLog.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SakuraLog.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AcaciaLog.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SpruceLog.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DarkOakLog.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MangroveLog.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AnyLeaf.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.OakLeaf.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BirchLeaf.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.JungleLeaf.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SakuraLeaf.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SpruceLeaf.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AcaciaLeaf.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DarkOakLeaf.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AzaleaLeaf.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MangroveLeaf.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MangroveRoots.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AzaleaFlower.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BellFlower.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DandelionFlower.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DaylilyFlower.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.LilacFlower.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.RoseFlower.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.FireFlower.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MorninggloryFlower.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PeonyFlower.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Ultraviolet.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SunFlower.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.FlyTrap.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.FescueGrass.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SwitchGrass.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.VinesBush.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.IvyVine.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.HempBush.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Coral.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SeaAnemone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Algae.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.HornCoralBlock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.FireCoralBlock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.TubeCoralBlock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BubbleCoralBlock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BrainCoralBlock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SpiderWeb.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Bone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GoldenMushroom.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.RedMushroom.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CoffeeBush.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.StrawberryBush.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.RaspberryBush.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Wheat.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CottonBush.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Pumpkin.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Melon.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.RedMushroomBlock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BrownMushroomBlock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MushroomStem.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BambooBush.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Cactus.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AnyPlank.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.OakPlanks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BirchPlanks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.JunglePlanks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SakuraPlanks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SprucePlanks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AcaciaPlanks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DarkOakPlanks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MangrovePlanks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CopperBlock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.IronBlock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GoldBlock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DiamondBlock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.NeptuniumBlock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Furnace.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Workbench.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Powerstone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.ForceField.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Chest.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SpawnTile.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Bed.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.TextSign.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Torch.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Stonecutter.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.StoneBricks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.TuffBricks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DeepslateBricks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedAndesite.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedGranite.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedDiorite.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedTuff.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedBasalt.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedBlackstone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.ChiseledDeepslate.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.ChiseledSandstone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CrackedStoneBricks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CrackedTuffBricks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SmoothSandstone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SmoothRedSandstone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SmoothStone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Cotton.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CottonSeed.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Glass.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Brick.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BrickBlock.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MudBricks.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Paper.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Book.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Stick.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.RedDye.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.YellowDye.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BlueDye.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GreenDye.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.WhiteDye.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BlackDye.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BrownDye.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.OrangeDye.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PinkDye.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.LimeDye.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CyanDye.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GrayDye.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PurpleDye.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.WhiteConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.OrangeConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MagentaConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.YellowConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.LimeConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PinkConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GrayConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CyanConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PurpleConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BlueConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BrownConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GreenConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.RedConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BlackConcretePowder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.WhiteConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.OrangeConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MagentaConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.LightBlueConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.YellowConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.LimeConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PinkConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GrayConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.LightGrayConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CyanConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PurpleConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BlueConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BrownConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GreenConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.RedConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BlackConcrete.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GlassPane.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.OakDoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BirchDoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.JungleDoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SakuraDoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AcaciaDoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SpruceDoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DarkOakDoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MangroveDoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.IronDoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.OakTrapdoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BirchTrapdoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.JungleTrapdoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SakuraTrapdoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SpruceTrapdoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MangroveTrapdoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.IronTrapdoor.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.OakFence.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BirchFence.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.JungleFence.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SakuraFence.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AcaciaFence.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SpruceFence.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DarkOakFence.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MangroveFence.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.OakFenceGate.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BirchFenceGate.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.JungleFenceGate.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SakuraFenceGate.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AcaciaFenceGate.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SpruceFenceGate.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DarkOakFenceGate.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MangroveFenceGate.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.IronBars.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Lantern.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Ladder.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Barrel.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Bookshelf.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Carpet.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.FlowerPot.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Lodestone.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.StoneStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CobblestoneStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.StoneBricksStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SmoothStoneStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AndesiteStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GraniteStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DioriteStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.TuffStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BasaltStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BlackstoneStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedTuffStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DeepslateStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SandstoneStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.RedSandstoneStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BrickBlockStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MudBricksStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.TuffBricksStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.OakPlanksStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BirchPlanksStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.JunglePlanksStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SprucePlanksStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.StoneSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CobblestoneSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.StoneBricksSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SmoothStoneSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AndesiteSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GraniteSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DioriteSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.TuffSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BasaltSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BlackstoneSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedTuffSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DeepslateSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SandstoneSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.RedSandstoneSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BrickBlockSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MudBricksSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.TuffBricksSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.OakPlanksSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BirchPlanksSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.JunglePlanksSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SprucePlanksSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.StoneWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CobblestoneWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.StoneBricksWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.AndesiteWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GraniteWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DioriteWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.TuffWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BasaltWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BlackstoneWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedGraniteWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedDioriteWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedTuffWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedBasaltWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DeepslateWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DeepslateBricksWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.SandstoneWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.RedSandstoneWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.BrickBlockWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MudBricksWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.TuffBricksWall.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.WoodenPick.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CopperPick.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.IronPick.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GoldPick.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DiamondPick.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.NeptuniumPick.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.WoodenAxe.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CopperAxe.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.IronAxe.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GoldAxe.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.DiamondAxe.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.NeptuniumAxe.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.WoodenWhacker.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.CopperWhacker.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.IronWhacker.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.WoodenHoe.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.GoldBar.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.IronBar.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Diamond.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.NeptuniumBar.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Bucket.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.WaterBucket.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.WheatSlop.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.PumpkinSoup.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.MelonSmoothie.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Battery.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Player.isGrowable(), "!isGrowable");
      assertFalse(ObjectTypes.Fragment.isGrowable(), "!isGrowable");
    }

    {
      assertTrue(ObjectTypes.Wheat.isLandbound(), "isLandbound");
      assertTrue(ObjectTypes.WheatSeed.isLandbound(), "isLandbound");
      assertTrue(ObjectTypes.PumpkinSeed.isLandbound(), "isLandbound");
      assertTrue(ObjectTypes.MelonSeed.isLandbound(), "isLandbound");
      assertTrue(ObjectTypes.OakSapling.isLandbound(), "isLandbound");
      assertTrue(ObjectTypes.BirchSapling.isLandbound(), "isLandbound");
      assertTrue(ObjectTypes.JungleSapling.isLandbound(), "isLandbound");
      assertTrue(ObjectTypes.SakuraSapling.isLandbound(), "isLandbound");
      assertTrue(ObjectTypes.AcaciaSapling.isLandbound(), "isLandbound");
      assertTrue(ObjectTypes.SpruceSapling.isLandbound(), "isLandbound");
      assertTrue(ObjectTypes.DarkOakSapling.isLandbound(), "isLandbound");
      assertTrue(ObjectTypes.MangroveSapling.isLandbound(), "isLandbound");
      assertFalse(ObjectTypes.Null.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Air.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Water.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Lava.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Stone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Bedrock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Deepslate.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Granite.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Tuff.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Calcite.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Basalt.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SmoothBasalt.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Andesite.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Diorite.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Cobblestone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MossyCobblestone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Obsidian.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Dripstone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Blackstone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CobbledDeepslate.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Amethyst.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Glowstone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Grass.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Dirt.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Moss.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Podzol.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DirtPath.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Mud.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PackedMud.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Farmland.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.WetFarmland.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Snow.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Ice.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.UnrevealedOre.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CoalOre.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CopperOre.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.IronOre.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GoldOre.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DiamondOre.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.NeptuniumOre.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Gravel.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Sand.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.RedSand.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Sandstone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.RedSandstone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Clay.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AnyTerracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Terracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BrownTerracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.OrangeTerracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.WhiteTerracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.LightGrayTerracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.YellowTerracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.RedTerracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.LightBlueTerracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CyanTerracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BlackTerracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PurpleTerracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BlueTerracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MagentaTerracotta.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AnyLog.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.OakLog.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BirchLog.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.JungleLog.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SakuraLog.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AcaciaLog.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SpruceLog.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DarkOakLog.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MangroveLog.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AnyLeaf.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.OakLeaf.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BirchLeaf.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.JungleLeaf.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SakuraLeaf.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SpruceLeaf.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AcaciaLeaf.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DarkOakLeaf.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AzaleaLeaf.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MangroveLeaf.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MangroveRoots.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AzaleaFlower.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BellFlower.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DandelionFlower.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DaylilyFlower.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.LilacFlower.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.RoseFlower.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.FireFlower.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MorninggloryFlower.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PeonyFlower.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Ultraviolet.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SunFlower.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.FlyTrap.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.FescueGrass.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SwitchGrass.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.VinesBush.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.IvyVine.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.HempBush.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Coral.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SeaAnemone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Algae.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.HornCoralBlock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.FireCoralBlock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.TubeCoralBlock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BubbleCoralBlock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BrainCoralBlock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SpiderWeb.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Bone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GoldenMushroom.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.RedMushroom.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CoffeeBush.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.StrawberryBush.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.RaspberryBush.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CottonBush.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Pumpkin.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Melon.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.RedMushroomBlock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BrownMushroomBlock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MushroomStem.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BambooBush.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Cactus.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AnyPlank.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.OakPlanks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BirchPlanks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.JunglePlanks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SakuraPlanks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SprucePlanks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AcaciaPlanks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DarkOakPlanks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MangrovePlanks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CopperBlock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.IronBlock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GoldBlock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DiamondBlock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.NeptuniumBlock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Furnace.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Workbench.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Powerstone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.ForceField.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Chest.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SpawnTile.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Bed.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.TextSign.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Torch.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Stonecutter.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.StoneBricks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.TuffBricks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DeepslateBricks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedAndesite.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedGranite.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedDiorite.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedTuff.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedBasalt.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedBlackstone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.ChiseledDeepslate.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.ChiseledSandstone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CrackedStoneBricks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CrackedTuffBricks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SmoothSandstone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SmoothRedSandstone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SmoothStone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Cotton.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CottonSeed.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Glass.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Brick.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BrickBlock.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MudBricks.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Paper.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Book.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Stick.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.RedDye.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.YellowDye.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BlueDye.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GreenDye.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.WhiteDye.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BlackDye.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BrownDye.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.OrangeDye.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PinkDye.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.LimeDye.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CyanDye.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GrayDye.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PurpleDye.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.WhiteConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.OrangeConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MagentaConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.YellowConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.LimeConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PinkConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GrayConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CyanConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PurpleConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BlueConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BrownConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GreenConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.RedConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BlackConcretePowder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.WhiteConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.OrangeConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MagentaConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.LightBlueConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.YellowConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.LimeConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PinkConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GrayConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.LightGrayConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CyanConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PurpleConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BlueConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BrownConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GreenConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.RedConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BlackConcrete.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GlassPane.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.OakDoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BirchDoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.JungleDoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SakuraDoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AcaciaDoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SpruceDoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DarkOakDoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MangroveDoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.IronDoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.OakTrapdoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BirchTrapdoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.JungleTrapdoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SakuraTrapdoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SpruceTrapdoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MangroveTrapdoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.IronTrapdoor.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.OakFence.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BirchFence.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.JungleFence.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SakuraFence.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AcaciaFence.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SpruceFence.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DarkOakFence.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MangroveFence.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.OakFenceGate.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BirchFenceGate.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.JungleFenceGate.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SakuraFenceGate.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AcaciaFenceGate.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SpruceFenceGate.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DarkOakFenceGate.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MangroveFenceGate.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.IronBars.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Lantern.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Ladder.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Barrel.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Bookshelf.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Carpet.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.FlowerPot.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Lodestone.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.StoneStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CobblestoneStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.StoneBricksStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SmoothStoneStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AndesiteStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GraniteStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DioriteStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.TuffStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BasaltStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BlackstoneStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedTuffStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DeepslateStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SandstoneStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.RedSandstoneStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BrickBlockStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MudBricksStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.TuffBricksStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.OakPlanksStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BirchPlanksStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.JunglePlanksStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SprucePlanksStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.StoneSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CobblestoneSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.StoneBricksSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SmoothStoneSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AndesiteSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GraniteSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DioriteSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.TuffSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BasaltSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BlackstoneSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedTuffSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DeepslateSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SandstoneSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.RedSandstoneSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BrickBlockSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MudBricksSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.TuffBricksSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.OakPlanksSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BirchPlanksSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.JunglePlanksSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SprucePlanksSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.StoneWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CobblestoneWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.StoneBricksWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.AndesiteWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GraniteWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DioriteWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.TuffWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BasaltWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BlackstoneWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedGraniteWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedDioriteWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedTuffWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedBasaltWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DeepslateWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DeepslateBricksWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.SandstoneWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.RedSandstoneWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.BrickBlockWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MudBricksWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.TuffBricksWall.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.WoodenPick.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CopperPick.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.IronPick.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GoldPick.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DiamondPick.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.NeptuniumPick.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.WoodenAxe.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CopperAxe.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.IronAxe.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GoldAxe.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.DiamondAxe.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.NeptuniumAxe.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.WoodenWhacker.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.CopperWhacker.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.IronWhacker.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.WoodenHoe.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.GoldBar.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.IronBar.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Diamond.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.NeptuniumBar.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Bucket.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.WaterBucket.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.WheatSlop.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.PumpkinSoup.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.MelonSmoothie.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Battery.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Player.isLandbound(), "!isLandbound");
      assertFalse(ObjectTypes.Fragment.isLandbound(), "!isLandbound");
    }

    {
      assertTrue(ObjectTypes.WoodenPick.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.CopperPick.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.IronPick.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.GoldPick.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.DiamondPick.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.NeptuniumPick.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.WoodenAxe.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.CopperAxe.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.IronAxe.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.GoldAxe.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.DiamondAxe.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.NeptuniumAxe.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.WoodenWhacker.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.CopperWhacker.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.IronWhacker.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.WoodenHoe.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.Bucket.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.WaterBucket.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.ForceField.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.Bed.isUniqueObject(), "isUniqueObject");
      assertTrue(ObjectTypes.SpawnTile.isUniqueObject(), "isUniqueObject");
      assertFalse(ObjectTypes.Null.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Air.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Water.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Lava.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Stone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Bedrock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Deepslate.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Granite.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Tuff.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Calcite.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Basalt.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SmoothBasalt.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Andesite.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Diorite.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Cobblestone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MossyCobblestone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Obsidian.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Dripstone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Blackstone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CobbledDeepslate.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Amethyst.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Glowstone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Grass.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Dirt.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Moss.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Podzol.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DirtPath.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Mud.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PackedMud.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Farmland.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.WetFarmland.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Snow.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Ice.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.UnrevealedOre.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CoalOre.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CopperOre.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.IronOre.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GoldOre.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DiamondOre.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.NeptuniumOre.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Gravel.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Sand.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.RedSand.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Sandstone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.RedSandstone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Clay.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AnyTerracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Terracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BrownTerracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OrangeTerracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.WhiteTerracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.LightGrayTerracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.YellowTerracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.RedTerracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.LightBlueTerracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CyanTerracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BlackTerracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PurpleTerracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BlueTerracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MagentaTerracotta.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AnyLog.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OakLog.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BirchLog.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.JungleLog.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SakuraLog.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AcaciaLog.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SpruceLog.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DarkOakLog.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MangroveLog.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AnyLeaf.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OakLeaf.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BirchLeaf.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.JungleLeaf.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SakuraLeaf.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SpruceLeaf.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AcaciaLeaf.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DarkOakLeaf.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AzaleaLeaf.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MangroveLeaf.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MangroveRoots.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AzaleaFlower.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BellFlower.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DandelionFlower.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DaylilyFlower.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.LilacFlower.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.RoseFlower.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.FireFlower.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MorninggloryFlower.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PeonyFlower.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Ultraviolet.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SunFlower.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.FlyTrap.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.FescueGrass.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SwitchGrass.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.VinesBush.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.IvyVine.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.HempBush.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Coral.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SeaAnemone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Algae.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.HornCoralBlock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.FireCoralBlock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.TubeCoralBlock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BubbleCoralBlock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BrainCoralBlock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SpiderWeb.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Bone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GoldenMushroom.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.RedMushroom.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CoffeeBush.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.StrawberryBush.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.RaspberryBush.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Wheat.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CottonBush.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Pumpkin.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Melon.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.RedMushroomBlock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BrownMushroomBlock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MushroomStem.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BambooBush.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Cactus.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AnyPlank.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OakPlanks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BirchPlanks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.JunglePlanks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SakuraPlanks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SprucePlanks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AcaciaPlanks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DarkOakPlanks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MangrovePlanks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CopperBlock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.IronBlock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GoldBlock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DiamondBlock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.NeptuniumBlock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.WheatSeed.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PumpkinSeed.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MelonSeed.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OakSapling.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BirchSapling.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.JungleSapling.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SakuraSapling.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AcaciaSapling.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SpruceSapling.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DarkOakSapling.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MangroveSapling.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Furnace.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Workbench.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Powerstone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Chest.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.TextSign.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Torch.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Stonecutter.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.StoneBricks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.TuffBricks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DeepslateBricks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedAndesite.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedGranite.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedDiorite.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedTuff.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedBasalt.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedBlackstone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.ChiseledDeepslate.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.ChiseledSandstone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CrackedStoneBricks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CrackedTuffBricks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SmoothSandstone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SmoothRedSandstone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SmoothStone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Cotton.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CottonSeed.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Glass.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Brick.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BrickBlock.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MudBricks.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Paper.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Book.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Stick.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.RedDye.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.YellowDye.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BlueDye.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GreenDye.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.WhiteDye.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BlackDye.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BrownDye.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OrangeDye.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PinkDye.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.LimeDye.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CyanDye.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GrayDye.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PurpleDye.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.WhiteConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OrangeConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MagentaConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.YellowConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.LimeConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PinkConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GrayConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CyanConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PurpleConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BlueConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BrownConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GreenConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.RedConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BlackConcretePowder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.WhiteConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OrangeConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MagentaConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.LightBlueConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.YellowConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.LimeConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PinkConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GrayConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.LightGrayConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CyanConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PurpleConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BlueConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BrownConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GreenConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.RedConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BlackConcrete.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GlassPane.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OakDoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BirchDoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.JungleDoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SakuraDoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AcaciaDoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SpruceDoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DarkOakDoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MangroveDoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.IronDoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OakTrapdoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BirchTrapdoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.JungleTrapdoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SakuraTrapdoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SpruceTrapdoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MangroveTrapdoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.IronTrapdoor.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OakFence.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BirchFence.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.JungleFence.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SakuraFence.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AcaciaFence.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SpruceFence.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DarkOakFence.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MangroveFence.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OakFenceGate.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BirchFenceGate.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.JungleFenceGate.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SakuraFenceGate.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AcaciaFenceGate.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SpruceFenceGate.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DarkOakFenceGate.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MangroveFenceGate.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.IronBars.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Lantern.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Ladder.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Barrel.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Bookshelf.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Carpet.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.FlowerPot.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Lodestone.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.StoneStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CobblestoneStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.StoneBricksStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SmoothStoneStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AndesiteStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GraniteStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DioriteStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.TuffStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BasaltStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BlackstoneStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedTuffStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DeepslateStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SandstoneStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.RedSandstoneStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BrickBlockStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MudBricksStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.TuffBricksStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OakPlanksStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BirchPlanksStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.JunglePlanksStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SprucePlanksStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.StoneSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CobblestoneSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.StoneBricksSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SmoothStoneSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AndesiteSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GraniteSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DioriteSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.TuffSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BasaltSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BlackstoneSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedTuffSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DeepslateSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SandstoneSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.RedSandstoneSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BrickBlockSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MudBricksSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.TuffBricksSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.OakPlanksSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BirchPlanksSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.JunglePlanksSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SprucePlanksSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.StoneWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CobblestoneWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.StoneBricksWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.AndesiteWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GraniteWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DioriteWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.TuffWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BasaltWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BlackstoneWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedGraniteWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedDioriteWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedTuffWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedBasaltWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DeepslateWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.DeepslateBricksWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.SandstoneWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.RedSandstoneWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.BrickBlockWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MudBricksWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.TuffBricksWall.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.GoldBar.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.IronBar.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Diamond.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.NeptuniumBar.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.WheatSlop.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.PumpkinSoup.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.MelonSmoothie.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Battery.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Player.isUniqueObject(), "!isUniqueObject");
      assertFalse(ObjectTypes.Fragment.isUniqueObject(), "!isUniqueObject");
    }

    {
      assertTrue(ObjectTypes.WoodenPick.isTool(), "isTool");
      assertTrue(ObjectTypes.CopperPick.isTool(), "isTool");
      assertTrue(ObjectTypes.IronPick.isTool(), "isTool");
      assertTrue(ObjectTypes.GoldPick.isTool(), "isTool");
      assertTrue(ObjectTypes.DiamondPick.isTool(), "isTool");
      assertTrue(ObjectTypes.NeptuniumPick.isTool(), "isTool");
      assertTrue(ObjectTypes.WoodenAxe.isTool(), "isTool");
      assertTrue(ObjectTypes.CopperAxe.isTool(), "isTool");
      assertTrue(ObjectTypes.IronAxe.isTool(), "isTool");
      assertTrue(ObjectTypes.GoldAxe.isTool(), "isTool");
      assertTrue(ObjectTypes.DiamondAxe.isTool(), "isTool");
      assertTrue(ObjectTypes.NeptuniumAxe.isTool(), "isTool");
      assertTrue(ObjectTypes.WoodenWhacker.isTool(), "isTool");
      assertTrue(ObjectTypes.CopperWhacker.isTool(), "isTool");
      assertTrue(ObjectTypes.IronWhacker.isTool(), "isTool");
      assertTrue(ObjectTypes.WoodenHoe.isTool(), "isTool");
      assertFalse(ObjectTypes.Null.isTool(), "!isTool");
      assertFalse(ObjectTypes.Air.isTool(), "!isTool");
      assertFalse(ObjectTypes.Water.isTool(), "!isTool");
      assertFalse(ObjectTypes.Lava.isTool(), "!isTool");
      assertFalse(ObjectTypes.Stone.isTool(), "!isTool");
      assertFalse(ObjectTypes.Bedrock.isTool(), "!isTool");
      assertFalse(ObjectTypes.Deepslate.isTool(), "!isTool");
      assertFalse(ObjectTypes.Granite.isTool(), "!isTool");
      assertFalse(ObjectTypes.Tuff.isTool(), "!isTool");
      assertFalse(ObjectTypes.Calcite.isTool(), "!isTool");
      assertFalse(ObjectTypes.Basalt.isTool(), "!isTool");
      assertFalse(ObjectTypes.SmoothBasalt.isTool(), "!isTool");
      assertFalse(ObjectTypes.Andesite.isTool(), "!isTool");
      assertFalse(ObjectTypes.Diorite.isTool(), "!isTool");
      assertFalse(ObjectTypes.Cobblestone.isTool(), "!isTool");
      assertFalse(ObjectTypes.MossyCobblestone.isTool(), "!isTool");
      assertFalse(ObjectTypes.Obsidian.isTool(), "!isTool");
      assertFalse(ObjectTypes.Dripstone.isTool(), "!isTool");
      assertFalse(ObjectTypes.Blackstone.isTool(), "!isTool");
      assertFalse(ObjectTypes.CobbledDeepslate.isTool(), "!isTool");
      assertFalse(ObjectTypes.Amethyst.isTool(), "!isTool");
      assertFalse(ObjectTypes.Glowstone.isTool(), "!isTool");
      assertFalse(ObjectTypes.Grass.isTool(), "!isTool");
      assertFalse(ObjectTypes.Dirt.isTool(), "!isTool");
      assertFalse(ObjectTypes.Moss.isTool(), "!isTool");
      assertFalse(ObjectTypes.Podzol.isTool(), "!isTool");
      assertFalse(ObjectTypes.DirtPath.isTool(), "!isTool");
      assertFalse(ObjectTypes.Mud.isTool(), "!isTool");
      assertFalse(ObjectTypes.PackedMud.isTool(), "!isTool");
      assertFalse(ObjectTypes.Farmland.isTool(), "!isTool");
      assertFalse(ObjectTypes.WetFarmland.isTool(), "!isTool");
      assertFalse(ObjectTypes.Snow.isTool(), "!isTool");
      assertFalse(ObjectTypes.Ice.isTool(), "!isTool");
      assertFalse(ObjectTypes.UnrevealedOre.isTool(), "!isTool");
      assertFalse(ObjectTypes.CoalOre.isTool(), "!isTool");
      assertFalse(ObjectTypes.CopperOre.isTool(), "!isTool");
      assertFalse(ObjectTypes.IronOre.isTool(), "!isTool");
      assertFalse(ObjectTypes.GoldOre.isTool(), "!isTool");
      assertFalse(ObjectTypes.DiamondOre.isTool(), "!isTool");
      assertFalse(ObjectTypes.NeptuniumOre.isTool(), "!isTool");
      assertFalse(ObjectTypes.Gravel.isTool(), "!isTool");
      assertFalse(ObjectTypes.Sand.isTool(), "!isTool");
      assertFalse(ObjectTypes.RedSand.isTool(), "!isTool");
      assertFalse(ObjectTypes.Sandstone.isTool(), "!isTool");
      assertFalse(ObjectTypes.RedSandstone.isTool(), "!isTool");
      assertFalse(ObjectTypes.Clay.isTool(), "!isTool");
      assertFalse(ObjectTypes.AnyTerracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.Terracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.BrownTerracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.OrangeTerracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.WhiteTerracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.LightGrayTerracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.YellowTerracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.RedTerracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.LightBlueTerracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.CyanTerracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.BlackTerracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.PurpleTerracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.BlueTerracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.MagentaTerracotta.isTool(), "!isTool");
      assertFalse(ObjectTypes.AnyLog.isTool(), "!isTool");
      assertFalse(ObjectTypes.OakLog.isTool(), "!isTool");
      assertFalse(ObjectTypes.BirchLog.isTool(), "!isTool");
      assertFalse(ObjectTypes.JungleLog.isTool(), "!isTool");
      assertFalse(ObjectTypes.SakuraLog.isTool(), "!isTool");
      assertFalse(ObjectTypes.AcaciaLog.isTool(), "!isTool");
      assertFalse(ObjectTypes.SpruceLog.isTool(), "!isTool");
      assertFalse(ObjectTypes.DarkOakLog.isTool(), "!isTool");
      assertFalse(ObjectTypes.MangroveLog.isTool(), "!isTool");
      assertFalse(ObjectTypes.AnyLeaf.isTool(), "!isTool");
      assertFalse(ObjectTypes.OakLeaf.isTool(), "!isTool");
      assertFalse(ObjectTypes.BirchLeaf.isTool(), "!isTool");
      assertFalse(ObjectTypes.JungleLeaf.isTool(), "!isTool");
      assertFalse(ObjectTypes.SakuraLeaf.isTool(), "!isTool");
      assertFalse(ObjectTypes.SpruceLeaf.isTool(), "!isTool");
      assertFalse(ObjectTypes.AcaciaLeaf.isTool(), "!isTool");
      assertFalse(ObjectTypes.DarkOakLeaf.isTool(), "!isTool");
      assertFalse(ObjectTypes.AzaleaLeaf.isTool(), "!isTool");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isTool(), "!isTool");
      assertFalse(ObjectTypes.MangroveLeaf.isTool(), "!isTool");
      assertFalse(ObjectTypes.MangroveRoots.isTool(), "!isTool");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isTool(), "!isTool");
      assertFalse(ObjectTypes.AzaleaFlower.isTool(), "!isTool");
      assertFalse(ObjectTypes.BellFlower.isTool(), "!isTool");
      assertFalse(ObjectTypes.DandelionFlower.isTool(), "!isTool");
      assertFalse(ObjectTypes.DaylilyFlower.isTool(), "!isTool");
      assertFalse(ObjectTypes.LilacFlower.isTool(), "!isTool");
      assertFalse(ObjectTypes.RoseFlower.isTool(), "!isTool");
      assertFalse(ObjectTypes.FireFlower.isTool(), "!isTool");
      assertFalse(ObjectTypes.MorninggloryFlower.isTool(), "!isTool");
      assertFalse(ObjectTypes.PeonyFlower.isTool(), "!isTool");
      assertFalse(ObjectTypes.Ultraviolet.isTool(), "!isTool");
      assertFalse(ObjectTypes.SunFlower.isTool(), "!isTool");
      assertFalse(ObjectTypes.FlyTrap.isTool(), "!isTool");
      assertFalse(ObjectTypes.FescueGrass.isTool(), "!isTool");
      assertFalse(ObjectTypes.SwitchGrass.isTool(), "!isTool");
      assertFalse(ObjectTypes.VinesBush.isTool(), "!isTool");
      assertFalse(ObjectTypes.IvyVine.isTool(), "!isTool");
      assertFalse(ObjectTypes.HempBush.isTool(), "!isTool");
      assertFalse(ObjectTypes.Coral.isTool(), "!isTool");
      assertFalse(ObjectTypes.SeaAnemone.isTool(), "!isTool");
      assertFalse(ObjectTypes.Algae.isTool(), "!isTool");
      assertFalse(ObjectTypes.HornCoralBlock.isTool(), "!isTool");
      assertFalse(ObjectTypes.FireCoralBlock.isTool(), "!isTool");
      assertFalse(ObjectTypes.TubeCoralBlock.isTool(), "!isTool");
      assertFalse(ObjectTypes.BubbleCoralBlock.isTool(), "!isTool");
      assertFalse(ObjectTypes.BrainCoralBlock.isTool(), "!isTool");
      assertFalse(ObjectTypes.SpiderWeb.isTool(), "!isTool");
      assertFalse(ObjectTypes.Bone.isTool(), "!isTool");
      assertFalse(ObjectTypes.GoldenMushroom.isTool(), "!isTool");
      assertFalse(ObjectTypes.RedMushroom.isTool(), "!isTool");
      assertFalse(ObjectTypes.CoffeeBush.isTool(), "!isTool");
      assertFalse(ObjectTypes.StrawberryBush.isTool(), "!isTool");
      assertFalse(ObjectTypes.RaspberryBush.isTool(), "!isTool");
      assertFalse(ObjectTypes.Wheat.isTool(), "!isTool");
      assertFalse(ObjectTypes.CottonBush.isTool(), "!isTool");
      assertFalse(ObjectTypes.Pumpkin.isTool(), "!isTool");
      assertFalse(ObjectTypes.Melon.isTool(), "!isTool");
      assertFalse(ObjectTypes.RedMushroomBlock.isTool(), "!isTool");
      assertFalse(ObjectTypes.BrownMushroomBlock.isTool(), "!isTool");
      assertFalse(ObjectTypes.MushroomStem.isTool(), "!isTool");
      assertFalse(ObjectTypes.BambooBush.isTool(), "!isTool");
      assertFalse(ObjectTypes.Cactus.isTool(), "!isTool");
      assertFalse(ObjectTypes.AnyPlank.isTool(), "!isTool");
      assertFalse(ObjectTypes.OakPlanks.isTool(), "!isTool");
      assertFalse(ObjectTypes.BirchPlanks.isTool(), "!isTool");
      assertFalse(ObjectTypes.JunglePlanks.isTool(), "!isTool");
      assertFalse(ObjectTypes.SakuraPlanks.isTool(), "!isTool");
      assertFalse(ObjectTypes.SprucePlanks.isTool(), "!isTool");
      assertFalse(ObjectTypes.AcaciaPlanks.isTool(), "!isTool");
      assertFalse(ObjectTypes.DarkOakPlanks.isTool(), "!isTool");
      assertFalse(ObjectTypes.MangrovePlanks.isTool(), "!isTool");
      assertFalse(ObjectTypes.CopperBlock.isTool(), "!isTool");
      assertFalse(ObjectTypes.IronBlock.isTool(), "!isTool");
      assertFalse(ObjectTypes.GoldBlock.isTool(), "!isTool");
      assertFalse(ObjectTypes.DiamondBlock.isTool(), "!isTool");
      assertFalse(ObjectTypes.NeptuniumBlock.isTool(), "!isTool");
      assertFalse(ObjectTypes.WheatSeed.isTool(), "!isTool");
      assertFalse(ObjectTypes.PumpkinSeed.isTool(), "!isTool");
      assertFalse(ObjectTypes.MelonSeed.isTool(), "!isTool");
      assertFalse(ObjectTypes.OakSapling.isTool(), "!isTool");
      assertFalse(ObjectTypes.BirchSapling.isTool(), "!isTool");
      assertFalse(ObjectTypes.JungleSapling.isTool(), "!isTool");
      assertFalse(ObjectTypes.SakuraSapling.isTool(), "!isTool");
      assertFalse(ObjectTypes.AcaciaSapling.isTool(), "!isTool");
      assertFalse(ObjectTypes.SpruceSapling.isTool(), "!isTool");
      assertFalse(ObjectTypes.DarkOakSapling.isTool(), "!isTool");
      assertFalse(ObjectTypes.MangroveSapling.isTool(), "!isTool");
      assertFalse(ObjectTypes.Furnace.isTool(), "!isTool");
      assertFalse(ObjectTypes.Workbench.isTool(), "!isTool");
      assertFalse(ObjectTypes.Powerstone.isTool(), "!isTool");
      assertFalse(ObjectTypes.ForceField.isTool(), "!isTool");
      assertFalse(ObjectTypes.Chest.isTool(), "!isTool");
      assertFalse(ObjectTypes.SpawnTile.isTool(), "!isTool");
      assertFalse(ObjectTypes.Bed.isTool(), "!isTool");
      assertFalse(ObjectTypes.TextSign.isTool(), "!isTool");
      assertFalse(ObjectTypes.Torch.isTool(), "!isTool");
      assertFalse(ObjectTypes.Stonecutter.isTool(), "!isTool");
      assertFalse(ObjectTypes.StoneBricks.isTool(), "!isTool");
      assertFalse(ObjectTypes.TuffBricks.isTool(), "!isTool");
      assertFalse(ObjectTypes.DeepslateBricks.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedAndesite.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedGranite.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedDiorite.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedTuff.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedBasalt.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedBlackstone.isTool(), "!isTool");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isTool(), "!isTool");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isTool(), "!isTool");
      assertFalse(ObjectTypes.ChiseledDeepslate.isTool(), "!isTool");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isTool(), "!isTool");
      assertFalse(ObjectTypes.ChiseledSandstone.isTool(), "!isTool");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isTool(), "!isTool");
      assertFalse(ObjectTypes.CrackedStoneBricks.isTool(), "!isTool");
      assertFalse(ObjectTypes.CrackedTuffBricks.isTool(), "!isTool");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isTool(), "!isTool");
      assertFalse(ObjectTypes.SmoothSandstone.isTool(), "!isTool");
      assertFalse(ObjectTypes.SmoothRedSandstone.isTool(), "!isTool");
      assertFalse(ObjectTypes.SmoothStone.isTool(), "!isTool");
      assertFalse(ObjectTypes.Cotton.isTool(), "!isTool");
      assertFalse(ObjectTypes.CottonSeed.isTool(), "!isTool");
      assertFalse(ObjectTypes.Glass.isTool(), "!isTool");
      assertFalse(ObjectTypes.Brick.isTool(), "!isTool");
      assertFalse(ObjectTypes.BrickBlock.isTool(), "!isTool");
      assertFalse(ObjectTypes.MudBricks.isTool(), "!isTool");
      assertFalse(ObjectTypes.Paper.isTool(), "!isTool");
      assertFalse(ObjectTypes.Book.isTool(), "!isTool");
      assertFalse(ObjectTypes.Stick.isTool(), "!isTool");
      assertFalse(ObjectTypes.RedDye.isTool(), "!isTool");
      assertFalse(ObjectTypes.YellowDye.isTool(), "!isTool");
      assertFalse(ObjectTypes.BlueDye.isTool(), "!isTool");
      assertFalse(ObjectTypes.GreenDye.isTool(), "!isTool");
      assertFalse(ObjectTypes.WhiteDye.isTool(), "!isTool");
      assertFalse(ObjectTypes.BlackDye.isTool(), "!isTool");
      assertFalse(ObjectTypes.BrownDye.isTool(), "!isTool");
      assertFalse(ObjectTypes.OrangeDye.isTool(), "!isTool");
      assertFalse(ObjectTypes.PinkDye.isTool(), "!isTool");
      assertFalse(ObjectTypes.LimeDye.isTool(), "!isTool");
      assertFalse(ObjectTypes.CyanDye.isTool(), "!isTool");
      assertFalse(ObjectTypes.GrayDye.isTool(), "!isTool");
      assertFalse(ObjectTypes.PurpleDye.isTool(), "!isTool");
      assertFalse(ObjectTypes.WhiteConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.OrangeConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.MagentaConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.YellowConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.LimeConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.PinkConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.GrayConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.CyanConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.PurpleConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.BlueConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.BrownConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.GreenConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.RedConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.BlackConcretePowder.isTool(), "!isTool");
      assertFalse(ObjectTypes.WhiteConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.OrangeConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.MagentaConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.LightBlueConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.YellowConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.LimeConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.PinkConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.GrayConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.LightGrayConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.CyanConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.PurpleConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.BlueConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.BrownConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.GreenConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.RedConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.BlackConcrete.isTool(), "!isTool");
      assertFalse(ObjectTypes.GlassPane.isTool(), "!isTool");
      assertFalse(ObjectTypes.OakDoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.BirchDoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.JungleDoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.SakuraDoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.AcaciaDoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.SpruceDoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.DarkOakDoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.MangroveDoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.IronDoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.OakTrapdoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.BirchTrapdoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.JungleTrapdoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.SakuraTrapdoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.SpruceTrapdoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.MangroveTrapdoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.IronTrapdoor.isTool(), "!isTool");
      assertFalse(ObjectTypes.OakFence.isTool(), "!isTool");
      assertFalse(ObjectTypes.BirchFence.isTool(), "!isTool");
      assertFalse(ObjectTypes.JungleFence.isTool(), "!isTool");
      assertFalse(ObjectTypes.SakuraFence.isTool(), "!isTool");
      assertFalse(ObjectTypes.AcaciaFence.isTool(), "!isTool");
      assertFalse(ObjectTypes.SpruceFence.isTool(), "!isTool");
      assertFalse(ObjectTypes.DarkOakFence.isTool(), "!isTool");
      assertFalse(ObjectTypes.MangroveFence.isTool(), "!isTool");
      assertFalse(ObjectTypes.OakFenceGate.isTool(), "!isTool");
      assertFalse(ObjectTypes.BirchFenceGate.isTool(), "!isTool");
      assertFalse(ObjectTypes.JungleFenceGate.isTool(), "!isTool");
      assertFalse(ObjectTypes.SakuraFenceGate.isTool(), "!isTool");
      assertFalse(ObjectTypes.AcaciaFenceGate.isTool(), "!isTool");
      assertFalse(ObjectTypes.SpruceFenceGate.isTool(), "!isTool");
      assertFalse(ObjectTypes.DarkOakFenceGate.isTool(), "!isTool");
      assertFalse(ObjectTypes.MangroveFenceGate.isTool(), "!isTool");
      assertFalse(ObjectTypes.IronBars.isTool(), "!isTool");
      assertFalse(ObjectTypes.Lantern.isTool(), "!isTool");
      assertFalse(ObjectTypes.Ladder.isTool(), "!isTool");
      assertFalse(ObjectTypes.Barrel.isTool(), "!isTool");
      assertFalse(ObjectTypes.Bookshelf.isTool(), "!isTool");
      assertFalse(ObjectTypes.Carpet.isTool(), "!isTool");
      assertFalse(ObjectTypes.FlowerPot.isTool(), "!isTool");
      assertFalse(ObjectTypes.Lodestone.isTool(), "!isTool");
      assertFalse(ObjectTypes.StoneStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.CobblestoneStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.StoneBricksStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.SmoothStoneStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.AndesiteStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.GraniteStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.DioriteStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.TuffStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.BasaltStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.BlackstoneStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedTuffStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.DeepslateStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.SandstoneStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.RedSandstoneStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.BrickBlockStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.MudBricksStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.TuffBricksStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.OakPlanksStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.BirchPlanksStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.JunglePlanksStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.SprucePlanksStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isTool(), "!isTool");
      assertFalse(ObjectTypes.StoneSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.CobblestoneSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.StoneBricksSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.SmoothStoneSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.AndesiteSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.GraniteSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.DioriteSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.TuffSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.BasaltSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.BlackstoneSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedTuffSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.DeepslateSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.SandstoneSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.RedSandstoneSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.BrickBlockSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.MudBricksSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.TuffBricksSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.OakPlanksSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.BirchPlanksSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.JunglePlanksSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.SprucePlanksSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isTool(), "!isTool");
      assertFalse(ObjectTypes.StoneWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.CobblestoneWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.StoneBricksWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.AndesiteWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.GraniteWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.DioriteWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.TuffWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.BasaltWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.BlackstoneWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedGraniteWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedDioriteWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedTuffWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedBasaltWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.DeepslateWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.DeepslateBricksWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.SandstoneWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.RedSandstoneWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.BrickBlockWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.MudBricksWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.TuffBricksWall.isTool(), "!isTool");
      assertFalse(ObjectTypes.GoldBar.isTool(), "!isTool");
      assertFalse(ObjectTypes.IronBar.isTool(), "!isTool");
      assertFalse(ObjectTypes.Diamond.isTool(), "!isTool");
      assertFalse(ObjectTypes.NeptuniumBar.isTool(), "!isTool");
      assertFalse(ObjectTypes.Bucket.isTool(), "!isTool");
      assertFalse(ObjectTypes.WaterBucket.isTool(), "!isTool");
      assertFalse(ObjectTypes.WheatSlop.isTool(), "!isTool");
      assertFalse(ObjectTypes.PumpkinSoup.isTool(), "!isTool");
      assertFalse(ObjectTypes.MelonSmoothie.isTool(), "!isTool");
      assertFalse(ObjectTypes.Battery.isTool(), "!isTool");
      assertFalse(ObjectTypes.Player.isTool(), "!isTool");
      assertFalse(ObjectTypes.Fragment.isTool(), "!isTool");
    }

    {
      assertTrue(ObjectTypes.Dirt.isTillable(), "isTillable");
      assertTrue(ObjectTypes.Grass.isTillable(), "isTillable");
      assertFalse(ObjectTypes.Null.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Air.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Water.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Lava.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Stone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Bedrock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Deepslate.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Granite.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Tuff.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Calcite.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Basalt.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SmoothBasalt.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Andesite.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Diorite.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Cobblestone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MossyCobblestone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Obsidian.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Dripstone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Blackstone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CobbledDeepslate.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Amethyst.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Glowstone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Moss.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Podzol.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DirtPath.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Mud.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PackedMud.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Farmland.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.WetFarmland.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Snow.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Ice.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.UnrevealedOre.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CoalOre.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CopperOre.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.IronOre.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GoldOre.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DiamondOre.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.NeptuniumOre.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Gravel.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Sand.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.RedSand.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Sandstone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.RedSandstone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Clay.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AnyTerracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Terracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BrownTerracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OrangeTerracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.WhiteTerracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.LightGrayTerracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.YellowTerracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.RedTerracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.LightBlueTerracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CyanTerracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BlackTerracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PurpleTerracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BlueTerracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MagentaTerracotta.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AnyLog.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OakLog.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BirchLog.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.JungleLog.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SakuraLog.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AcaciaLog.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SpruceLog.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DarkOakLog.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MangroveLog.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AnyLeaf.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OakLeaf.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BirchLeaf.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.JungleLeaf.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SakuraLeaf.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SpruceLeaf.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AcaciaLeaf.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DarkOakLeaf.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AzaleaLeaf.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MangroveLeaf.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MangroveRoots.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AzaleaFlower.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BellFlower.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DandelionFlower.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DaylilyFlower.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.LilacFlower.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.RoseFlower.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.FireFlower.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MorninggloryFlower.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PeonyFlower.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Ultraviolet.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SunFlower.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.FlyTrap.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.FescueGrass.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SwitchGrass.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.VinesBush.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.IvyVine.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.HempBush.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Coral.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SeaAnemone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Algae.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.HornCoralBlock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.FireCoralBlock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.TubeCoralBlock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BubbleCoralBlock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BrainCoralBlock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SpiderWeb.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Bone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GoldenMushroom.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.RedMushroom.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CoffeeBush.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.StrawberryBush.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.RaspberryBush.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Wheat.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CottonBush.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Pumpkin.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Melon.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.RedMushroomBlock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BrownMushroomBlock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MushroomStem.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BambooBush.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Cactus.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AnyPlank.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OakPlanks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BirchPlanks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.JunglePlanks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SakuraPlanks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SprucePlanks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AcaciaPlanks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DarkOakPlanks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MangrovePlanks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CopperBlock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.IronBlock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GoldBlock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DiamondBlock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.NeptuniumBlock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.WheatSeed.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PumpkinSeed.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MelonSeed.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OakSapling.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BirchSapling.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.JungleSapling.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SakuraSapling.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AcaciaSapling.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SpruceSapling.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DarkOakSapling.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MangroveSapling.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Furnace.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Workbench.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Powerstone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.ForceField.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Chest.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SpawnTile.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Bed.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.TextSign.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Torch.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Stonecutter.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.StoneBricks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.TuffBricks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DeepslateBricks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedAndesite.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedGranite.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedDiorite.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedTuff.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedBasalt.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedBlackstone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.ChiseledDeepslate.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.ChiseledSandstone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CrackedStoneBricks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CrackedTuffBricks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SmoothSandstone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SmoothRedSandstone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SmoothStone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Cotton.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CottonSeed.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Glass.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Brick.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BrickBlock.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MudBricks.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Paper.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Book.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Stick.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.RedDye.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.YellowDye.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BlueDye.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GreenDye.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.WhiteDye.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BlackDye.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BrownDye.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OrangeDye.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PinkDye.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.LimeDye.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CyanDye.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GrayDye.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PurpleDye.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.WhiteConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OrangeConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MagentaConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.YellowConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.LimeConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PinkConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GrayConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CyanConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PurpleConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BlueConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BrownConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GreenConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.RedConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BlackConcretePowder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.WhiteConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OrangeConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MagentaConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.LightBlueConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.YellowConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.LimeConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PinkConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GrayConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.LightGrayConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CyanConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PurpleConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BlueConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BrownConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GreenConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.RedConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BlackConcrete.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GlassPane.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OakDoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BirchDoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.JungleDoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SakuraDoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AcaciaDoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SpruceDoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DarkOakDoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MangroveDoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.IronDoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OakTrapdoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BirchTrapdoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.JungleTrapdoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SakuraTrapdoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SpruceTrapdoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MangroveTrapdoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.IronTrapdoor.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OakFence.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BirchFence.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.JungleFence.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SakuraFence.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AcaciaFence.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SpruceFence.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DarkOakFence.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MangroveFence.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OakFenceGate.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BirchFenceGate.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.JungleFenceGate.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SakuraFenceGate.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AcaciaFenceGate.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SpruceFenceGate.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DarkOakFenceGate.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MangroveFenceGate.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.IronBars.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Lantern.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Ladder.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Barrel.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Bookshelf.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Carpet.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.FlowerPot.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Lodestone.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.StoneStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CobblestoneStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.StoneBricksStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SmoothStoneStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AndesiteStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GraniteStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DioriteStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.TuffStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BasaltStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BlackstoneStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedTuffStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DeepslateStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SandstoneStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.RedSandstoneStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BrickBlockStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MudBricksStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.TuffBricksStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OakPlanksStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BirchPlanksStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.JunglePlanksStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SprucePlanksStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.StoneSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CobblestoneSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.StoneBricksSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SmoothStoneSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AndesiteSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GraniteSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DioriteSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.TuffSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BasaltSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BlackstoneSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedTuffSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DeepslateSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SandstoneSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.RedSandstoneSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BrickBlockSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MudBricksSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.TuffBricksSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.OakPlanksSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BirchPlanksSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.JunglePlanksSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SprucePlanksSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.StoneWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CobblestoneWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.StoneBricksWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.AndesiteWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GraniteWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DioriteWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.TuffWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BasaltWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BlackstoneWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedGraniteWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedDioriteWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedTuffWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedBasaltWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DeepslateWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DeepslateBricksWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.SandstoneWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.RedSandstoneWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.BrickBlockWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MudBricksWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.TuffBricksWall.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.WoodenPick.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CopperPick.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.IronPick.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GoldPick.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DiamondPick.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.NeptuniumPick.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.WoodenAxe.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CopperAxe.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.IronAxe.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GoldAxe.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.DiamondAxe.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.NeptuniumAxe.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.WoodenWhacker.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.CopperWhacker.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.IronWhacker.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.WoodenHoe.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.GoldBar.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.IronBar.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Diamond.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.NeptuniumBar.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Bucket.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.WaterBucket.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.WheatSlop.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.PumpkinSoup.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.MelonSmoothie.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Battery.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Player.isTillable(), "!isTillable");
      assertFalse(ObjectTypes.Fragment.isTillable(), "!isTillable");
    }

    {
      assertTrue(ObjectTypes.ForceField.isMachine(), "isMachine");
      assertFalse(ObjectTypes.Null.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Air.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Water.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Lava.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Stone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Bedrock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Deepslate.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Granite.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Tuff.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Calcite.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Basalt.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SmoothBasalt.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Andesite.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Diorite.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Cobblestone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MossyCobblestone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Obsidian.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Dripstone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Blackstone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CobbledDeepslate.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Amethyst.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Glowstone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Grass.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Dirt.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Moss.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Podzol.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DirtPath.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Mud.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PackedMud.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Farmland.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.WetFarmland.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Snow.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Ice.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.UnrevealedOre.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CoalOre.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CopperOre.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.IronOre.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GoldOre.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DiamondOre.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.NeptuniumOre.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Gravel.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Sand.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.RedSand.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Sandstone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.RedSandstone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Clay.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AnyTerracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Terracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BrownTerracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OrangeTerracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.WhiteTerracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.LightGrayTerracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.YellowTerracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.RedTerracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.LightBlueTerracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CyanTerracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BlackTerracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PurpleTerracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BlueTerracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MagentaTerracotta.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AnyLog.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OakLog.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BirchLog.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.JungleLog.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SakuraLog.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AcaciaLog.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SpruceLog.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DarkOakLog.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MangroveLog.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AnyLeaf.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OakLeaf.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BirchLeaf.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.JungleLeaf.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SakuraLeaf.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SpruceLeaf.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AcaciaLeaf.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DarkOakLeaf.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AzaleaLeaf.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MangroveLeaf.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MangroveRoots.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AzaleaFlower.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BellFlower.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DandelionFlower.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DaylilyFlower.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.LilacFlower.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.RoseFlower.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.FireFlower.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MorninggloryFlower.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PeonyFlower.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Ultraviolet.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SunFlower.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.FlyTrap.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.FescueGrass.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SwitchGrass.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.VinesBush.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.IvyVine.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.HempBush.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Coral.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SeaAnemone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Algae.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.HornCoralBlock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.FireCoralBlock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.TubeCoralBlock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BubbleCoralBlock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BrainCoralBlock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SpiderWeb.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Bone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GoldenMushroom.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.RedMushroom.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CoffeeBush.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.StrawberryBush.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.RaspberryBush.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Wheat.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CottonBush.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Pumpkin.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Melon.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.RedMushroomBlock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BrownMushroomBlock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MushroomStem.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BambooBush.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Cactus.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AnyPlank.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OakPlanks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BirchPlanks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.JunglePlanks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SakuraPlanks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SprucePlanks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AcaciaPlanks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DarkOakPlanks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MangrovePlanks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CopperBlock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.IronBlock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GoldBlock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DiamondBlock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.NeptuniumBlock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.WheatSeed.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PumpkinSeed.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MelonSeed.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OakSapling.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BirchSapling.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.JungleSapling.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SakuraSapling.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AcaciaSapling.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SpruceSapling.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DarkOakSapling.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MangroveSapling.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Furnace.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Workbench.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Powerstone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Chest.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SpawnTile.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Bed.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.TextSign.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Torch.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Stonecutter.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.StoneBricks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.TuffBricks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DeepslateBricks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedAndesite.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedGranite.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedDiorite.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedTuff.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedBasalt.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedBlackstone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.ChiseledDeepslate.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.ChiseledSandstone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CrackedStoneBricks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CrackedTuffBricks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SmoothSandstone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SmoothRedSandstone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SmoothStone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Cotton.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CottonSeed.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Glass.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Brick.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BrickBlock.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MudBricks.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Paper.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Book.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Stick.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.RedDye.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.YellowDye.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BlueDye.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GreenDye.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.WhiteDye.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BlackDye.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BrownDye.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OrangeDye.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PinkDye.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.LimeDye.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CyanDye.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GrayDye.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PurpleDye.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.WhiteConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OrangeConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MagentaConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.YellowConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.LimeConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PinkConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GrayConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CyanConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PurpleConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BlueConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BrownConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GreenConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.RedConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BlackConcretePowder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.WhiteConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OrangeConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MagentaConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.LightBlueConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.YellowConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.LimeConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PinkConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GrayConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.LightGrayConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CyanConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PurpleConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BlueConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BrownConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GreenConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.RedConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BlackConcrete.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GlassPane.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OakDoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BirchDoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.JungleDoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SakuraDoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AcaciaDoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SpruceDoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DarkOakDoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MangroveDoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.IronDoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OakTrapdoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BirchTrapdoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.JungleTrapdoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SakuraTrapdoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SpruceTrapdoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MangroveTrapdoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.IronTrapdoor.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OakFence.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BirchFence.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.JungleFence.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SakuraFence.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AcaciaFence.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SpruceFence.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DarkOakFence.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MangroveFence.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OakFenceGate.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BirchFenceGate.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.JungleFenceGate.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SakuraFenceGate.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AcaciaFenceGate.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SpruceFenceGate.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DarkOakFenceGate.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MangroveFenceGate.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.IronBars.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Lantern.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Ladder.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Barrel.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Bookshelf.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Carpet.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.FlowerPot.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Lodestone.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.StoneStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CobblestoneStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.StoneBricksStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SmoothStoneStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AndesiteStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GraniteStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DioriteStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.TuffStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BasaltStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BlackstoneStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedTuffStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DeepslateStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SandstoneStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.RedSandstoneStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BrickBlockStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MudBricksStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.TuffBricksStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OakPlanksStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BirchPlanksStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.JunglePlanksStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SprucePlanksStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.StoneSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CobblestoneSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.StoneBricksSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SmoothStoneSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AndesiteSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GraniteSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DioriteSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.TuffSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BasaltSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BlackstoneSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedTuffSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DeepslateSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SandstoneSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.RedSandstoneSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BrickBlockSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MudBricksSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.TuffBricksSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.OakPlanksSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BirchPlanksSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.JunglePlanksSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SprucePlanksSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.StoneWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CobblestoneWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.StoneBricksWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.AndesiteWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GraniteWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DioriteWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.TuffWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BasaltWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BlackstoneWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedGraniteWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedDioriteWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedTuffWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedBasaltWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DeepslateWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DeepslateBricksWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.SandstoneWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.RedSandstoneWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.BrickBlockWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MudBricksWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.TuffBricksWall.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.WoodenPick.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CopperPick.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.IronPick.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GoldPick.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DiamondPick.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.NeptuniumPick.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.WoodenAxe.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CopperAxe.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.IronAxe.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GoldAxe.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.DiamondAxe.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.NeptuniumAxe.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.WoodenWhacker.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.CopperWhacker.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.IronWhacker.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.WoodenHoe.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.GoldBar.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.IronBar.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Diamond.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.NeptuniumBar.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Bucket.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.WaterBucket.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.WheatSlop.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.PumpkinSoup.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.MelonSmoothie.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Battery.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Player.isMachine(), "!isMachine");
      assertFalse(ObjectTypes.Fragment.isMachine(), "!isMachine");
    }

    {
      assertTrue(ObjectTypes.Lava.spawnsWithFluid(), "spawnsWithFluid");
      assertTrue(ObjectTypes.Water.spawnsWithFluid(), "spawnsWithFluid");
      assertTrue(ObjectTypes.Coral.spawnsWithFluid(), "spawnsWithFluid");
      assertTrue(ObjectTypes.SeaAnemone.spawnsWithFluid(), "spawnsWithFluid");
      assertTrue(ObjectTypes.Algae.spawnsWithFluid(), "spawnsWithFluid");
      assertTrue(ObjectTypes.HornCoralBlock.spawnsWithFluid(), "spawnsWithFluid");
      assertTrue(ObjectTypes.FireCoralBlock.spawnsWithFluid(), "spawnsWithFluid");
      assertTrue(ObjectTypes.TubeCoralBlock.spawnsWithFluid(), "spawnsWithFluid");
      assertTrue(ObjectTypes.BubbleCoralBlock.spawnsWithFluid(), "spawnsWithFluid");
      assertTrue(ObjectTypes.BrainCoralBlock.spawnsWithFluid(), "spawnsWithFluid");
      assertFalse(ObjectTypes.Null.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Air.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Stone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Bedrock.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Deepslate.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Granite.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Tuff.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Calcite.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Basalt.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SmoothBasalt.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Andesite.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Diorite.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Cobblestone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MossyCobblestone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Obsidian.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Dripstone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Blackstone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CobbledDeepslate.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Amethyst.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Glowstone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Grass.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Dirt.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Moss.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Podzol.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DirtPath.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Mud.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PackedMud.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Farmland.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.WetFarmland.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Snow.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Ice.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.UnrevealedOre.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CoalOre.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CopperOre.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.IronOre.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GoldOre.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DiamondOre.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.NeptuniumOre.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Gravel.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Sand.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.RedSand.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Sandstone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.RedSandstone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Clay.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AnyTerracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Terracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BrownTerracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OrangeTerracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.WhiteTerracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.LightGrayTerracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.YellowTerracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.RedTerracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.LightBlueTerracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CyanTerracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BlackTerracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PurpleTerracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BlueTerracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MagentaTerracotta.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AnyLog.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OakLog.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BirchLog.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.JungleLog.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SakuraLog.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AcaciaLog.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SpruceLog.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DarkOakLog.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MangroveLog.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AnyLeaf.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OakLeaf.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BirchLeaf.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.JungleLeaf.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SakuraLeaf.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SpruceLeaf.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AcaciaLeaf.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DarkOakLeaf.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AzaleaLeaf.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MangroveLeaf.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MangroveRoots.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MuddyMangroveRoots.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AzaleaFlower.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BellFlower.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DandelionFlower.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DaylilyFlower.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.LilacFlower.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.RoseFlower.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.FireFlower.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MorninggloryFlower.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PeonyFlower.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Ultraviolet.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SunFlower.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.FlyTrap.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.FescueGrass.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SwitchGrass.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.VinesBush.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.IvyVine.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.HempBush.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SpiderWeb.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Bone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GoldenMushroom.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.RedMushroom.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CoffeeBush.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.StrawberryBush.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.RaspberryBush.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Wheat.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CottonBush.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Pumpkin.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Melon.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.RedMushroomBlock.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BrownMushroomBlock.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MushroomStem.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BambooBush.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Cactus.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AnyPlank.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OakPlanks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BirchPlanks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.JunglePlanks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SakuraPlanks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SprucePlanks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AcaciaPlanks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DarkOakPlanks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MangrovePlanks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CopperBlock.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.IronBlock.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GoldBlock.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DiamondBlock.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.NeptuniumBlock.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.WheatSeed.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PumpkinSeed.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MelonSeed.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OakSapling.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BirchSapling.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.JungleSapling.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SakuraSapling.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AcaciaSapling.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SpruceSapling.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DarkOakSapling.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MangroveSapling.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Furnace.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Workbench.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Powerstone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.ForceField.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Chest.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SpawnTile.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Bed.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.TextSign.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Torch.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Stonecutter.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.StoneBricks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.TuffBricks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DeepslateBricks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedAndesite.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedGranite.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedDiorite.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedTuff.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedBasalt.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedBlackstone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.ChiseledStoneBricks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.ChiseledTuffBricks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.ChiseledDeepslate.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.ChiseledSandstone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.ChiseledRedSandstone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CrackedStoneBricks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CrackedTuffBricks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SmoothSandstone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SmoothRedSandstone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SmoothStone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Cotton.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CottonSeed.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Glass.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Brick.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BrickBlock.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MudBricks.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Paper.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Book.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Stick.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.RedDye.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.YellowDye.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BlueDye.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GreenDye.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.WhiteDye.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BlackDye.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BrownDye.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OrangeDye.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PinkDye.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.LimeDye.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CyanDye.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GrayDye.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PurpleDye.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.WhiteConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OrangeConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MagentaConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.LightBlueConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.YellowConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.LimeConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PinkConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GrayConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.LightGrayConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CyanConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PurpleConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BlueConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BrownConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GreenConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.RedConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BlackConcretePowder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.WhiteConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OrangeConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MagentaConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.LightBlueConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.YellowConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.LimeConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PinkConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GrayConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.LightGrayConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CyanConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PurpleConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BlueConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BrownConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GreenConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.RedConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BlackConcrete.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GlassPane.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OakDoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BirchDoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.JungleDoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SakuraDoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AcaciaDoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SpruceDoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DarkOakDoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MangroveDoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.IronDoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OakTrapdoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BirchTrapdoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.JungleTrapdoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SakuraTrapdoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AcaciaTrapdoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SpruceTrapdoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DarkOakTrapdoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MangroveTrapdoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.IronTrapdoor.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OakFence.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BirchFence.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.JungleFence.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SakuraFence.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AcaciaFence.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SpruceFence.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DarkOakFence.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MangroveFence.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OakFenceGate.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BirchFenceGate.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.JungleFenceGate.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SakuraFenceGate.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AcaciaFenceGate.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SpruceFenceGate.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DarkOakFenceGate.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MangroveFenceGate.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.IronBars.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Lantern.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Ladder.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Barrel.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Bookshelf.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Carpet.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.FlowerPot.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Lodestone.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.StoneStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CobblestoneStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.StoneBricksStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SmoothStoneStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AndesiteStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GraniteStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DioriteStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.TuffStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BasaltStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BlackstoneStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedGraniteStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedDioriteStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedTuffStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedBasaltStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DeepslateStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DeepslateBricksStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SandstoneStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.RedSandstoneStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BrickBlockStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MudBricksStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.TuffBricksStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OakPlanksStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BirchPlanksStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.JunglePlanksStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SakuraPlanksStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SprucePlanksStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MangrovePlanksStairs.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.StoneSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CobblestoneSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.StoneBricksSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SmoothStoneSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AndesiteSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GraniteSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DioriteSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.TuffSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BasaltSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BlackstoneSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedGraniteSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedDioriteSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedTuffSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedBasaltSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DeepslateSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DeepslateBricksSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SandstoneSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.RedSandstoneSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BrickBlockSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MudBricksSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.TuffBricksSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.OakPlanksSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BirchPlanksSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.JunglePlanksSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SakuraPlanksSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SprucePlanksSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MangrovePlanksSlab.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.StoneWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CobblestoneWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MossyCobblestoneWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.StoneBricksWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.AndesiteWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GraniteWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DioriteWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.TuffWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BasaltWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BlackstoneWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedAndesiteWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedGraniteWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedDioriteWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedTuffWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedBasaltWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DeepslateWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CobbledDeepslateWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DeepslateBricksWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.SandstoneWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.RedSandstoneWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.BrickBlockWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MudBricksWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.TuffBricksWall.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.WoodenPick.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CopperPick.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.IronPick.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GoldPick.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DiamondPick.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.NeptuniumPick.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.WoodenAxe.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CopperAxe.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.IronAxe.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GoldAxe.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.DiamondAxe.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.NeptuniumAxe.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.WoodenWhacker.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.CopperWhacker.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.IronWhacker.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.WoodenHoe.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.GoldBar.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.IronBar.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Diamond.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.NeptuniumBar.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Bucket.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.WaterBucket.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.WheatSlop.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.PumpkinSoup.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.MelonSmoothie.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Battery.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Player.spawnsWithFluid(), "!spawnsWithFluid");
      assertFalse(ObjectTypes.Fragment.spawnsWithFluid(), "!spawnsWithFluid");
    }

    {
      assertTrue(ObjectTypes.Stone.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Deepslate.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Granite.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Tuff.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Calcite.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Basalt.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.SmoothBasalt.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Andesite.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Diorite.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Cobblestone.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.MossyCobblestone.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Obsidian.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Dripstone.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Blackstone.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.CobbledDeepslate.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Amethyst.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Glowstone.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Grass.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Dirt.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Moss.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Podzol.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Mud.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.PackedMud.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Ice.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.CoalOre.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.CopperOre.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.IronOre.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.GoldOre.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.DiamondOre.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.NeptuniumOre.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Gravel.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Sand.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.RedSand.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Sandstone.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.RedSandstone.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Clay.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Terracotta.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.BrownTerracotta.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.OrangeTerracotta.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.WhiteTerracotta.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.LightGrayTerracotta.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.YellowTerracotta.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.RedTerracotta.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.LightBlueTerracotta.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.CyanTerracotta.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.BlackTerracotta.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.PurpleTerracotta.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.BlueTerracotta.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.MagentaTerracotta.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.OakLog.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.BirchLog.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.JungleLog.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.SakuraLog.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.AcaciaLog.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.SpruceLog.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.DarkOakLog.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.MangroveLog.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.OakLeaf.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.BirchLeaf.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.JungleLeaf.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.SakuraLeaf.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.SpruceLeaf.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.AcaciaLeaf.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.DarkOakLeaf.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.AzaleaLeaf.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.FloweringAzaleaLeaf.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.MangroveLeaf.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.MangroveRoots.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.MuddyMangroveRoots.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Coral.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.SeaAnemone.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Algae.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.HornCoralBlock.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.FireCoralBlock.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.TubeCoralBlock.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.BubbleCoralBlock.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.BrainCoralBlock.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Bone.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.OakPlanks.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.BirchPlanks.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.JunglePlanks.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.SakuraPlanks.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.SprucePlanks.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.AcaciaPlanks.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.DarkOakPlanks.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.MangrovePlanks.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.CopperBlock.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.IronBlock.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.GoldBlock.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.DiamondBlock.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.NeptuniumBlock.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Workbench.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Powerstone.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.ForceField.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Chest.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.SpawnTile.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.TextSign.isWaterloggable(), "isWaterloggable");
      assertTrue(ObjectTypes.Torch.isWaterloggable(), "isWaterloggable");
      assertFalse(ObjectTypes.Null.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Air.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Water.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Lava.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Bedrock.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DirtPath.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Farmland.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.WetFarmland.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Snow.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.UnrevealedOre.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AnyTerracotta.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AnyLog.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AnyLeaf.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AzaleaFlower.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BellFlower.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DandelionFlower.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DaylilyFlower.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.LilacFlower.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.RoseFlower.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.FireFlower.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MorninggloryFlower.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PeonyFlower.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Ultraviolet.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SunFlower.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.FlyTrap.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.FescueGrass.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SwitchGrass.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.VinesBush.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.IvyVine.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.HempBush.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SpiderWeb.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GoldenMushroom.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.RedMushroom.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CoffeeBush.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.StrawberryBush.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.RaspberryBush.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Wheat.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CottonBush.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Pumpkin.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Melon.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.RedMushroomBlock.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BrownMushroomBlock.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MushroomStem.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BambooBush.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Cactus.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AnyPlank.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.WheatSeed.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PumpkinSeed.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MelonSeed.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.OakSapling.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BirchSapling.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.JungleSapling.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SakuraSapling.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AcaciaSapling.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SpruceSapling.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DarkOakSapling.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MangroveSapling.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Furnace.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Bed.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Stonecutter.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.StoneBricks.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.TuffBricks.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DeepslateBricks.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedAndesite.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedGranite.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedDiorite.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedTuff.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedBasalt.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedBlackstone.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.ChiseledDeepslate.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.ChiseledSandstone.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CrackedStoneBricks.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CrackedTuffBricks.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SmoothSandstone.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SmoothRedSandstone.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SmoothStone.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Cotton.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CottonSeed.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Glass.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Brick.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BrickBlock.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MudBricks.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Paper.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Book.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Stick.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.RedDye.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.YellowDye.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BlueDye.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GreenDye.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.WhiteDye.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BlackDye.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BrownDye.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.OrangeDye.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PinkDye.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.LimeDye.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CyanDye.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GrayDye.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PurpleDye.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.WhiteConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.OrangeConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MagentaConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.YellowConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.LimeConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PinkConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GrayConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CyanConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PurpleConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BlueConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BrownConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GreenConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.RedConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BlackConcretePowder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.WhiteConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.OrangeConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MagentaConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.LightBlueConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.YellowConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.LimeConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PinkConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GrayConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.LightGrayConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CyanConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PurpleConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BlueConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BrownConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GreenConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.RedConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BlackConcrete.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GlassPane.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.OakDoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BirchDoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.JungleDoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SakuraDoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AcaciaDoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SpruceDoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DarkOakDoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MangroveDoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.IronDoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.OakTrapdoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BirchTrapdoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.JungleTrapdoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SakuraTrapdoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SpruceTrapdoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MangroveTrapdoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.IronTrapdoor.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.OakFence.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BirchFence.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.JungleFence.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SakuraFence.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AcaciaFence.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SpruceFence.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DarkOakFence.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MangroveFence.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.OakFenceGate.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BirchFenceGate.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.JungleFenceGate.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SakuraFenceGate.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AcaciaFenceGate.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SpruceFenceGate.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DarkOakFenceGate.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MangroveFenceGate.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.IronBars.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Lantern.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Ladder.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Barrel.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Bookshelf.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Carpet.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.FlowerPot.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Lodestone.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.StoneStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CobblestoneStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.StoneBricksStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SmoothStoneStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AndesiteStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GraniteStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DioriteStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.TuffStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BasaltStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BlackstoneStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedTuffStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DeepslateStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SandstoneStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.RedSandstoneStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BrickBlockStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MudBricksStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.TuffBricksStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.OakPlanksStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BirchPlanksStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.JunglePlanksStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SprucePlanksStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.StoneSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CobblestoneSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.StoneBricksSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SmoothStoneSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AndesiteSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GraniteSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DioriteSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.TuffSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BasaltSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BlackstoneSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedTuffSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DeepslateSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SandstoneSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.RedSandstoneSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BrickBlockSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MudBricksSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.TuffBricksSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.OakPlanksSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BirchPlanksSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.JunglePlanksSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SprucePlanksSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.StoneWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CobblestoneWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.StoneBricksWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.AndesiteWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GraniteWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DioriteWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.TuffWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BasaltWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BlackstoneWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedGraniteWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedDioriteWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedTuffWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedBasaltWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DeepslateWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DeepslateBricksWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.SandstoneWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.RedSandstoneWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.BrickBlockWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MudBricksWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.TuffBricksWall.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.WoodenPick.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CopperPick.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.IronPick.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GoldPick.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DiamondPick.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.NeptuniumPick.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.WoodenAxe.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CopperAxe.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.IronAxe.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GoldAxe.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.DiamondAxe.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.NeptuniumAxe.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.WoodenWhacker.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.CopperWhacker.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.IronWhacker.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.WoodenHoe.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.GoldBar.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.IronBar.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Diamond.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.NeptuniumBar.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Bucket.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.WaterBucket.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.WheatSlop.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.PumpkinSoup.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.MelonSmoothie.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Battery.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Player.isWaterloggable(), "!isWaterloggable");
      assertFalse(ObjectTypes.Fragment.isWaterloggable(), "!isWaterloggable");
    }

    {
      assertTrue(ObjectTypes.Dirt.isPreferredSpawn(), "isPreferredSpawn");
      assertTrue(ObjectTypes.Grass.isPreferredSpawn(), "isPreferredSpawn");
      assertTrue(ObjectTypes.Sand.isPreferredSpawn(), "isPreferredSpawn");
      assertTrue(ObjectTypes.Stone.isPreferredSpawn(), "isPreferredSpawn");
      assertFalse(ObjectTypes.Null.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Air.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Water.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Lava.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Bedrock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Deepslate.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Granite.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Tuff.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Calcite.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Basalt.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SmoothBasalt.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Andesite.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Diorite.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Cobblestone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MossyCobblestone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Obsidian.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Dripstone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Blackstone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CobbledDeepslate.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Amethyst.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Glowstone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Moss.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Podzol.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DirtPath.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Mud.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PackedMud.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Farmland.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.WetFarmland.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Snow.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Ice.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.UnrevealedOre.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CoalOre.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CopperOre.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.IronOre.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GoldOre.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DiamondOre.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.NeptuniumOre.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Gravel.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.RedSand.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Sandstone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.RedSandstone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Clay.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AnyTerracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Terracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BrownTerracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OrangeTerracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.WhiteTerracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.LightGrayTerracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.YellowTerracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.RedTerracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.LightBlueTerracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CyanTerracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BlackTerracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PurpleTerracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BlueTerracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MagentaTerracotta.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AnyLog.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OakLog.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BirchLog.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.JungleLog.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SakuraLog.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AcaciaLog.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SpruceLog.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DarkOakLog.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MangroveLog.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AnyLeaf.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OakLeaf.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BirchLeaf.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.JungleLeaf.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SakuraLeaf.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SpruceLeaf.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AcaciaLeaf.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DarkOakLeaf.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AzaleaLeaf.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.FloweringAzaleaLeaf.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MangroveLeaf.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MangroveRoots.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MuddyMangroveRoots.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AzaleaFlower.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BellFlower.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DandelionFlower.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DaylilyFlower.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.LilacFlower.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.RoseFlower.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.FireFlower.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MorninggloryFlower.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PeonyFlower.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Ultraviolet.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SunFlower.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.FlyTrap.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.FescueGrass.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SwitchGrass.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.VinesBush.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.IvyVine.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.HempBush.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Coral.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SeaAnemone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Algae.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.HornCoralBlock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.FireCoralBlock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.TubeCoralBlock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BubbleCoralBlock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BrainCoralBlock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SpiderWeb.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Bone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GoldenMushroom.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.RedMushroom.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CoffeeBush.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.StrawberryBush.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.RaspberryBush.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Wheat.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CottonBush.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Pumpkin.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Melon.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.RedMushroomBlock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BrownMushroomBlock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MushroomStem.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BambooBush.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Cactus.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AnyPlank.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OakPlanks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BirchPlanks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.JunglePlanks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SakuraPlanks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SprucePlanks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AcaciaPlanks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DarkOakPlanks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MangrovePlanks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CopperBlock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.IronBlock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GoldBlock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DiamondBlock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.NeptuniumBlock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.WheatSeed.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PumpkinSeed.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MelonSeed.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OakSapling.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BirchSapling.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.JungleSapling.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SakuraSapling.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AcaciaSapling.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SpruceSapling.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DarkOakSapling.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MangroveSapling.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Furnace.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Workbench.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Powerstone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.ForceField.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Chest.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SpawnTile.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Bed.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.TextSign.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Torch.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Stonecutter.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.StoneBricks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.TuffBricks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DeepslateBricks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedAndesite.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedGranite.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedDiorite.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedTuff.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedBasalt.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedBlackstone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.ChiseledStoneBricks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.ChiseledTuffBricks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.ChiseledDeepslate.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.ChiseledPolishedBlackstone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.ChiseledSandstone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.ChiseledRedSandstone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CrackedStoneBricks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CrackedTuffBricks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CrackedDeepslateBricks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SmoothSandstone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SmoothRedSandstone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SmoothStone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Cotton.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CottonSeed.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Glass.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Brick.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BrickBlock.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MudBricks.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Paper.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Book.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Stick.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.RedDye.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.YellowDye.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BlueDye.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GreenDye.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.WhiteDye.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BlackDye.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BrownDye.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OrangeDye.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PinkDye.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.LimeDye.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CyanDye.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GrayDye.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PurpleDye.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.WhiteConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OrangeConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MagentaConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.LightBlueConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.YellowConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.LimeConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PinkConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GrayConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.LightGrayConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CyanConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PurpleConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BlueConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BrownConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GreenConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.RedConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BlackConcretePowder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.WhiteConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OrangeConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MagentaConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.LightBlueConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.YellowConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.LimeConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PinkConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GrayConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.LightGrayConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CyanConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PurpleConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BlueConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BrownConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GreenConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.RedConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BlackConcrete.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GlassPane.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OakDoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BirchDoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.JungleDoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SakuraDoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AcaciaDoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SpruceDoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DarkOakDoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MangroveDoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.IronDoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OakTrapdoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BirchTrapdoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.JungleTrapdoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SakuraTrapdoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AcaciaTrapdoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SpruceTrapdoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DarkOakTrapdoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MangroveTrapdoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.IronTrapdoor.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OakFence.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BirchFence.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.JungleFence.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SakuraFence.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AcaciaFence.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SpruceFence.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DarkOakFence.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MangroveFence.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OakFenceGate.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BirchFenceGate.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.JungleFenceGate.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SakuraFenceGate.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AcaciaFenceGate.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SpruceFenceGate.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DarkOakFenceGate.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MangroveFenceGate.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.IronBars.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Lantern.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Ladder.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Barrel.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Bookshelf.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Carpet.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.FlowerPot.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Lodestone.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.StoneStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CobblestoneStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MossyCobblestoneStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.StoneBricksStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SmoothStoneStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AndesiteStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GraniteStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DioriteStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.TuffStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BasaltStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BlackstoneStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedAndesiteStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedGraniteStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedDioriteStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedTuffStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedBasaltStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedBlackstoneStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DeepslateStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CobbledDeepslateStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DeepslateBricksStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SandstoneStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.RedSandstoneStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SmoothSandstoneStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SmoothRedSandstoneStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BrickBlockStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MudBricksStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.TuffBricksStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OakPlanksStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BirchPlanksStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.JunglePlanksStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SakuraPlanksStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AcaciaPlanksStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SprucePlanksStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DarkOakPlanksStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MangrovePlanksStairs.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.StoneSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CobblestoneSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MossyCobblestoneSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.StoneBricksSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SmoothStoneSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AndesiteSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GraniteSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DioriteSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.TuffSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BasaltSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BlackstoneSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedAndesiteSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedGraniteSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedDioriteSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedTuffSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedBasaltSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedBlackstoneSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DeepslateSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CobbledDeepslateSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DeepslateBricksSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SandstoneSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.RedSandstoneSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SmoothSandstoneSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SmoothRedSandstoneSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BrickBlockSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MudBricksSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.TuffBricksSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.OakPlanksSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BirchPlanksSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.JunglePlanksSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SakuraPlanksSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AcaciaPlanksSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SprucePlanksSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DarkOakPlanksSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MangrovePlanksSlab.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.StoneWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CobblestoneWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MossyCobblestoneWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.StoneBricksWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.AndesiteWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GraniteWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DioriteWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.TuffWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BasaltWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BlackstoneWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedAndesiteWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedGraniteWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedDioriteWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedTuffWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedBasaltWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PolishedBlackstoneWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DeepslateWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CobbledDeepslateWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DeepslateBricksWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.SandstoneWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.RedSandstoneWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.BrickBlockWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MudBricksWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.TuffBricksWall.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.WoodenPick.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CopperPick.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.IronPick.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GoldPick.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DiamondPick.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.NeptuniumPick.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.WoodenAxe.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CopperAxe.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.IronAxe.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GoldAxe.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.DiamondAxe.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.NeptuniumAxe.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.WoodenWhacker.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.CopperWhacker.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.IronWhacker.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.WoodenHoe.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.GoldBar.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.IronBar.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Diamond.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.NeptuniumBar.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Bucket.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.WaterBucket.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.WheatSlop.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.PumpkinSoup.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.MelonSmoothie.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Battery.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Player.isPreferredSpawn(), "!isPreferredSpawn");
      assertFalse(ObjectTypes.Fragment.isPreferredSpawn(), "!isPreferredSpawn");
    }
  }
}
